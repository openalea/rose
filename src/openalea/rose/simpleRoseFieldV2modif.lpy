from numpy import *

########### TIME of the model and the crop (A externaliser) ###############
# Initialization
# à ne pas externaliser
step=0
ddC=0.# Thermal Time of the crop; ATTENTION: a etablir bien avant tous les debourrements
# Steps
timestep=1.
Ddd=10.# Timestep of the model in degree days
nsteps=60 # number of model steps

########### Model paramaters (A laisser dans le code) #############
# Curvature parameters for Weibull extension functions
cfolA=3.5 #  a faire dépendre du rang; du coup comment faire quand on a un nombre de phyto variable ??? (a voir si expression en relatif ou non selon resultats sur ordre 2)
cEN=5 # for internodes and the peduncle
Fola2Rachis=(0.9,0.1) # coefficients -slope and intercept- of the linear relationship between leaflet A length and rachis length; il faut encore trouver la bonne relation 


########### Input variables (A externaliser)#####################################
# At the plant scale
ddEM=60. ## emergence date of the plants
nphy=15 # phytomers number plus one corresponding to the peduncle (bearing a virtual leaf)
Stages=(460.,570.,760.,860.) #stages of floral development: BFV,CPV,FO,FF
DmaxFlo=0.5
DminFlo=0.05
# At the leaf scale
ApF=(-10.,-10.,-10.,-10.,-10.,-10.,-10.,25.,60.,120.,180.,240.,300.,360.,420.) # Leaf apparition date, in thermal time since plant emergence; calculated by a fitting procedure in R
LmaxfolA=(0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.3,0.4,0.5,0.6,0.5,0.4,0.3,0.) # Final length of leaflet A, in mm
LmaxEN=(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.10,0.15,0.20,0.25,0.20,0.15,0.10,0.6) # Final length of the internodes plus the peduncle, in mm
# Modifier la suite:
RmaxRachis=0.005
nfol=5 ## pour l'instant ne sert pas
RmaxEN=0.03



######### Functions used for the calculations ###################

# Rajouter une fonction pour calculer le nb de phytomères

# Calculation of the rachis length as a function of the terminal leaflet length
def Lrachis(lfola,fola2rachis):
  #lrachis=lfola*fola2rachis[0]+fola2rachis[1]
  return lfola*fola2rachis[0]+fola2rachis[1]

# Calculation of the tmax parameters of the extension function from the thermal time of leaf appearance
def tmaxFolAFUN(apf):
  tmax=1.37*apf+71.62
  return tmax
def tmaxENFUN(apf):
  tmax=1.37*apf+83.88
  return tmax

# Weibull extension function for leaves and internodes, with as parameters, the final length of the organ, c and tmax parameters, and the thermal time since plant emergence (careful:weibull does not work for negative values)
def extend(lengthMax,c,tmax,dd):
  L=lengthMax*(1-exp(-(c-1)/c*(dd/tmax)**c))  
  if L>=lengthMax*0.98:
    L=lengthMax
  return L

# Flower opening
def extendFlower(stage,dmax,dd):
  if dd>=stage[3]:
    D=dmax
  else:
    slope=(dmax-0.05)/(stage[3]-stage[0])
    intercept=dmax-slope*stage[3]
    D=slope*dd+intercept
  return D

# Calculation of the number of leaves appearing in a time step defined by its lower and upper limits
def NbApF(low,up):
  nb=0
  for i in ApF:
    if i>=low and i<up:
       nb=nb+1
  return nb



######### Le L-system #############################

module canopy(nplants)
module plant(x,y,z)
module A(n,N,dd0)
module leaf(LfolA,Lrachis,dd0,n)
module EN(L,dd0,n)
module Flower(D,dd0,n)

Axiom: canopy(1)

def StartEach():
  global step
  global ddC
  step=step+timestep
  ddC=ddC+Ddd
  
def EndEach():
  print("   ")

derivation length: nsteps
production:

canopy(nplants):
  i=1
  j=1
  for p in range(nplants):
    x=15*i
    y=15*j
    z=0
    if (p+1)%6==0:
      j=j+1
      i=1
    else:
      i=i+1
    nproduce plant(0,0,0)A(0,nphy,ddEM)

# theoriquement faire apparaître les 8 feuilles et EN deja presents dans le bourgeon
# la condition dd<0 est necessaire car Weibull donne une fonction décroissante pour les valeurs negatives
A(n,N,dd0):
  dd=ddC-dd0
  print ddC,dd
  nF2do=N-1-n
  if nF2do>0:
    print dd
    if dd<0 and dd>=ApF[n] and dd<ApF[n]+Ddd:
      nbAp=NbApF(ApF[n],ApF[n]+Ddd)
      for i in range(nbAp):
        n=n+1
        nproduce EN(0.005,dd0,n)[leaf(0.005,0.005,dd0,n)]A(n,N,dd0)
    elif dd>=0 and dd>=ApF[n] and dd<ApF[n]+Ddd:
      nbAp=NbApF(ApF[n],ApF[n]+Ddd)
      for i in range(nbAp):
        n=n+1
        tmaxEN=tmaxENFUN(ApF[n-1])
        tmaxFolA=tmaxFolAFUN(ApF[n-1])
        len=extend(LmaxEN[n-1],cEN,tmaxEN,dd)
        lengthfola=extend(LmaxfolA[n-1],cfolA,tmaxFolA,dd)
        lrachis=lengthfola*Fola2Rachis[0]+Fola2Rachis[1]
        nproduce EN(len,dd0,n)[leaf(lengthfola,lrachis,dd0,n)]A(n,N,dd0)
    else:
      produce A(n,N,dd0)
  elif n==N-1:
    if dd>=ApF[n] and dd<ApF[n]+Ddd:
      produce EN(0.005,dd0,N)A(N,N,dd0)
    else:
      produce A(n,N,dd0)
  else:
    produce Flower(0.05,dd0,N)
    


# attention: proportionnalite du rachis à la foliole
# mettre un debut d'extension un peu vaant debourrement en fait
leaf(LfolA,Lrachis,dd0,n):
  dd=ddC-dd0
  #print ddC
  if dd>=dd0:
    tmax=tmaxFolAFUN(ApF[n-1])
    lengthfola=extend(LmaxfolA[n-1],cfolA,tmax,dd)
    #print lengthfola,Fola2Rachis
    #lrachis=Lrachis(lengthfola,Fola2Rachis)
    lrachis=lengthfola*Fola2Rachis[0]+Fola2Rachis[1]
    produce leaf(lengthfola,lrachis,dd0,n)
  else:
    produce leaf(LfolA,Lrachis,dd0,n)

# l'entre-noeud prend l'age de la feuille
EN(L,dd0,n):
  dd=ddC-dd0
  if dd>=dd0:
    tmax=tmaxENFUN(ApF[n-1])
    produce EN(extend(LmaxEN[n-1],cEN,tmax,dd),dd0,n)
  else:
    produce EN(L,dd0,n)

Flower(D,dd0,n):
  dd=ddC-dd0
  apFN=ApF[nphy-1]
  produce Flower(extendFlower(Stages,DmaxFlo,dd),dd0,n)


################### GEOMETRIC INTERPRETATION (A externaliser) ############################

interpretation:
plant(x,y,z)-->@M(x,y,z)
# attention: il tourne les plantes les unes par rapport aux autres
#leaf(length,age)-->;(2)+(90)_(1)F(LmaxLeaf)
# pour l'instant, toutes les folioles d'une feuille ont la même longueur que la foliole A et la forme des folioles est celle prédéfinie dans Lpy
# je n'ai rien fait d'automatique pour la visualisation en fonction du nombre de folioles
leaf(LfolA,Lrachis,dd0,n)-->;(2)+(70)/(90)_(0.01)F(2*Lrachis/(nfol+1))+(90)~l(LfolA)-(180)~l(LfolA)+(90)_(0.01)F(2*Lrachis/(nfol+1))+(90)~l(LfolA)-(180)~l(LfolA)+(90)_(0.01)F(2*Lrachis/(nfol+1))~l(LfolA)
#leaf(LfolA,Lrachis,dd0,n)-->;(2)+(90)/(90)_(0.1)F(2*LmaxRachis/(nfol+1))+(90)~l(LmaxfolA)-(180)~l(LmaxfolA)+(90)_(0.1)F(2*LmaxRachis/(nfol+1))+(90)~l(LmaxfolA)-(180)~l(LmaxfolA)+(90)_(0.1)F(2*LmaxRachis/(nfol+1))~l(LmaxfolA)
#EN(L,dd0,n)-->/(180)_(0.2)F(LmaxEN)
EN(L,dd0,n)-->/(180)_(0.02)F(L)
Flower(D,dd0,n)-->;(3)@O(D)
A(n,N,dd0)-->*

endlsystem