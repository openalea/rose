
# This file has been generated at Fri Sep 23 12:40:45 2011

from openalea.core import *


__name__ = 'Rose'

__editable__ = True
__description__ = ''
__license__ = ''
__url__ = ''
__alias__ = []
__version__ = ''
__authors__ = ''
__institutes__ = ''
__icon__ = ''


__all__ = ['_89431760', 'mesh_roseLeaflet_mesh_roseLeaflet', 'MTG_union_MTG_union', 'PlantFrame_Rose_PlantFrame_Rose', 'PlantReconstruction', 'httpFileList_httpFileList', '_89431440', 'LocalDir2DictOfFiles_LocalDir2DictOfFiles', 'httpDir2DictOfFiles_httpDir2DictOfFiles', 'Canopy2011Driver', 'GetLocalFiles', 'DigitReconstruction', 'RoseLpy', 'GetMTG_GetMTG', 'NoLeaflet_NoLeaflet', 'SceneRotation_SceneRotation', 'computeLeaflet4pts_computeLeaflet4pts', 'CanopyReconstruction2011', 'PlantPositionning_PlantPositionning', 'CropGeneration_2011_CropGeneration_2011', 'Leaflet_Orientation_4points_Leaflet_Orientation_4points', 'ReconstructionWithTurtle_ReconstructionWithTurtle', 'GetWebFiles', 'CropGeneration_CropGeneration', 'tortue_tortue', 'leaflet_orientation_leaflet_orientation', 'CanopyReconstruction', 'VertexVisitor_VertexVisitor', '_89431888', '_89431568', 'gridFile2Dict_gridFile2Dict', 'Files2MTGs_Files2MTGs']


_89431760 = DataFactory(name='rose.drf',
                    description='',
                    editors=None,
                    includes=None,
                    )



mesh_roseLeaflet_mesh_roseLeaflet = Factory(name='mesh_roseLeaflet',
                authors=' (wralea authors)',
                description='',
                category='data processing',
                nodemodule='mesh_roseLeaflet',
                nodeclass='mesh_roseLeaflet',
                inputs=[{'interface': ISequence, 'name': 'x', 'value': None, 'desc': ''}, {'interface': ISequence, 'name': 'y', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'triangleSet', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




MTG_union_MTG_union = Factory(name='MTG_union',
                authors=' (wralea authors)',
                description='make the union of MTGs',
                category='data processing',
                nodemodule='MTG_union',
                nodeclass='MTG_union',
                inputs=[{'interface': ISequence, 'name': 'MTGsIn', 'value': None, 'desc': 'a list of MTG objects'}],
                outputs=[{'interface': IData, 'name': 'MTGOut', 'desc': 'the input list in 1 MTG'}],
                widgetmodule=None,
                widgetclass=None,
               )




PlantFrame_Rose_PlantFrame_Rose = Factory(name='PlantFrame_Rose',
                authors=' (wralea authors)',
                description='',
                category='scene design',
                nodemodule='PlantFrame_Rose',
                nodeclass='PlantFrame_Rose',
                inputs=[{'interface': None, 'name': 'mtg_file', 'value': None, 'desc': ''}, {'interface': None, 'name': 'drf_p', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}, {'interface': None, 'name': 'mtg_file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




PlantReconstruction = CompositeNodeFactory(name='PlantReconstruction',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[  {  'desc': '', 'interface': IData, 'name': 'mtg', 'value': None},
   {  'desc': '', 'interface': None, 'name': 'mesh leaflet', 'value': None}],
                             outputs=[{  'desc': '', 'interface': None, 'name': 'scene'}],
                             elt_factory={  2: ('Rose', 'leaflet_orientation'),
   3: ('openalea.math', '+'),
   4: ('Rose', 'SceneRotation'),
   5: ('Rose', 'PlantFrame_Rose'),
   6: ('Rose', 'rose.drf')},
                             elt_connections={  6402872: (5, 0, 3, 1),
   6402896: ('__in__', 1, 2, 2),
   6402920: (4, 0, '__out__', 0),
   6402944: ('__in__', 0, 5, 0),
   6402968: (2, 0, 3, 0),
   6402992: ('__in__', 0, 2, 0),
   6403016: (3, 0, 4, 0),
   6403040: (6, 0, 5, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'leaflet_orientation',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c74510> : "leaflet_orientation"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -107.0344947815326,
         'posy': -64.53029571565743,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x2a8d990> : "+"',
         'hide': True,
         'id': 3,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -1.258015404399469,
         'posy': -21.646059262538635,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'SceneRotation',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c74650> : "SceneRotation"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -34.502511218242105,
         'posy': 22.907982785501325,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'PlantFrame_Rose',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c74550> : "PlantFrame_Rose"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 36.91979973646124,
         'posy': -62.34167088030966,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'rose.drf',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x3c744d0> : "rose.drf"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 69.20545813750195,
         'posy': -128.68916585144234,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': -0.9146958862529146,
                'posy': -159.86619998428444,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': -2.5518457517994264,
                 'posy': 69.8337031630033,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(1, 'None')],
   3: [],
   4: [],
   5: [],
   6: [(0, 'PackageData(Rose, rose.drf)'), (1, 'None'), (2, 'None')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-107.0344947815326, -64.53029571565743],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-1.258015404399469, -21.646059262538635],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-34.502511218242105, 22.907982785501325],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [36.91979973646124, -62.34167088030966],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [69.20545813750195, -128.68916585144234],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [-0.9146958862529146, -159.86619998428444],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [-2.5518457517994264, 69.8337031630033],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




httpFileList_httpFileList = Factory(name='httpFileList',
                authors=' (wralea authors)',
                description='get a list of files from a directory within an URL',
                category='data processing',
                nodemodule='httpFileList',
                nodeclass='httpFileList',
                inputs=[{'interface': IData, 'name': 'htmlFile', 'value': None, 'desc': 'HTML text that is supposed to list a directory of a web server'}, {'interface': IStr, 'name': 'filtre', 'value': None, 'desc': 'a filter to select filenames with'}],
                outputs=[{'interface': ISequence, 'name': 'ListOfFiles', 'desc': 'the list of files found on the server'}],
                widgetmodule=None,
                widgetclass=None,
               )



_89431440 = DataFactory(name='21052010_BFV.txt',
                    description='',
                    editors=None,
                    includes=None,
                    )



LocalDir2DictOfFiles_LocalDir2DictOfFiles = Factory(name='LocalDir2DictOfFiles',
                authors=' (wralea authors)',
                description='makes a dict of names: complete_path from a dirname and a name filter',
                category='data i/o',
                nodemodule='LocalDir2DictOfFiles',
                nodeclass='LocalDir2DictOfFiles',
                inputs=[{'interface': IStr, 'name': 'ListOfFiles', 'value': None, 'desc': 'The name of a directory'}],
                outputs=[{'interface': IDict, 'name': 'DictOfFiles', 'desc': 'A dictionnary of basename:complete_path'}],
                widgetmodule=None,
                widgetclass=None,
               )




httpDir2DictOfFiles_httpDir2DictOfFiles = Factory(name='httpDir2DictOfFiles',
                authors=' (wralea authors)',
                description='downloads files from a web server in temp. files, then return the dictionnary that associates temp files and filenames.',
                category='data processing',
                nodemodule='httpDir2DictOfFiles',
                nodeclass='httpDir2DictOfFiles',
                inputs=[{'interface': IStr, 'name': 'URL', 'value': None, 'desc': 'The URL to download files from.'}, {'interface': IStr, 'name': 'filtre', 'value': '', 'desc': 'a string to filter filenames'}],
                outputs=[{'interface': IDict, 'name': 'DictOfFiles', 'desc': 'The dictionnary that associates the requested filenames to their actual name.'}],
                widgetmodule=None,
                widgetclass=None,
               )




Canopy2011Driver = CompositeNodeFactory(name='Canopy2011Driver',
                             description='drives data search for CanopyReconstruction2011 nodes',
                             category='data processing',
                             doc='',
                             inputs=[  {  'desc': 'extension for position files',
      'interface': IStr,
      'name': 'PosFilesExtension',
      'value': None},
   {  'desc': 'Dict of {position Files:Data Directory}',
      'interface': IDict,
      'name': 'PosFilesDataDir',
      'value': None},
   {  'desc': 'List of position files',
      'interface': ISequence,
      'name': 'PosFilesList',
      'value': None},
   {  'desc': 'Index to select the experiment (and so a position file)',
      'interface': IInt,
      'name': 'ManipIndex',
      'value': 0},
   {  'desc': 'List of prelevements (P1 .. PN)',
      'interface': ISequence,
      'name': 'PrelevList',
      'value': None},
   {  'desc': 'Index to select the prelevementof the experiment',
      'interface': IInt,
      'name': 'PrelevIndex',
      'value': 0},
   {  'desc': 'root directory to search for pathes generated by other entries',
      'interface': IStr,
      'name': 'DataDir',
      'value': None}],
                             outputs=[  {  'desc': 'Actual position File',
      'interface': IStr,
      'name': 'Out4GridToDict'},
   {  'desc': 'directory to get MTG files from',
      'interface': IStr,
      'name': 'Out4GetLocal'},
   {  'desc': '(part of) the remote directory to get MTG files from',
      'interface': IStr,
      'name': 'Out4GetWeb'}],
                             elt_factory={  2: ('openalea.data structure.string', 'string'),
   3: ('openalea.math', '+'),
   4: ('openalea.math', '+'),
   5: ('openalea.math', '+'),
   6: ('openalea.math', '+'),
   7: ('openalea.math', '+'),
   8: ('openalea.math', '+'),
   9: ('openalea.python method', 'getitem'),
   10: ('openalea.python method', 'getitem'),
   11: ('openalea.python method', 'getitem')},
                             elt_connections={  6402560: (8, 0, 7, 1),
   6402584: (9, 0, 8, 0),
   6402608: (10, 0, 9, 1),
   6402632: ('__in__', 2, 10, 0),
   6402656: ('__in__', 1, 9, 0),
   6402680: ('__in__', 5, 11, 1),
   6402704: (5, 0, 6, 0),
   6402728: (10, 0, 5, 1),
   6402752: (7, 0, 3, 0),
   6402776: ('__in__', 0, 4, 1),
   6402800: (6, 0, 4, 0),
   6402824: ('__in__', 6, 7, 0),
   6402848: (11, 0, 8, 1),
   6402872: (7, 0, '__out__', 1),
   6402896: (8, 0, '__out__', 2),
   6402920: ('__in__', 3, 10, 1),
   6402944: ('__in__', 4, 11, 0),
   6402968: (3, 0, 5, 0),
   6402992: (11, 0, 6, 1),
   6403016: (4, 0, '__out__', 0),
   6403040: (2, 0, 3, 1)},
                             elt_data={  2: {  'block': False,
         'caption': "'/'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x38225d0> : "string"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -39.01342221874852,
         'posy': -113.70225448187779,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x288c590> : "+"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -41.517241033005924,
         'posy': -6.8626419596626445,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x288c590> : "+"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 39.18244115019124,
         'posy': 133.91903524870497,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x288c590> : "+"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -21.10903779664302,
         'posy': 37.29016376925953,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x288c590> : "+"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 10.321716415743463,
         'posy': 84.55964900210392,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x288c590> : "+"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 199.22829792731045,
         'posy': 154.29827414112412,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x288c590> : "+"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 127.22605216094075,
         'posy': 104.66846643227157,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'getitem',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x35b6190> : "getitem"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 60.13132948528684,
         'posy': -33.614915206364174,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x35b6190> : "getitem"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 6.591252330778843,
          'posy': -87.99745556550957,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x35b6190> : "getitem"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 127.81101991062931,
          'posy': -35.717014706169216,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 49.97267485617215,
                'posy': -262.1738154249176,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 94.47267485617215,
                 'posy': 223.18768299305708,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "'/'")],
   3: [],
   4: [],
   5: [],
   6: [],
   7: [],
   8: [],
   9: [],
   10: [],
   11: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-39.01342221874852, -113.70225448187779],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-41.517241033005924, -6.8626419596626445],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [39.18244115019124, 133.91903524870497],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-21.10903779664302, 37.29016376925953],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [10.321716415743463, 84.55964900210392],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [199.22829792731045, 154.29827414112412],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [127.22605216094075, 104.66846643227157],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [60.13132948528684, -33.614915206364174],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [6.591252330778843, -87.99745556550957],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [127.81101991062931, -35.717014706169216],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [49.97267485617215, -262.1738154249176],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [94.47267485617215, 223.18768299305708],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




GetLocalFiles = CompositeNodeFactory(name='GetLocalFiles',
                             description='Get mtg files from local directory',
                             category='data i/o',
                             doc='',
                             inputs=[  {  'desc': 'the name of the server',
      'interface': IStr,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'a string to filter file names',
      'interface': IStr,
      'name': 'filenamefilter',
      'value': None}],
                             outputs=[  {  'desc': 'the dictionnary that associates MTG files to temp files.',
      'interface': IDict,
      'name': 'DictOfFiles'}],
                             elt_factory={  5: ('openalea.file', 'joinpath'),
   6: ('openalea.file', 'glob'),
   10: ('Rose', 'LocalDir2DictOfFiles')},
                             elt_connections={  6402896: (6, 0, 10, 0),
   6402920: (10, 0, '__out__', 0),
   6402968: (5, 0, 6, 0),
   6402992: ('__in__', 1, 5, 0),
   6403040: ('__in__', 0, 5, 0)},
                             elt_data={  5: {  'block': False,
         'caption': 'joinpath',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x36d9dd0> : "joinpath"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 75.7196368691398,
         'posy': -74.57236964384983,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'glob',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x37410d0> : "glob"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 87.19230912203982,
         'posy': -30.976215082829924,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'LocalDir2DictOfFiles',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3b48fd0> : "LocalDir2DictOfFiles"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 41.26696889529167,
          'posy': 7.857614501288879,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 88.06148507125734,
                'posy': -136.03575553008426,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 89.07222410269685,
                 'posy': 50.00214882881642,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  5: [], 6: [], 10: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  5: {  'position': [75.7196368691398, -74.57236964384983],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [87.19230912203982, -30.976215082829924],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [31.057076995096743, -167.06126932364518],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [46.01779933960718, -122.54187888410866],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-44.80724801556356, -30.86226323142488],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [41.26696889529167, 7.857614501288879],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [88.06148507125734, -136.03575553008426],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [89.07222410269685, 50.00214882881642],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




DigitReconstruction = CompositeNodeFactory(name='DigitReconstruction',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure.list', 'list'),
   3: ('Rose', 'GetMTG'),
   4: ('Rose', '21052010_BFV.txt'),
   5: ('Rose', 'PlantReconstruction'),
   6: ('openalea.data structure.string', 'string'),
   11: ('openalea.data structure.string', 'string'),
   12: ('openalea.flow control', 'X'),
   13: ('openalea.data structure.list', 'list'),
   14: ('openalea.function operator', 'map'),
   15: ('openalea.data structure.string', 'string'),
   16: ('openalea.file', 'dirname'),
   17: ('Rose', 'PlantPositionning'),
   18: ('vplants.plantgl.visualization', 'plot3D'),
   19: ('vplants.plantgl.objects', 'Scene'),
   21: ('openalea.file', 'packagedir'),
   22: ('Rose', 'CropGeneration'),
   23: ('Rose', 'mesh_roseLeaflet')},
                             elt_connections={  6402704: (22, 1, 14, 1),
   6402728: (23, 0, 5, 1),
   6402752: (21, 0, 3, 0),
   6402776: (19, 0, 18, 0),
   6402800: (5, 0, 17, 0),
   6402824: (12, 0, 3, 1),
   6402848: (3, 0, 5, 0),
   6402872: (12, 0, 17, 1),
   6402896: (2, 0, 23, 0),
   6402920: (22, 0, 17, 2),
   6402944: (17, 0, 14, 0),
   6402968: (15, 0, 22, 1),
   6402992: (4, 0, 22, 0),
   6403016: (14, 0, 19, 0),
   6403040: (13, 0, 23, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x478b490> : "list"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -308.10388633156714,
         'posy': -271.9436977444185,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   3: {  'block': False,
         'caption': 'GetMTG',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3bf1d50> : "GetMTG"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -178.9517600589452,
         'posy': -218.66289776412353,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '21052010_BFV.txt',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x3bf1fd0> : "21052010_BFV.txt"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': -21.022245270183205,
         'posy': -265.503171745647,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'PlantReconstruction',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x3bf1e50> : "PlantReconstruction"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -215.2517760013359,
         'posy': -141.0557689470378,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': "'31'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3821710> : "string"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 53.01741943395291,
         'posy': -223.23123972190695,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   11: {  'block': False,
          'caption': "'32'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3821710> : "string"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 93.39091380711045,
          'posy': -221.8952808608688,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'X1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x319ab10> : "X"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -93.89551762576676,
          'posy': -287.3146102420942,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x478b490> : "list"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -274.4989590457777,
          'posy': -273.1931780175366,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   14: {  'block': False,
          'caption': 'map',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2f38750> : "map"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -47.15770904091527,
          'posy': -45.93109974982335,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': "'39'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3821710> : "string"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 132.2305174980934,
          'posy': -223.0376221458977,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'dirname',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x37ff1d0> : "dirname"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -262.927343402773,
          'posy': -306.6579800818154,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   17: {  'block': False,
          'caption': 'PlantPositionning',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c310d0> : "PlantPositionning"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -138.69103813656062,
          'posy': -92.45410417732347,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x478b1d0> : "plot3D"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -49.766922760214044,
          'posy': 41.65734636323362,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'Scene',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x39021d0> : "Scene"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -48.921246299210885,
          'posy': -1.476393045917959,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 0},
   21: {  'block': False,
          'caption': 'packagedir',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x37fff10> : "packagedir"',
          'hide': True,
          'id': 21,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -203.67436787518977,
          'posy': -282.5887908526618,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': 'CropGeneration',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c312d0> : "CropGeneration"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 17.49261826219825,
          'posy': -149.51875697713666,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'mesh_roseLeaflet',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3bc6850> : "mesh_roseLeaflet"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -322.75516743125706,
          'posy': -219.51071905987507,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '[0.25, 0.5, 0.75, 1.0]')],
   3: [],
   4: [(0, 'PackageData(Rose, 21052010_BFV.txt)'), (1, 'None'), (2, 'None')],
   5: [],
   6: [(0, "'31'")],
   11: [(0, "'32'")],
   12: [(0, "'x'")],
   13: [  (  0,
             '[0.81000000000000005, 0.97999999999999998, 0.93999999999999995, 0.0]')],
   14: [],
   15: [(0, "'39'")],
   16: [  (  0,
             "'C:/Documents and Settings/bertheloot/.openalea/user_pkg/Rose/MTG/Manip2010'")],
   17: [],
   18: [],
   19: [],
   21: [(0, "'Rose'")],
   22: [  (1, "['31', '39']"),
          (2, 'True'),
          (3, '90.0'),
          (4, '200.0'),
          (5, '15.0')],
   23: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-308.10388633156714, -271.9436977444185],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   3: {  'position': [-178.9517600589452, -218.66289776412353],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-21.022245270183205, -265.503171745647],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-215.2517760013359, -141.0557689470378],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [53.01741943395291, -223.23123972190695],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-98.09292870383564, -181.82721771014127],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-260.3063582071886, -133.9257350196405],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-247.3925735443236, -78.43603026269435],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-314.38433589789634, -40.01995973657088],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [93.39091380711045, -221.8952808608688],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-93.89551762576676, -287.3146102420942],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-274.4989590457777, -273.1931780175366],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   14: {  'position': [-47.15770904091527, -45.93109974982335],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [132.2305174980934, -223.0376221458977],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-262.927343402773, -306.6579800818154],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   17: {  'position': [-138.69103813656062, -92.45410417732347],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-49.766922760214044, 41.65734636323362],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-48.921246299210885, -1.476393045917959],
          'useUserColor': True,
          'userColor': [0, 170, 0]},
   20: {  'position': [83.39091380711045, -190.77099459982801],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-203.67436787518977, -282.5887908526618],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [17.49261826219825, -149.51875697713666],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-322.75516743125706, -219.51071905987507],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-211.1138169775502, 17.401464904768588],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-344.5205687814911, -128.64450905907336],
          'useUserColor': False,
          'userColor': None},
   26: {  'position': [-307.1615824370785, -71.94479001708098],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [-246.91546164451677, -55.81788944969728],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




RoseLpy = CompositeNodeFactory(name='RoseLpy',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('Rose', 'simpleRoseField.lpy'),
   3: ('vplants.l-py', 'LSystem'),
   4: ('vplants.l-py', 'plot'),
   5: ('vplants.l-py', 'run'),
   6: ('openalea.file', 'read'),
   7: ('openalea.flow control', 'X'),
   8: ('vplants.l-py', 'generateScene'),
   9: ('vplants.plantgl.visualization', 'plot3D')},
                             elt_connections={  10019208: (5, 0, 4, 0),
   10019220: (3, 0, 4, 1),
   10019232: (6, 0, 3, 0),
   10019244: (8, 0, 9, 0),
   10019256: (3, 0, 5, 0),
   10019268: (2, 0, 6, 0),
   10019280: (5, 0, 8, 0),
   10019292: (3, 0, 8, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'simpleRoseField.lpy',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x048C6AF0> : "simpleRoseField.lpy"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 58.550049531486565,
         'posy': -101.02753644648665,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'LSystem',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x05028FB0> : "LSystem"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 110.60378294916885,
         'posy': -10.279205576499706,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'plot',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x068BF1D0> : "plot"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 10.0,
         'posy': 81.95224021455863,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'run',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x068BF0D0> : "run"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 124.58706702426436,
         'posy': 51.646766756066114,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'read',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x04A17CB0> : "read"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 105.27681758722773,
         'posy': -55.55841115299944,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'X2',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x04B11DF0> : "X"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 274.40796782885906,
         'posy': -90.18368600561692,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'generateScene',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x068BF190> : "generateScene"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 246.44139967866806,
         'posy': 79.61333490625714,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'plot3D',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0485A5F0> : "plot3D"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 276.40557983958706,
         'posy': 139.54169522809502,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (0, 'PackageData(Rose, simpleRoseField.lpy)'),
         (1, 'None'),
         (2, 'None')],
   3: [(1, "''"), (2, '-1'), (3, '{}')],
   4: [],
   5: [(1, "''"), (2, '-1'), (3, '{}')],
   6: [],
   7: [(0, "'x'")],
   8: [],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [58.550049531486565, -101.02753644648665],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [110.60378294916885, -10.279205576499706],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [10.0, 81.95224021455863],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [124.58706702426436, 51.646766756066114],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [105.27681758722773, -55.55841115299944],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [274.40796782885906, -90.18368600561692],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [246.44139967866806, 79.61333490625714],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [276.40557983958706, 139.54169522809502],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




GetMTG_GetMTG = Factory(name='GetMTG',
                authors=' (wralea authors)',
                description='',
                category='data i/o',
                nodemodule='GetMTG',
                nodeclass='GetMTG',
                inputs=[{'interface': IStr, 'name': 'dirname', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'plantID', 'value': None, 'desc': ''}],
                outputs=[{'interface': IData, 'name': 'mtg', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




NoLeaflet_NoLeaflet = Factory(name='NoLeaflet',
                authors=' (wralea authors)',
                description='make no leaflet, if we want to see the plantframe  ',
                category='data processing',
                nodemodule='NoLeaflet',
                nodeclass='NoLeaflet',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'computeNoLeaflet', 'desc': 'dummy function'}],
                widgetmodule=None,
                widgetclass=None,
               )




SceneRotation_SceneRotation = Factory(name='SceneRotation',
                authors=' (wralea authors)',
                description='',
                category='scene design',
                nodemodule='SceneRotation',
                nodeclass='SceneRotation',
                inputs=[{'interface': None, 'name': 'scene', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




computeLeaflet4pts_computeLeaflet4pts = Factory(name='computeLeaflet4pts',
                authors=' (wralea authors)',
                description='compute leaflet geometry from 4 points',
                category='data processing',
                nodemodule='computeLeaflet4pts',
                nodeclass='computeLeaflet4pts',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'computeLeaflet4pts', 'desc': 'function that computes a leaflet from 4 digitization points'}],
                widgetmodule=None,
                widgetclass=None,
               )




CanopyReconstruction2011 = CompositeNodeFactory(name='CanopyReconstruction2011',
                             description='make a canopy from digitized plants',
                             category='workflow',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('Rose', 'VertexVisitor'),
   3: ('openalea.data structure.string', 'string'),
   4: ('Rose', 'ReconstructionWithTurtle'),
   5: ('openalea.data structure.string', 'string'),
   6: ('Rose', 'GetLocalFiles'),
   7: ('Rose', 'GetWebFiles'),
   9: ('openalea.data structure', 'int'),
   10: ('openalea.file.pickle', 'pickle dump'),
   11: ('openalea.file', 'filename'),
   12: ('vplants.plantgl.visualization', 'plot3D'),
   13: ('Rose', 'MTG_union'),
   14: ('Rose', 'gridFile2Dict'),
   15: ('Rose', 'CropGeneration_2011'),
   16: ('openalea.data structure.tuple', 'tuple'),
   17: ('openalea.data structure.string', 'string'),
   18: ('Rose', 'Files2MTGs'),
   19: ('openalea.data structure', 'bool'),
   20: ('openalea.data structure.list', 'list'),
   23: ('openalea.data structure', 'bool'),
   25: ('openalea.data structure.string', 'string'),
   29: ('openalea.data structure.string', 'string'),
   30: ('openalea.data structure.string', 'string'),
   31: ('openalea.data structure.list', 'list'),
   32: ('openalea.data structure.dict', 'dict'),
   33: ('openalea.data structure', 'int'),
   36: ('openalea.data structure.list', 'list'),
   38: ('Rose', 'Canopy2011Driver')},
                             elt_connections={  6402440: (11, 0, 10, 1),
   6402464: (38, 2, 7, 1),
   6402488: (15, 0, 18, 0),
   6402512: (18, 0, 13, 0),
   6402536: (32, 0, 38, 1),
   6402560: (29, 0, 7, 2),
   6402584: (5, 0, 6, 1),
   6402608: (16, 0, 15, 7),
   6402632: (31, 0, 38, 2),
   6402656: (19, 0, 15, 9),
   6402680: (2, 0, 4, 1),
   6402704: (19, 0, 15, 8),
   6402728: (17, 0, 7, 0),
   6402752: (13, 0, 4, 0),
   6402776: (13, 0, 10, 0),
   6402800: (38, 1, 6, 0),
   6402824: (14, 0, 15, 0),
   6402848: (38, 0, 14, 0),
   6402872: (33, 0, 38, 3),
   6402896: (20, 0, 15, 2),
   6402920: (25, 0, 38, 0),
   6402944: (6, 0, 15, 1),
   6402968: (36, 0, 38, 4),
   6402992: (3, 0, 38, 6),
   6403016: (9, 0, 38, 5),
   6403040: (4, 0, 12, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'VertexVisitor',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c41510> : "VertexVisitor"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -322.8646404825778,
         'posy': 100.29775454952555,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': "'/mnt/echange/samba/MTG/'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x38216d0> : "string"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -189.79876829724896,
         'posy': -354.4180468828124,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'ReconstructionWithTurtle',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c41490> : "ReconstructionWithTurtle"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -290.99251516508514,
         'posy': 147.27860016544926,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': "'*.mtg'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x38216d0> : "string"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -71.47764963805798,
         'posy': -94.46955799735763,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'GetLocalFiles',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x3c41090> : "GetLocalFiles"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -121.27648742106133,
         'posy': -42.50928425068129,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'GetWebFiles',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x3c414d0> : "GetWebFiles"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -188.37089713162212,
         'posy': -131.54382363483822,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x2ff8650> : "int"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -229.05849328834412,
         'posy': -353.7553121583378,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'pickle dump',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3821bd0> : "pickle dump"',
          'hide': True,
          'id': 10,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -101.4861591109233,
          'posy': 144.01396348336726,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'filename',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3800c50> : "filename"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -21.32604501361559,
          'posy': 105.83488376705117,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x47ab0d0> : "plot3D"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -239.68110061780695,
          'posy': 204.3764183044203,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'MTG_union',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c34f10> : "MTG_union"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -109.0489403716252,
          'posy': 103.93590374819951,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': 'gridFile2dict',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c41650> : "gridFile2Dict"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -316.7456444310377,
          'posy': -45.90037490572476,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'CropGeneration_2011',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c41410> : "CropGeneration_2011"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -123.54798621712861,
          'posy': 24.659050017335097,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'tuple',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3d5d410> : "tuple"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -2.7562677532513398,
          'posy': -71.58822294728449,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': "'sagah-043/MTG/'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x38216d0> : "string"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -234.9919439450846,
          'posy': -217.492693151448,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': 'Files2MTGs',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c41690> : "Files2MTGs"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -108.87049973427234,
          'posy': 69.28122710362784,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'True',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2ff8410> : "bool"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 45.66589854743948,
          'posy': -70.54733332832782,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x47ab390> : "list"',
          'hide': True,
          'id': 20,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -26.61131470565189,
          'posy': -41.73607571402213,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'False',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2ff8410> : "bool"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 88.61869364943313,
          'posy': -69.1985054803194,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': "'.txt'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x38216d0> : "string"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -432.79009486241887,
          'posy': -356.05940399118487,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   29: {  'block': False,
          'caption': "'.mtg'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x38216d0> : "string"',
          'hide': True,
          'id': 29,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -129.69008303419818,
          'posy': -182.09901030504747,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   30: {  'block': False,
          'caption': "'Z:/'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x38216d0> : "string"',
          'hide': True,
          'id': 30,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -164.31394858734245,
          'posy': -313.8766548374721,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   31: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x47ab390> : "list"',
          'hide': True,
          'id': 31,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -331.76023570665063,
          'posy': -353.7007701385835,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   32: {  'block': False,
          'caption': 'dict',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2956210> : "dict"',
          'hide': True,
          'id': 32,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -380.6583910411038,
          'posy': -353.8988056779298,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   33: {  'block': False,
          'caption': '3',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2ff8650> : "int"',
          'hide': True,
          'id': 33,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -293.9772740281211,
          'posy': -353.50943214356045,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   36: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x47ab390> : "list"',
          'hide': True,
          'id': 36,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -266.01713046847806,
          'posy': -351.02494686488427,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   38: {  'block': False,
          'caption': 'Canopy2011Driver',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x3c41050> : "Canopy2011Driver"',
          'hide': True,
          'id': 38,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -366.10395714436925,
          'posy': -164.75512899943163,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, 'None')],
   3: [(0, "'/mnt/echange/samba/MTG/'")],
   4: [],
   5: [(0, "'*.mtg'")],
   6: [],
   7: [],
   9: [(0, '0')],
   10: [(2, 'False')],
   11: [(0, "'/home/hautret/tmp/canopy.pf'")],
   12: [],
   13: [],
   14: [],
   15: [(3, '13'), (4, '6'), (5, '150'), (6, '150')],
   16: [(0, '(61, 21, 800)')],
   17: [(0, "'sagah-043/MTG/'")],
   18: [],
   19: [(0, 'True')],
   20: [(0, '[]')],
   23: [(0, 'False')],
   25: [(0, "'.txt'")],
   29: [(0, "'.mtg'")],
   30: [(0, "'Z:/'")],
   31: [  (  0,
             "['2011-M1-PARfort-', '2011-M1-PARfaible-', '2011-M2-PARfort-', '2011-M2-PARfaible-', '2011-M3-PARfF-']")],
   32: [  (  0,
             "{'2011-M2-PARfaible-': 'Manip2_C2_PARfaible/', '2011-M1-PARfaible-': 'Manip1_C2_PARfaible/', '2011-M3-PARfF-': 'Manip3_C1C2_PARfF/', '2011-M1-PARfort-': 'Manip1_C1_PARfort/', '2011-M2-PARfort-': 'Manip2_C1_PARfort/'}")],
   33: [(0, '0')],
   36: [(0, "['P1', 'P2', 'P3']")],
   38: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-322.8646404825778, 100.29775454952555],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-189.79876829724896, -354.4180468828124],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-290.99251516508514, 147.27860016544926],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-71.47764963805798, -94.46955799735763],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-121.27648742106133, -42.50928425068129],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-188.37089713162212, -131.54382363483822],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-420.5477656379126, -181.78945923870654],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-229.05849328834412, -353.7553121583378],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-101.4861591109233, 144.01396348336726],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-21.32604501361559, 105.83488376705117],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-239.68110061780695, 204.3764183044203],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-109.0489403716252, 103.93590374819951],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [-316.7456444310377, -45.90037490572476],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [-123.54798621712861, 24.659050017335097],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-2.7562677532513398, -71.58822294728449],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-234.9919439450846, -217.492693151448],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-108.87049973427234, 69.28122710362784],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [45.66589854743948, -70.54733332832782],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-26.61131470565189, -41.73607571402213],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-504.3789113519347, -299.1004108048637],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [-402.57888905055626, -144.95463345680403],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [88.61869364943313, -69.1985054803194],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-488.00925134686446, -240.88072265045287],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-432.79009486241887, -356.05940399118487],
          'useUserColor': False,
          'userColor': None},
   26: {  'position': [-347.1660634017351, -77.59768176543707],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [-182.87652087615234, -190.0405955067714],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [-99.98308987537013, -135.83052984787673],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [-129.69008303419818, -182.09901030504747],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [-164.31394858734245, -313.8766548374721],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [-331.76023570665063, -353.7007701385835],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [-380.6583910411038, -353.8988056779298],
          'useUserColor': False,
          'userColor': None},
   33: {  'position': [-293.9772740281211, -353.50943214356045],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [-276.2018920778616, -220.83523138663014],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [-322.0057828759323, -268.31799820817355],
          'useUserColor': False,
          'userColor': None},
   36: {  'position': [-266.01713046847806, -351.02494686488427],
          'useUserColor': False,
          'userColor': None},
   37: {  'position': [-195.77435379668933, -249.03497121111116],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [-366.10395714436925, -164.75512899943163],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-376.02678813618286, -112.32110811799886],
          'useUserColor': False,
          'userColor': None},
   40: {  'position': [-400.9686602806094, -239.84253878079087],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




PlantPositionning_PlantPositionning = Factory(name='PlantPositionning',
                authors=' (wralea authors)',
                description='',
                category='data processing',
                nodemodule='PlantPositionning',
                nodeclass='PlantPositionning',
                inputs=[{'interface': None, 'name': 'scene', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'IDplant', 'value': None, 'desc': ''}, {'interface': IDict, 'name': 'plant_pos', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




CropGeneration_2011_CropGeneration_2011 = Factory(name='CropGeneration_2011',
                authors=' (wralea authors)',
                description='Generates a dictionnary of filenames associated with one or more position and orientation.',
                category='data processing',
                nodemodule='CropGeneration_2011',
                nodeclass='CropGeneration_2011',
                inputs=[{'interface': IDict, 'name': 'PlantList', 'value': {}, 'desc': 'List of plants and their places'}, {'interface': IDict, 'name': 'existingMTGlist', 'value': {}, 'desc': 'Dict of {plant number: file of digitized plant}'}, {'interface': ISequence, 'name': 'excludelist', 'value': [], 'desc': 'List of plant number not to use to fil up spaces '}, {'interface': IInt, 'name': 'n_X', 'value': 13, 'desc': 'number of X steps'}, {'interface': IInt, 'name': 'n_Y', 'value': 6, 'desc': 'number of Y steps'}, {'interface': IFloat, 'name': 's_X', 'value': 150, 'desc': 'size of X mesh'}, {'interface': IFloat, 'name': 's_Y', 'value': 150, 'desc': 'size of Y mesh'}, {'interface': ITuple3, 'name': 'Origin', 'value': (0, 0, 800), 'desc': 'Origin of the mesh. i.e coordinates of the (0,0) plant'}, {'interface': IBool, 'name': 'DoFill', 'value': True, 'desc': 'Do we use the existing data to fill the crop grid where data is missing'}, {'interface': IBool, 'name': 'DoRotate', 'value': True, 'desc': 'Do we rotate the filling plants'}],
                outputs=[{'interface': IDict, 'name': 'Plant_MTGs', 'desc': 'A list of oriented and shifted MTGs.'}],
                widgetmodule=None,
                widgetclass=None,
               )




Leaflet_Orientation_4points_Leaflet_Orientation_4points = Factory(name='Leaflet Orientation 4points',
                authors=' (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='Leaflet_Orientation_4points',
                nodeclass='Leaflet_Orientation_4points',
                inputs=[{'interface': IData, 'name': 'mtg', 'value': None, 'desc': ''}, {'interface': None, 'name': 'mesh', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




ReconstructionWithTurtle_ReconstructionWithTurtle = Factory(name='ReconstructionWithTurtle',
                authors=' (wralea authors)',
                description='builds a scene using the plantgl Turtle',
                category='data processing',
                nodemodule='ReconstructionWithTurtle',
                nodeclass='ReconstructionWithTurtle',
                inputs=[{'interface': IData, 'name': 'g', 'value': None, 'desc': 'a "Sagah2011" MTG'}, {'interface': IFunction, 'name': 'Visitor', 'value': None, 'desc': 'A function that builds the scene while walking throught the nodes of the MTG'}, {'interface': IFloat(min=1, max=4, step=1.000000), 'name': 'power', 'value': 3.0, 'desc': 'Power of the pipe model'}],
                outputs=[{'interface': IData, 'name': 'ThScene', 'desc': 'A 3D scene'}],
                widgetmodule=None,
                widgetclass=None,
               )




GetWebFiles = CompositeNodeFactory(name='GetWebFiles',
                             description='Get MTGs from a webserver',
                             category='data i/o',
                             doc='',
                             inputs=[  {  'desc': 'the name of the server',
      'interface': IStr,
      'name': 'ServerName',
      'value': None},
   {  'desc': 'the directory where to get the files from',
      'interface': IStr,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'A string to filter filenames with.',
      'interface': IStr,
      'name': 'FileNameFilter',
      'value': None}],
                             outputs=[  {  'desc': 'the dictionnary that associates MTG files to temp files.',
      'interface': IDict,
      'name': 'DictOfFiles'}],
                             elt_factory={  5: ('openalea.python method', 'print'),
   7: ('openalea.data structure.string', 'string'),
   8: ('openalea.math', '+'),
   9: ('openalea.math', '+'),
   10: ('Rose', 'httpDir2DictOfFiles')},
                             elt_connections={  6402872: ('__in__', 2, 10, 1),
   6402896: ('__in__', 0, 8, 1),
   6402920: (10, 0, 5, 0),
   6402944: (7, 0, 8, 0),
   6402968: (10, 0, '__out__', 0),
   6402992: ('__in__', 1, 9, 1),
   6403016: (9, 0, 10, 0),
   6403040: (8, 0, 9, 0)},
                             elt_data={  5: {  'block': False,
         'caption': 'print',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x34f3a10> : "print"',
         'hide': True,
         'id': 5,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 24.189061370054645,
         'posy': 144.198052946831,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': "'http://'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x374ec10> : "string"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -24.916817856452088,
         'posy': -140.3140032765836,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x27cafd0> : "+"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 42.575997663737176,
         'posy': -90.41839657598872,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x27cafd0> : "+"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 57.299535035246215,
         'posy': -38.89313380845486,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'httpDir2DictOfFiles',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3b18650> : "httpDir2DictOfFiles"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 9.724031673357157,
          'posy': 48.47269918880038,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 133.12924044607584,
                'posy': -141.9257808011581,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 136.21058782495172,
                 'posy': 150.62447450152942,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  5: [],
   7: [(0, "'http://'")],
   8: [],
   9: [],
   10: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [3.2113821928186255, 60.3303133022055],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-24.793391075541848, -18.168406617407726],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-20.793391075541848, 15.886574346013159],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [24.189061370054645, 144.198052946831],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-24.916817856452088, -140.3140032765836],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [42.575997663737176, -90.41839657598872],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [57.299535035246215, -38.89313380845486],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [9.724031673357157, 48.47269918880038],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [133.12924044607584, -141.9257808011581],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [136.21058782495172, 150.62447450152942],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




CropGeneration_CropGeneration = Factory(name='CropGeneration',
                authors=' (wralea authors)',
                description='',
                category='data processing',
                nodemodule='CropGeneration',
                nodeclass='CropGeneration',
                inputs=[{'interface': IFileStr, 'name': 'txtfile', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'Plt_Not_Use', 'value': [], 'desc': ''}, {'interface': IBool, 'name': 'filling', 'value': True, 'desc': ''}, {'interface': IFloat, 'name': 'crop_width', 'value': 90.0, 'desc': ''}, {'interface': IFloat, 'name': 'crop_length', 'value': 200.0, 'desc': ''}, {'interface': IFloat, 'name': 'spacing', 'value': 15.0, 'desc': ''}],
                outputs=[{'interface': IDict, 'name': 'dico_complete', 'desc': ''}, {'interface': ISequence, 'name': 'IDplants', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




tortue_tortue = Factory(name='tortue',
                authors=' (wralea authors)',
                description='builds 3D canopies',
                category='data processing',
                nodemodule='tortue',
                nodeclass='tortue',
                inputs=(),
                outputs=(),
                widgetmodule=None,
                widgetclass=None,
               )




leaflet_orientation_leaflet_orientation = Factory(name='leaflet_orientation',
                authors=' (wralea authors)',
                description='',
                category='scene design',
                nodemodule='leaflet_orientation',
                nodeclass='leaflet_orientation',
                inputs=[{'interface': None, 'name': 'mtg', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'geom_file', 'value': None, 'desc': ''}, {'interface': None, 'name': 'mesh', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




CanopyReconstruction = CompositeNodeFactory(name='CanopyReconstruction',
                             description='Builds a 3d canopy from digitization data',
                             category='scene design',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('Rose', 'ReconstructionWithTurtle'),
   3: ('Rose', 'GetMTG'),
   4: ('openalea.data structure.string', 'string'),
   5: ('openalea.data structure.string', 'string'),
   6: ('Rose', 'computeLeaflet4pts'),
   7: ('Rose', 'VertexVisitor'),
   8: ('vplants.plantgl.visualization', 'plot3D'),
   9: ('openalea.file', 'glob'),
   10: ('Rose', 'NoLeaflet'),
   11: ('openalea.file', 'dirname'),
   12: ('openalea.data structure.string', 'string'),
   13: ('openalea.python method', 'getitem'),
   14: ('openalea.mtg', 'MTG')},
                             elt_connections={  32823200: (5, 0, 3, 0),
   32823224: (14, 0, 2, 0),
   32823248: (7, 0, 2, 1),
   32823272: (9, 0, 13, 0),
   32823296: (13, 0, 14, 0),
   32823320: (4, 0, 3, 1),
   32823344: (11, 0, 9, 0),
   32823368: (2, 0, 8, 0),
   32823392: (12, 0, 9, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'ReconstructionWithTurtle',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5549e90> : "ReconstructionWithTurtle"',
         'hide': True,
         'id': 2,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': -142.27104713662067,
         'posy': 31.525970672319353,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'GetMTG',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5549bd0> : "GetMTG"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 45.197610829307756,
         'posy': -51.702917526362285,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': "'178'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x712e6d0> : "string"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 103.91238819075808,
         'posy': -145.20589004711027,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': "'/mnt/echange/fictif/Manip1_C1_PARfort'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x712e6d0> : "string"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -83.20680392801077,
         'posy': -143.04116205380217,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'computeLeaflet4pts',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5549c90> : "computeLeaflet4pts"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -250.09099863838904,
         'posy': -80.25069836522516,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'VertexVisitor',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x55ac0d0> : "VertexVisitor"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -130.91893866394662,
         'posy': -34.25025524712414,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'plot3D',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x6e70a90> : "plot3D"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -91.57526549228098,
         'posy': 87.70217399985052,
         'priority': 0,
         'use_user_color': False,
         'user_application': True,
         'user_color': None},
   9: {  'block': False,
         'caption': 'glob',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5699b10> : "glob"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 223.49866254328805,
         'posy': -96.37714350787996,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'NoLeaflet',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5549c10> : "NoLeaflet"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -100.14968568330086,
          'posy': -79.60468512064436,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': '.../P1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5699310> : "dirname"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 195.1189688741987,
          'posy': -135.4506184011562,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': "'*.mtg'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x712e6d0> : "string"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 261.03156905016084,
          'posy': -135.0514500933008,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x6259850> : "getitem"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 216.9462588349648,
          'posy': -61.60918940535288,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': 'MTG',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5a6ccd0> : "MTG"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 228.3133949448452,
          'posy': -2.64455669820284,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(2, '3.0')],
   3: [],
   4: [(0, "'178'")],
   5: [(0, "'/mnt/echange/fictif/Manip1_C1_PARfort'")],
   6: [],
   7: [(0, 'None')],
   8: [],
   9: [],
   10: [],
   11: [(0, "'/home/pradal/devlp/aleapkg/trunk/rose/share/P1'")],
   12: [(0, "'*.mtg'")],
   13: [(1, '14')],
   14: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [-142.27104713662067, 31.525970672319353], 'userColor': None, 'useUserColor': False},
   3: {'position': [45.197610829307756, -51.702917526362285], 'userColor': None, 'useUserColor': False},
   4: {'position': [103.91238819075808, -145.20589004711027], 'userColor': None, 'useUserColor': False},
   5: {'position': [-83.20680392801077, -143.04116205380217], 'userColor': None, 'useUserColor': False},
   6: {'position': [-250.09099863838904, -80.25069836522516], 'userColor': None, 'useUserColor': False},
   7: {'position': [-130.91893866394662, -34.25025524712414], 'userColor': None, 'useUserColor': False},
   8: {'position': [-91.57526549228098, 87.70217399985052], 'userColor': None, 'useUserColor': False},
   9: {'position': [223.49866254328805, -96.37714350787996], 'userColor': None, 'useUserColor': False},
   10: {'position': [-100.14968568330086, -79.60468512064436], 'userColor': None, 'useUserColor': False},
   11: {'position': [195.1189688741987, -135.4506184011562], 'userColor': None, 'useUserColor': False},
   12: {'position': [261.03156905016084, -135.0514500933008], 'userColor': None, 'useUserColor': False},
   13: {'position': [216.9462588349648, -61.60918940535288], 'userColor': None, 'useUserColor': False},
   14: {'position': [228.3133949448452, -2.64455669820284], 'userColor': None, 'useUserColor': False},
   15: {  'position': [-282.9675667077039, -202.74934686221772],
          'useUserColor': False,
          'userColor': None},
   '__in__': {'position': [0, 0], 'userColor': None, 'useUserColor': True},
   '__out__': {'position': [0, 0], 'userColor': None, 'useUserColor': True}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




VertexVisitor_VertexVisitor = Factory(name='VertexVisitor',
                authors=' (wralea authors)',
                description='function to visit MTG nodes',
                category='data processing',
                nodemodule='VertexVisitor',
                nodeclass='VertexVisitor',
                inputs=[{'interface': IFunction, 'name': 'leaf_factory', 'value': None, 'desc': 'function to compute leaflet geometry'}],
                outputs=[{'interface': IFunction, 'name': 'visitor', 'desc': 'function to visit the MTG nodes'}],
                widgetmodule=None,
                widgetclass=None,
               )



_89431888 = DataFactory(name='simpleRoseField.lpy',
                    description='',
                    editors=None,
                    includes=None,
                    )


_89431568 = DataFactory(name='test2011OK.mtg',
                    description='',
                    editors=None,
                    includes=None,
                    )



gridFile2Dict_gridFile2Dict = Factory(name='gridFile2Dict',
                authors=' (wralea authors)',
                description='Makse a dictionnary from file that contains plants indexes inside a 2D grid.',
                category='data processing',
                nodemodule='gridFile2Dict',
                nodeclass='gridFile2Dict',
                inputs=[{'interface': IFileStr, 'name': 'gridFileName', 'value': '2011-M1-PARfort-P1.txt', 'desc': 'The name of file that associates pant numbers and indexes in a 2D grid'}],
                outputs=[{'interface': IDict, 'name': 'DictOfIndices', 'desc': 'Dictionnary that associates plant number and 2D indices'}],
                widgetmodule=None,
                widgetclass=None,
               )




Files2MTGs_Files2MTGs = Factory(name='Files2MTGs',
                authors=' (wralea authors)',
                description='reads MTG files, then places them both onto their coordinates, and uses them to fill up empty spaces.',
                category='data processing',
                nodemodule='Files2MTGs',
                nodeclass='Files2MTGs',
                inputs=[{'interface': IDict, 'name': 'CropDict', 'value': None, 'desc': 'A dictionnary of filenames associated to lists of coordinates.'}],
                outputs=[{'interface': ISequence, 'name': 'ListOfMTGs', 'desc': 'A list of MTG objects.'}],
                widgetmodule=None,
                widgetclass=None,
               )




