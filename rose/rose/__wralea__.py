
# This file has been generated at Wed Nov 16 16:43:41 2011

from openalea.core import *


__name__ = 'Rose'

__editable__ = True
__description__ = 'Stuff to display rosebush'
__license__ = ''
__url__ = ''
__alias__ = []
__version__ = ''
__authors__ = ''
__institutes__ = ''
__icon__ = ''


__all__ = ['drawLeaflets', 'mesh_roseLeaflet_mesh_roseLeaflet', 'HybridReconstruction', 'rose_geometry_computeLeaflet4pts', 'RoseLpy', 'rose_CropGeneration_2011', 'rose_MTG_union', 'rose_geometry_BezierPatchFlower', 'PlantFrame_Rose_PlantFrame_Rose', 'rose_HttpDir2DictOfFiles', 'DigitReconstruction', 'Leaflet_Orientation_4points_Leaflet_Orientation_4points', 'rose_Files2MTGs', 'rose_GetMTG', 'rose_geometry_RawBud', 'rose_geometry_VertexVisitor', 'rose_geometry_PointArray', 'GetLocalFiles', 'PlantReconstruction', 'rose_LocalDir2DictOfFiles', '_61555024', 'PlantPositionning_PlantPositionning', 'rose_geometry_PolygonLeaflet', 'SceneRotation_SceneRotation', 'rose_geometry_ReconstructWithTurtle', 'testRevolutionFig', 'CanopyReconstruction2011', 'rose_geometry_BuiltBud', 'drawFlowers', 'revolutionTest1file_revolutionTest1file', 'rose_GridFile2Dict', 'rose_geometry_RawFlower', 'rose_geometry_NoOrgan', 'rose_GetOrigin', '_61556560', 'rose_geometry_RevolutionBud', '_61325008', 'rose_geometry_RevolutionFig', 'rose_geometry_ControlPointsMatrix', 'GetWebFiles', 'Canopy2011Driver', 'rose_geometry_TaperedFlower', 'rose_geometry_BudArray', 'leaflet_orientation_leaflet_orientation', 'CanopyReconstruction', 'rose_colors_ColorFuncs', 'rose_geometry_FineBudArray', 'drawBuds', 'CropGeneration_CropGeneration']



drawLeaflets = CompositeNodeFactory(name='drawLeaflets',
                             description='groups several procedures to draw leaflets',
                             category='data processing',
                             doc='',
                             inputs=[],
                             outputs=[  {  'desc': 'a list of funcs to display leaflets',
      'interface': ISequence,
      'name': 'leaflet_func'}],
                             elt_factory={  2: ('Rose', 'PolygonLeaflet'),
   3: ('Rose', 'NoOrgan'),
   4: ('Rose', 'ComputeLeaflet4pts'),
   5: ('openalea.data structure.list', 'list'),
   6: ('openalea.data structure.list', 'list')},
                             elt_connections={  6402944: (6, 0, 4, 1),
   6402968: (5, 0, 4, 0),
   6402992: (4, 0, '__out__', 0),
   6403016: (2, 0, '__out__', 0),
   6403040: (3, 0, '__out__', 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PolygonLeaflet',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865b50> : "PolygonLeaflet"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -23.752878046893095,
         'posy': -23.380781012573081,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865d50> : "NoOrgan"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -89.575201045276302,
         'posy': -23.512162422928498,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'ComputeLeaflet4pts',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865650> : "ComputeLeaflet4pts"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 78.125876851335107,
         'posy': -23.205705995446074,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 114.03891521291656,
         'posy': -73.189380675582001,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   6: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 143.27889055901449,
         'posy': -73.540541583605872,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 16.0,
                 'posy': 27.0,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [],
   4: [],
   5: [(0, '[0.25, 0.5, 0.75, 1.0]')],
   6: [  (  0,
            '[0.81000000000000005, 0.97999999999999998, 0.93999999999999995, 0.0]')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-23.752878046893095, -23.380781012573081],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-89.575201045276302, -23.512162422928498],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [78.125876851335107, -23.205705995446074],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [114.03891521291656, -73.189380675582001],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   6: {  'position': [143.27889055901449, -73.540541583605872],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [16.0, 27.0],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




mesh_roseLeaflet_mesh_roseLeaflet = Factory(name='mesh_roseLeaflet',
                authors=' (wralea authors)',
                description='build a triangleset from a profile',
                category='data processing',
                nodemodule='mesh_roseLeaflet',
                nodeclass='mesh_roseLeaflet',
                inputs=[{'interface': ISequence, 'name': 'x', 'value': None, 'desc': ''}, {'interface': ISequence, 'name': 'y', 'value': None, 'desc': 'sequence of positions along the x axis'}],
                outputs=[{'interface': None, 'name': 'triangleSet', 'desc': 'width values againts x positions'}],
                widgetmodule=None,
                widgetclass=None,
               )




HybridReconstruction = CompositeNodeFactory(name='HybridReconstruction',
                             description='builds ans displays an MTG by both PlantFrame and Turtle method.',
                             category='category test',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  3: ('Rose', 'GetMTG'),
   4: ('openalea.data structure.string', 'string'),
   5: ('openalea.data structure.string', 'string'),
   6: ('Rose', 'ComputeLeaflet4pts'),
   7: ('Rose', 'VertexVisitor'),
   8: ('vplants.plantgl.visualization', 'plot3D'),
   9: ('vplants.plantgl.visualization', 'plot3D'),
   10: ('Rose', 'PlantFrame_Rose'),
   11: ('Rose', 'rose.drf'),
   12: ('openalea.data structure.list', 'list'),
   13: ('openalea.data structure.list', 'list'),
   14: ('Rose', 'mesh_roseLeaflet'),
   15: ('Rose', 'leaflet_orientation'),
   16: ('openalea.math', '+'),
   17: ('Rose', 'ReconstructWithTurtle')},
                             elt_connections={  6402728: (5, 0, 3, 0),
   6402752: (14, 0, 15, 2),
   6402776: (4, 0, 3, 1),
   6402800: (16, 0, 9, 0),
   6402824: (10, 0, 16, 0),
   6402848: (13, 0, 14, 1),
   6402872: (15, 0, 16, 1),
   6402896: (7, 0, 17, 1),
   6402920: (3, 0, 17, 0),
   6402944: (11, 0, 10, 1),
   6402968: (3, 0, 10, 0),
   6402992: (12, 0, 14, 0),
   6403016: (17, 0, 8, 0),
   6403040: (3, 0, 15, 0)},
                             elt_data={  3: {  'block': False,
         'caption': 'GetMTG',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x8979550> : "GetMTG"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 45.197610829307756,
         'posy': -51.702917526362285,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': "'HybridMTG'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x473bd10> : "string"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 89.819714054136639,
         'posy': -140.15335997854567,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': "'/home/hautret/developpement/rose/rose/'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x473bd10> : "string"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -70.649363376470319,
         'posy': -139.56211991373192,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'computeLeaflet4pts',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x8979290> : "ComputeLeaflet4pts"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -129.02451153237575,
         'posy': -87.975716448404953,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'VertexVisitor',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x89795d0> : "VertexVisitor"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -104.32337603275795,
         'posy': -34.137954493924106,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'plot3D',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4730650> : "plot3D"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -87.306739314459804,
         'posy': 85.248765985418828,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'plot3D',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4730650> : "plot3D"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 148.31480378136683,
         'posy': 142.42945785428105,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'PlantFrame_Rose',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x8979450> : "PlantFrame_Rose"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 55.673986119785866,
          'posy': 15.753563435249816,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'rose.drf',
          'delay': 0,
          'factory': '<openalea.core.data.DataFactory object at 0x8979790> : "rose.drf"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set([2]),
          'posx': 112.34474910861837,
          'posy': -50.973858351178308,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3735190> : "list"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 210.2007998015456,
          'posy': -91.566602078016146,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   13: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3735190> : "list"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 244.87367980375618,
          'posy': -94.145262005713761,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   14: {  'block': False,
          'caption': 'mesh_roseLeaflet',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x8979210> : "mesh_roseLeaflet"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 187.00589697048642,
          'posy': -52.21028292868489,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'leaflet_orientation',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x8979c90> : "leaflet_orientation"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 176.5360934208141,
          'posy': 17.052441281777057,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x43d7d50> : "+"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 156.9739341612422,
          'posy': 97.324967066749167,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': 'ReconstructWithTurtle',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x8979750> : "ReconstructWithTurtle"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -135.75524346522113,
          'posy': 15.538250758067477,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  3: [],
   4: [(0, "'HybridMTG'")],
   5: [(0, "'/home/hautret/developpement/rose/rose/'")],
   6: [  (0, '[0.25, 0.5, 0.074999999999999997, 1.0]'),
         (  1,
            '[0.81000000000000005, 0.92000000000000004, 0.94999999999999996, 1.0]')],
   7: [  (0, '<function meshedLeaflet at 0x1a607de8>'),
         (1, '<function meshedLeaflet at 0x1a607de8>'),
         (2, 'None')],
   8: [],
   9: [],
   10: [],
   11: [(0, 'PackageData(Rose, rose.drf)'), (1, 'None'), (2, 'None')],
   12: [(0, '[0.25, 0.5, 0.75, 1]')],
   13: [  (  0,
             '[0.81000000000000005, 0.97999999999999998, 0.93999999999999995, 0]')],
   14: [],
   15: [(1, 'None')],
   16: [],
   17: [(2, '3.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-144.88120599069089, 28.393804189130378],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [45.197610829307756, -51.702917526362285],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [89.819714054136639, -140.15335997854567],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-70.649363376470319, -139.56211991373192],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-129.02451153237575, -87.975716448404953],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-104.32337603275795, -34.137954493924106],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-87.306739314459804, 85.248765985418828],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [148.31480378136683, 142.42945785428105],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [55.673986119785866, 15.753563435249816],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [112.34474910861837, -50.973858351178308],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [210.2007998015456, -91.566602078016146],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   13: {  'position': [244.87367980375618, -94.145262005713761],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   14: {  'position': [187.00589697048642, -52.21028292868489],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [176.5360934208141, 17.052441281777057],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [156.9739341612422, 97.324967066749167],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-135.75524346522113, 15.538250758067477],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_computeLeaflet4pts = Factory(name='ComputeLeaflet4pts',
                authors=' (rose authors)',
                description='compute leaflet geometry from 4 points',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='computeLeaflet4pts',
                inputs=[{'interface': ISequence, 'name': 'x', 'value': [0.25, 0.5, 0.074999999999999997, 1.0], 'desc': ''}, {'interface': ISequence, 'name': 'y', 'value': [0.81000000000000005, 0.92000000000000004, 0.94999999999999996, 1.0], 'desc': 'sequence of positions along the y axis'}],
                outputs=[{'interface': IFunction, 'name': 'computeLeaflet4pts', 'desc': 'function that computes a leaflet from 4 digitization points'}],
                widgetmodule=None,
                widgetclass=None,
               )




RoseLpy = CompositeNodeFactory(name='RoseLpy',
                             description='Lpy code for rosebush growth study.',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('Rose', 'simpleRoseField.lpy'),
   3: ('vplants.l-py', 'LSystem'),
   4: ('vplants.l-py', 'plot'),
   5: ('vplants.l-py', 'run'),
   6: ('openalea.file', 'read'),
   7: ('openalea.flow control', 'X'),
   8: ('vplants.l-py', 'generateScene'),
   9: ('vplants.plantgl.visualization', 'plot3D')},
                             elt_connections={  10019208: (5, 0, 4, 0),
   10019220: (3, 0, 4, 1),
   10019232: (6, 0, 3, 0),
   10019244: (8, 0, 9, 0),
   10019256: (3, 0, 5, 0),
   10019268: (2, 0, 6, 0),
   10019280: (5, 0, 8, 0),
   10019292: (3, 0, 8, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'simpleRoseField.lpy',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x048C6AF0> : "simpleRoseField.lpy"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 58.550049531486565,
         'posy': -101.02753644648665,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'LSystem',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x05028FB0> : "LSystem"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 110.60378294916885,
         'posy': -10.279205576499706,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'plot',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x068BF1D0> : "plot"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 10.0,
         'posy': 81.952240214558628,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'run',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x068BF0D0> : "run"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 124.58706702426436,
         'posy': 51.646766756066114,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'read',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x04A17CB0> : "read"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 105.27681758722773,
         'posy': -55.55841115299944,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'X2',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x04B11DF0> : "X"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 274.40796782885906,
         'posy': -90.18368600561692,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'generateScene',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x068BF190> : "generateScene"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 246.44139967866806,
         'posy': 79.613334906257137,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'plot3D',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x0485A5F0> : "plot3D"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 276.40557983958706,
         'posy': 139.54169522809502,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (0, 'PackageData(Rose, simpleRoseField.lpy)'),
         (1, 'None'),
         (2, 'None')],
   3: [(1, "''"), (2, '-1'), (3, '{}')],
   4: [],
   5: [(1, "''"), (2, '-1'), (3, '{}')],
   6: [],
   7: [(0, "'x'")],
   8: [],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [58.550049531486565, -101.02753644648665],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [110.60378294916885, -10.279205576499706],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [10.0, 81.952240214558628],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [124.58706702426436, 51.646766756066114],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [105.27681758722773, -55.55841115299944],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [274.40796782885906, -90.18368600561692],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [246.44139967866806, 79.613334906257137],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [276.40557983958706, 139.54169522809502],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_CropGeneration_2011 = Factory(name='CropGeneration_2011',
                authors=' (wralea authors)',
                description='creates a population of plants by associating plants numbers to positions in a grid',
                category='data processing',
                nodemodule='rose',
                nodeclass='CropGeneration_2011',
                inputs=[{'interface': IDict, 'name': 'plantlist', 'value': {}, 'desc': 'the dispatching of plants on the table'}, {'interface': IDict, 'name': 'existingmtglist', 'value': {}, 'desc': 'the dict of existing mtg:filename'}, {'interface': ISequence, 'name': 'excludelist', 'value': [], 'desc': 'list of plants not touse for filling'}, {'interface': IInt, 'name': 'n_x', 'value': 0, 'desc': 'nr of x points'}, {'interface': IInt, 'name': 'n_y', 'value': 0, 'desc': 'nr of y points'}, {'interface': IInt, 'name': 's_x', 'value': 0, 'desc': 'value for y stride'}, {'interface': IInt, 'name': 's_y', 'value': 0, 'desc': 'value  for Y stride'}, {'interface': ISequence, 'name': 'origin', 'value': [0, 0, 800], 'desc': 'the 3D coordinates of the 0,0 position'}, {'interface': IBool, 'name': 'DoFill', 'value': True, 'desc': 'If we fill missing data with existing data'}, {'interface': IBool, 'name': 'DoRotate', 'value': True, 'desc': 'wether we rotate the planst used for filling'}],
                outputs=[{'interface': IDict, 'name': 'dictofpositions', 'desc': 'dict of filenames associated with a list of coordinates and rotations'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_MTG_union = Factory(name='MTG_union',
                authors=' (rose authors)',
                description='garthers differents MTG objects in a single one.',
                category='data processing',
                nodemodule='rose',
                nodeclass='MTG_union',
                inputs=[{'interface': ISequence, 'name': 'mtgsin', 'value': {}, 'desc': 'a list of MTG objects to be glued together in a signle MTG object'}],
                outputs=[{'interface': IDict, 'name': 'mtgout', 'desc': 'An MTG object that holds the MTGs of the input list in a single one'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_BezierPatchFlower = Factory(name='BezierPatchFlower',
                authors=' (rose authors)',
                description='computes a flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BezierPatchFlower',
                inputs=[{'interface': ISequence, 'name': 'controlPointMatrix', 'value': None, 'desc': 'control points matrix of Vector4'}, {'interface': IInt, 'name': 'uStride', 'value': 8, 'desc': '"U" stride'}, {'interface': IInt, 'name': 'vStride', 'value': 8, 'desc': '"V" stride'}],
                outputs=[{'interface': IFunction, 'name': 'BezierPatchFlower', 'desc': 'computes a red flower from 2 points and a diameter.'}],
                widgetmodule=None,
                widgetclass=None,
               )




PlantFrame_Rose_PlantFrame_Rose = Factory(name='PlantFrame_Rose',
                authors=' (wralea authors)',
                description='',
                category='scene design',
                nodemodule='PlantFrame_Rose',
                nodeclass='PlantFrame_Rose',
                inputs=[{'interface': None, 'name': 'mtg_file', 'value': None, 'desc': ''}, {'interface': None, 'name': 'drf_p', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}, {'interface': None, 'name': 'mtg_file', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_HttpDir2DictOfFiles = Factory(name='HttpDir2DictOfFiles',
                authors=' (rose authors) ',
                description='gets the files whose name matches "filter" on an URL and returns a dict which associates the names with a temp file on the local host.',
                category='Unclassified',
                nodemodule='rose',
                nodeclass='HttpDir2DictOfFiles',
                inputs=[{'interface': IStr, 'name': 'url', 'value': None, 'desc': 'An URL from which we download the files.'}, {'interface': IStr, 'name': 'filtre', 'value': None, 'desc': 'a string to filter filenames'}],
                outputs=[{'interface': IDict, 'name': 'dictoffiles', 'desc': 'a dict which associates PlantNum.mtg:realPathOfFile'}],
                widgetmodule=None,
                widgetclass=None,
               )




DigitReconstruction = CompositeNodeFactory(name='DigitReconstruction',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure.list', 'list'),
   3: ('Rose', 'GetMTG'),
   4: ('Rose', '21052010_BFV.txt'),
   5: ('Rose', 'PlantReconstruction'),
   6: ('openalea.data structure.string', 'string'),
   9: ('openalea.data structure', 'bool'),
   10: ('openalea.data structure.list', 'list'),
   11: ('openalea.data structure.string', 'string'),
   12: ('openalea.flow control', 'X'),
   13: ('openalea.data structure.list', 'list'),
   14: ('openalea.function operator', 'map'),
   15: ('openalea.data structure.string', 'string'),
   16: ('openalea.file', 'dirname'),
   17: ('Rose', 'PlantPositionning'),
   18: ('vplants.plantgl.visualization', 'plot3D'),
   19: ('vplants.plantgl.objects', 'Scene'),
   21: ('openalea.file', 'packagedir'),
   22: ('Rose', 'CropGeneration'),
   23: ('Rose', 'mesh_roseLeaflet')},
                             elt_connections={  6402680: (4, 0, 22, 0),
   6402704: (12, 0, 3, 1),
   6402728: (9, 0, 22, 2),
   6402752: (13, 0, 23, 1),
   6402776: (2, 0, 23, 0),
   6402800: (19, 0, 18, 0),
   6402824: (17, 0, 14, 0),
   6402848: (23, 0, 5, 1),
   6402872: (22, 1, 14, 1),
   6402896: (3, 0, 5, 0),
   6402920: (10, 0, 22, 1),
   6402944: (22, 0, 17, 2),
   6402968: (5, 0, 17, 0),
   6402992: (12, 0, 17, 1),
   6403016: (14, 0, 19, 0),
   6403040: (21, 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x477bb90> : "list"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -308.10388633156714,
         'posy': -271.9436977444185,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   3: {  'block': False,
         'caption': 'GetMTG',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c42150> : "GetMTG"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -178.95176005894521,
         'posy': -218.66289776412353,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '21052010_BFV.txt',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x3c42610> : "21052010_BFV.txt"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': -21.022245270183205,
         'posy': -265.50317174564702,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'PlantReconstruction',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x3c37f90> : "PlantReconstruction"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -215.25177600133591,
         'posy': -141.05576894703779,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': "'31'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x38236d0> : "string"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 57.586784574068545,
         'posy': -215.23485072670456,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'False',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x2ff9410> : "bool"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 151.93139090884503,
         'posy': -269.59254326682282,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x477bb90> : "list"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 123.37285878312233,
          'posy': -292.43936896740104,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': "'32'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x38236d0> : "string"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 93.390913807110451,
          'posy': -221.89528086086881,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'X1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x319dad0> : "X"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -93.895517625766757,
          'posy': -287.3146102420942,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x477bb90> : "list"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -274.49895904577772,
          'posy': -273.19317801753658,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   14: {  'block': False,
          'caption': 'map',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2f3b710> : "map"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -47.157709040915272,
          'posy': -45.931099749823353,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': "'39'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x38236d0> : "string"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 132.23051749809341,
          'posy': -223.0376221458977,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'dirname',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3801190> : "dirname"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -262.92734340277298,
          'posy': -306.65798008181542,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   17: {  'block': False,
          'caption': 'PlantPositionning',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c422d0> : "PlantPositionning"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -138.69103813656062,
          'posy': -92.454104177323472,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x477b8d0> : "plot3D"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -49.766922760214044,
          'posy': 41.657346363233621,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'Scene',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3905190> : "Scene"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -48.921246299210885,
          'posy': -1.4763930459179591,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 0},
   21: {  'block': False,
          'caption': 'packagedir',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3801ed0> : "packagedir"',
          'hide': True,
          'id': 21,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -203.67436787518977,
          'posy': -282.58879085266182,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': 'CropGeneration',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c42350> : "CropGeneration"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 17.492618262198249,
          'posy': -149.51875697713666,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'mesh_roseLeaflet',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3bc9a10> : "mesh_roseLeaflet"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -322.75516743125706,
          'posy': -219.51071905987507,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '[0.25, 0.5, 0.75, 1.0]')],
   3: [],
   4: [  (0, "'/home/hautret/developpement/rose/rose/21052010_BFV.txt'"),
         (1, 'None'),
         (2, 'None')],
   5: [],
   6: [(0, "'31'")],
   9: [(0, 'False')],
   10: [(0, '[]')],
   11: [(0, "'32'")],
   12: [(0, "'x'")],
   13: [  (  0,
             '[0.81000000000000005, 0.97999999999999998, 0.93999999999999995, 0.0]')],
   14: [],
   15: [(0, "'39'")],
   16: [  (  0,
             "'C:/Documents and Settings/bertheloot/.openalea/user_pkg/Rose/MTG/Manip2010'")],
   17: [],
   18: [],
   19: [],
   21: [(0, "'Rose'")],
   22: [(3, '90.0'), (4, '200.0'), (5, '15.0')],
   23: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-308.10388633156714, -271.9436977444185],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   3: {  'position': [-178.95176005894521, -218.66289776412353],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-21.022245270183205, -265.50317174564702],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-215.25177600133591, -141.05576894703779],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [57.586784574068545, -215.23485072670456],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-98.092928703835639, -181.82721771014127],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-260.30635820718862, -133.92573501964051],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [151.93139090884503, -269.59254326682282],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [123.37285878312233, -292.43936896740104],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [93.390913807110451, -221.89528086086881],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-93.895517625766757, -287.3146102420942],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-274.49895904577772, -273.19317801753658],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   14: {  'position': [-47.157709040915272, -45.931099749823353],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [132.23051749809341, -223.0376221458977],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-262.92734340277298, -306.65798008181542],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   17: {  'position': [-138.69103813656062, -92.454104177323472],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-49.766922760214044, 41.657346363233621],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-48.921246299210885, -1.4763930459179591],
          'useUserColor': True,
          'userColor': [0, 170, 0]},
   20: {  'position': [-48.259405536474432, -324.70599651347067],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-203.67436787518977, -282.58879085266182],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [17.492618262198249, -149.51875697713666],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-322.75516743125706, -219.51071905987507],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-211.11381697755019, 17.401464904768588],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-344.52056878149108, -128.64450905907336],
          'useUserColor': False,
          'userColor': None},
   26: {  'position': [-307.16158243707849, -71.944790017080976],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [-246.91546164451677, -55.817889449697283],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




Leaflet_Orientation_4points_Leaflet_Orientation_4points = Factory(name='Leaflet Orientation 4points',
                authors=' (wralea authors)',
                description='',
                category='Unclassified',
                nodemodule='Leaflet_Orientation_4points',
                nodeclass='Leaflet_Orientation_4points',
                inputs=[{'interface': IData, 'name': 'mtg', 'value': None, 'desc': ''}, {'interface': None, 'name': 'mesh', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_Files2MTGs = Factory(name='Files2MTGs',
                authors=' (rose authors)',
                description='Makes MTG objects from MTG files',
                category='data processing',
                nodemodule='rose',
                nodeclass='Files2MTGs',
                inputs=[{'interface': IDict, 'name': 'cropdict', 'value': {}, 'desc': 'A dict which associates MTG filenames with lists of [positions, rotation] pairs.'}],
                outputs=[{'interface': ISequence, 'name': 'listOfMTGs', 'desc': 'A list of MTG objects, i.e MTG files shifted and rotated according to the input dict.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_GetMTG = Factory(name='GetMTG',
                authors=' (wralea authors)',
                description='generates a complete path to a file.    the argument is in the form of "NUM[-N]", which means that    we want to create an MTG object fom the NUM.mtg file.    To achieve that, the filename is splitted against the"-" (dash) separator    and the string ".mtg" is concatenated to it.',
                category='data processing',
                nodemodule='rose',
                nodeclass='GetMTG',
                inputs=[{'interface': IStr, 'name': 'dirname', 'value': '', 'desc': 'the name of the directory to read the file from'}, {'interface': IStr, 'name': 'IDplant', 'value': None, 'desc': 'The plantID to compute the filename from'}],
                outputs=[{'interface': IData, 'name': 'mtg', 'value': None, 'desc': 'the MTG structure built when reading the file'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RawBud = Factory(name='RawBud',
                authors=' (rose authors)',
                description='builds a raw bud with a sphere and a cone',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RawBud',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'compute_bud', 'desc': 'function to draw a bud'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_VertexVisitor = Factory(name='VertexVisitor',
                authors=' (wralea authors)',
                description='function to visit MTG nodes',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='VertexVisitor',
                inputs=[{'interface': IFunction, 'name': 'leaf_factory', 'value': None, 'desc': 'function to compute leaflet geometry'}, {'interface': IFunction, 'name': 'compute_bud', 'value': None, 'desc': 'function to compute bud geometry'}, {'interface': IFunction, 'name': 'flower_factory', 'value': None, 'desc': 'function to compute flower geometry'}],
                outputs=[{'interface': IFunction, 'name': 'VertexVisitor', 'desc': 'function to visit the MTG nodes'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_PointArray = Factory(name='PointArray',
                authors=' (rose authors)',
                description='returns a points array.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='PointArray',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'pts_array', 'desc': 'A Vector2 array.'}],
                widgetmodule=None,
                widgetclass=None,
               )




GetLocalFiles = CompositeNodeFactory(name='GetLocalFiles',
                             description='Get mtg files from local directory',
                             category='data i/o',
                             doc='',
                             inputs=[  {  'desc': 'the name of the server',
      'interface': IStr,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'a string to filter file names',
      'interface': IStr,
      'name': 'filenamefilter',
      'value': None}],
                             outputs=[  {  'desc': 'the dictionnary that associates MTG files to temp files.',
      'interface': IDict,
      'name': 'DictOfFiles'}],
                             elt_factory={  6: ('openalea.file', 'glob'), 10: ('Rose', 'LocalDir2DictOfFiles')},
                             elt_connections={  6402944: ('__in__', 0, 6, 0),
   6402968: ('__in__', 1, 6, 1),
   6403016: (10, 0, '__out__', 0),
   6403040: (6, 0, 10, 0)},
                             elt_data={  6: {  'block': False,
         'caption': 'glob',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x37f19d0> : "glob"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 87.192309122039816,
         'posy': -30.976215082829924,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'LocalDir2DictOfFiles',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c55a10> : "LocalDir2DictOfFiles"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 41.266968895291669,
          'posy': 7.8576145012888787,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 90.352793999429906,
                'posy': -72.413437159090364,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 89.387669892415744,
                 'posy': 49.968618598341379,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  6: [], 10: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  5: {  'position': [75.719636869139805, -74.572369643849825],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [87.192309122039816, -30.976215082829924],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [31.057076995096743, -167.06126932364518],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [46.01779933960718, -122.54187888410866],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-44.807248015563559, -30.86226323142488],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [41.266968895291669, 7.8576145012888787],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [90.352793999429906, -72.413437159090364],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [89.387669892415744, 49.968618598341379],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




PlantReconstruction = CompositeNodeFactory(name='PlantReconstruction',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[  {  'desc': '', 'interface': IData, 'name': 'mtg', 'value': None},
   {  'desc': '', 'interface': None, 'name': 'mesh leaflet', 'value': None}],
                             outputs=[{  'desc': '', 'interface': None, 'name': 'scene'}],
                             elt_factory={  2: ('Rose', 'leaflet_orientation'),
   3: ('openalea.math', '+'),
   4: ('Rose', 'SceneRotation'),
   5: ('Rose', 'PlantFrame_Rose'),
   6: ('Rose', 'rose.drf')},
                             elt_connections={  6402872: (5, 0, 3, 1),
   6402896: ('__in__', 1, 2, 2),
   6402920: (4, 0, '__out__', 0),
   6402944: ('__in__', 0, 5, 0),
   6402968: (2, 0, 3, 0),
   6402992: ('__in__', 0, 2, 0),
   6403016: (3, 0, 4, 0),
   6403040: (6, 0, 5, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'leaflet_orientation',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c74510> : "leaflet_orientation"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -107.0344947815326,
         'posy': -64.530295715657431,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x2a8d990> : "+"',
         'hide': True,
         'id': 3,
         'is_in_error_state': False,
         'is_user_application': False,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -1.2580154043994689,
         'posy': -21.646059262538635,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'SceneRotation',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c74650> : "SceneRotation"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -34.502511218242105,
         'posy': 22.907982785501325,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'PlantFrame_Rose',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3c74550> : "PlantFrame_Rose"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 36.919799736461243,
         'posy': -62.341670880309657,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'rose.drf',
         'delay': 0,
         'factory': '<openalea.core.data.DataFactory object at 0x3c744d0> : "rose.drf"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set([2]),
         'posx': 69.20545813750195,
         'posy': -128.68916585144234,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': -0.91469588625291465,
                'posy': -159.86619998428444,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': -2.5518457517994264,
                 'posy': 69.833703163003307,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(1, 'None')],
   3: [],
   4: [],
   5: [],
   6: [(0, 'PackageData(Rose, rose.drf)'), (1, 'None'), (2, 'None')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-107.0344947815326, -64.530295715657431],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-1.2580154043994689, -21.646059262538635],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-34.502511218242105, 22.907982785501325],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [36.919799736461243, -62.341670880309657],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [69.20545813750195, -128.68916585144234],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [-0.91469588625291465, -159.86619998428444],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [-2.5518457517994264, 69.833703163003307],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_LocalDir2DictOfFiles = Factory(name='LocalDir2DictOfFiles',
                authors=' (rose authors)',
                description='',
                category='data processing',
                nodemodule='rose',
                nodeclass='LocalDir2DictOfFiles',
                inputs=[{'interface': ISequence, 'name': 'listoffiles', 'value': None, 'desc': 'The list of files to make the dist from'}],
                outputs=[{'interface': IDict, 'name': 'dictoffiles', 'desc': 'a dict which associates PlantNum.mtg:realPathOfFile'}],
                widgetmodule=None,
                widgetclass=None,
               )



_61555024 = DataFactory(name='simpleRoseField.lpy',
                    description='',
                    editors=None,
                    includes=None,
                    )



PlantPositionning_PlantPositionning = Factory(name='PlantPositionning',
                authors=' (wralea authors)',
                description='',
                category='data processing',
                nodemodule='PlantPositionning',
                nodeclass='PlantPositionning',
                inputs=[{'interface': None, 'name': 'scene', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'IDplant', 'value': None, 'desc': ''}, {'interface': IDict, 'name': 'plant_pos', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_PolygonLeaflet = Factory(name='PolygonLeaflet',
                authors=' (rose authors)',
                description='computes a quick leaflet.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='PolygonLeaflet',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'PolygonLeaflet', 'desc': 'compute a 2 facets leaflets from 4 points.'}],
                widgetmodule=None,
                widgetclass=None,
               )




SceneRotation_SceneRotation = Factory(name='SceneRotation',
                authors=' (wralea authors)',
                description='',
                category='scene design',
                nodemodule='SceneRotation',
                nodeclass='SceneRotation',
                inputs=[{'interface': None, 'name': 'scene', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_ReconstructWithTurtle = Factory(name='ReconstructWithTurtle',
                authors=' (wralea authors)',
                description='builds a scene using the plantgl Turtle',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='ReconstructWithTurtle',
                inputs=[{'interface': IData, 'name': 'g', 'value': None, 'desc': 'a "Sagah2011" MTG'}, {'interface': IFunction, 'name': 'Visitor', 'value': None, 'desc': 'A function that builds the scene while walking throught the nodes of the MTG'}, {'interface': IFloat, 'name': 'powerParam', 'value': None, 'desc': 'the power parameter of the pipe model'}],
                outputs=[{'interface': IData, 'name': 'TheScene', 'desc': 'A 3D scene'}],
                widgetmodule=None,
                widgetclass=None,
               )




testRevolutionFig = CompositeNodeFactory(name='testRevolutionFig',
                             description='try to reproduce a bug.',
                             category='category test',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('Rose', 'RevolutionFig'),
   3: ('Rose', 'PointArray'),
   5: ('vplants.plantgl.visualization', 'plot3D')},
                             elt_connections={  6403016: (2, 0, 5, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'RevolutionFig',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3a6ee90> : "RevolutionFig"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 9.7459890388892596,
         'posy': 8.619631041931715,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'PointArray',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3a6ea90> : "PointArray"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 12.735039616461066,
         'posy': -34.613184598586486,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'plot3D',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4738390> : "plot3D"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 29.478916430031788,
         'posy': 44.048955585104984,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [  (  0,
            '[Vector2(0.1,0), Vector2(0.5,0.06), Vector2(0.4,0.14), Vector2(0.6,0.18), Vector2(1,0.3), Vector2(0.9,0.42), Vector2(0.5,0.6), Vector2(0.3,0.84), Vector2(1,1)]'),
         (1, '0')],
   3: [],
   5: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [9.7459890388892596, 8.619631041931715],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [12.735039616461066, -34.613184598586486],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [29.478916430031788, 44.048955585104984],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




CanopyReconstruction2011 = CompositeNodeFactory(name='CanopyReconstruction2011',
                             description='make a canopy from digitized plants',
                             category='workflow',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('Rose', 'VertexVisitor'),
   3: ('openalea.data structure.string', 'string'),
   6: ('Rose', 'GetLocalFiles'),
   9: ('openalea.data structure', 'int'),
   10: ('openalea.file.pickle', 'pickle dump'),
   11: ('openalea.file', 'filename'),
   12: ('vplants.plantgl.visualization', 'plot3D'),
   13: ('Rose', 'MTG_union'),
   14: ('Rose', 'GridFile2Dict'),
   15: ('Rose', 'CropGeneration_2011'),
   16: ('Rose', 'ReconstructWithTurtle'),
   18: ('Rose', 'Files2MTGs'),
   19: ('openalea.data structure', 'bool'),
   20: ('openalea.data structure.list', 'list'),
   21: ('openalea.file.pickle', 'pickle load'),
   22: ('openalea.python method', 'getitem'),
   23: ('openalea.data structure', 'bool'),
   24: ('Rose', 'drawFlowers'),
   25: ('Rose', 'drawBuds'),
   26: ('Rose', 'GetOrigin'),
   27: ('openalea.python method', 'getitem'),
   28: ('openalea.python method', 'getitem'),
   29: ('openalea.data structure', 'float'),
   30: ('openalea.data structure.string', 'string'),
   31: ('openalea.data structure.list', 'list'),
   32: ('Rose', 'drawLeaflets'),
   33: ('openalea.data structure', 'int'),
   36: ('openalea.data structure.list', 'list'),
   38: ('Rose', 'Canopy2011Driver')},
                             elt_connections={  6402368: (23, 0, 15, 8),
   6402392: (29, 0, 16, 2),
   6402416: (38, 1, 6, 0),
   6402440: (20, 0, 15, 2),
   6402464: (3, 0, 38, 4),
   6402488: (19, 0, 15, 9),
   6402512: (11, 0, 10, 1),
   6402536: (14, 0, 15, 0),
   6402560: (31, 0, 38, 0),
   6402584: (13, 0, 10, 0),
   6402608: (26, 0, 15, 7),
   6402632: (25, 0, 28, 0),
   6402656: (9, 0, 38, 3),
   6402680: (11, 0, 21, 0),
   6402704: (16, 0, 12, 0),
   6402728: (22, 0, 2, 2),
   6402752: (21, 0, 16, 0),
   6402776: (28, 0, 2, 1),
   6402800: (32, 0, 27, 0),
   6402824: (27, 0, 2, 0),
   6402848: (6, 0, 15, 1),
   6402872: (33, 0, 38, 1),
   6402896: (36, 0, 38, 2),
   6402920: (38, 3, 26, 0),
   6402944: (38, 0, 14, 0),
   6402968: (2, 0, 16, 1),
   6402992: (15, 0, 18, 0),
   6403016: (24, 0, 22, 0),
   6403040: (18, 0, 13, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'VertexVisitor',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3ac8910> : "VertexVisitor"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -496.796686463377,
         'posy': 90.239943170026834,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': "'/mnt/echange/samba/MTG'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4785550> : "string"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -202.12534771727044,
         'posy': -205.05065167898431,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'GetLocalFiles',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x3ac8990> : "GetLocalFiles"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -183.23607851764464,
         'posy': -39.432107597052607,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '2',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x477fb10> : "int"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -117.4198895575162,
         'posy': -168.06928299705677,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'pickle dump',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c33fd0> : "pickle dump"',
          'hide': True,
          'id': 10,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -125.017899940067,
          'posy': 139.30761531753856,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'filename',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3380d10> : "filename"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -44.857785842759284,
          'posy': 101.12853560122247,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4777e50> : "plot3D"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -441.9112877703991,
          'posy': 203.07150560728525,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'MTG_union',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3ac86d0> : "MTG_union"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -132.58068120076885,
          'posy': 99.22955558237075,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': 'gridFile2dict',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3ac8cd0> : "GridFile2Dict"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -206.5147189729787,
          'posy': -71.515684724678863,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'CropGeneration_2011',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3ac8610> : "CropGeneration_2011"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -168.26402965432865,
          'posy': 31.102334803114985,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'ReconstructWithTurtle',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3ac8b50> : "ReconstructWithTurtle"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -490.63679628764532,
          'posy': 150.60314130651946,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': 'Files2MTGs',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3ac8690> : "Files2MTGs"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -132.40224056341603,
          'posy': 64.574878937799127,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'True',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x477f8d0> : "bool"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 17.886847377399079,
          'posy': -48.422732006904937,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
          'hide': True,
          'id': 20,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -140.83518631861594,
          'posy': -9.7981852050721443,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   21: {  'block': False,
          'caption': 'pickle load',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c33dd0> : "pickle load"',
          'hide': True,
          'id': 21,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -293.75574156702049,
          'posy': 90.8693984448675,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x20f0790> : "getitem"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -391.75700637781131,
          'posy': 7.5194778419568209,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'False',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x477f8d0> : "bool"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -23.417190233291279,
          'posy': -49.085123923019154,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   24: {  'block': False,
          'caption': 'drawFlowers',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3ac8e10> : "drawFlowers"',
          'hide': True,
          'id': 24,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -411.12779888995044,
          'posy': -34.664013932607062,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'drawBuds',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3ac8c50> : "drawBuds"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -495.07146551251287,
          'posy': -34.607948060386491,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   26: {  'block': False,
          'caption': 'GetOrigin',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3ac8d50> : "GetOrigin"',
          'hide': True,
          'id': 26,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -108.55953911314603,
          'posy': -11.158327328125409,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   27: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x20f0790> : "getitem"',
          'hide': True,
          'id': 27,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -586.22939308391108,
          'posy': 4.6087483684011907,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   28: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x20f0790> : "getitem"',
          'hide': True,
          'id': 28,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -482.77034788964897,
          'posy': 5.3782253862518665,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   29: {  'block': False,
          'caption': '4.2',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x477f990> : "float"',
          'hide': True,
          'id': 29,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -402.80085488743174,
          'posy': 89.492450951661084,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   30: {  'block': False,
          'caption': "'Z:/'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4785550> : "string"',
          'hide': True,
          'id': 30,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -28.314097854314383,
          'posy': -204.0275037329782,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   31: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
          'hide': True,
          'id': 31,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -205.13710122354044,
          'posy': -168.01474097730252,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   32: {  'block': False,
          'caption': 'drawLeaflets',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0xa88c810> : "drawLeaflets"',
          'hide': True,
          'id': 32,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -607.29382260678028,
          'posy': -32.204975441268658,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   33: {  'block': False,
          'caption': '0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x477fb10> : "int"',
          'hide': True,
          'id': 33,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -175.08840042648799,
          'posy': -167.82340298227959,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   36: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
          'hide': True,
          'id': 36,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -152.35691860731836,
          'posy': -168.11283119502784,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   38: {  'block': False,
          'caption': 'Canopy2011Driver',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x3ac8c90> : "Canopy2011Driver"',
          'hide': True,
          'id': 38,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -206.50988739491825,
          'posy': -114.53730161112151,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [(0, "'/mnt/echange/samba/MTG'")],
   6: [(1, "'*.mtg'")],
   9: [(0, '2')],
   10: [(2, 'False')],
   11: [(0, "'/home/hautret/tmp/canopy.pf'")],
   12: [],
   13: [],
   14: [],
   15: [(3, '13'), (4, '6'), (5, '150'), (6, '150')],
   16: [],
   18: [],
   19: [(0, 'True')],
   20: [(0, '[]')],
   21: [],
   22: [(1, '3')],
   23: [(0, 'False')],
   24: [],
   25: [],
   26: [],
   27: [(1, '2')],
   28: [(1, '1')],
   29: [(0, '4.2000000000000002')],
   30: [(0, "'Z:/'")],
   31: [  (  0,
             "['Manip1_C1_PARfort', 'Manip1_C2_PARfaible', 'Manip2_C1_PARfort', 'Manip2_C2_PARfaible', 'Manip3_C1C2_PARfF']")],
   32: [],
   33: [(0, '0')],
   36: [(0, "['P1', 'P2', 'P3']")],
   38: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-496.796686463377, 90.239943170026834],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-202.12534771727044, -205.05065167898431],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-290.99251516508514, 147.27860016544926],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [35.499866797311142, -157.71453993256128],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-183.23607851764464, -39.432107597052607],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-188.37089713162212, -169.14476994867408],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-396.67021921519785, -119.93966462628714],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-117.4198895575162, -168.06928299705677],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-125.017899940067, 139.30761531753856],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-44.857785842759284, 101.12853560122247],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-441.9112877703991, 203.07150560728525],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-132.58068120076885, 99.22955558237075],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [-206.5147189729787, -71.515684724678863],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [-168.26402965432865, 31.102334803114985],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-490.63679628764532, 150.60314130651946],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-491.53749791819041, -26.193427684817848],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-132.40224056341603, 64.574878937799127],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [17.886847377399079, -48.422732006904937],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-140.83518631861594, -9.7981852050721443],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-293.75574156702049, 90.8693984448675],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [-391.75700637781131, 7.5194778419568209],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-23.417190233291279, -49.085123923019154],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-411.12779888995044, -34.664013932607062],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-495.07146551251287, -34.607948060386491],
          'useUserColor': False,
          'userColor': None},
   26: {  'position': [-108.55953911314603, -11.158327328125409],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [-586.22939308391108, 4.6087483684011907],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [-482.77034788964897, 5.3782253862518665],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [-402.80085488743174, 89.492450951661084],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [-28.314097854314383, -204.0275037329782],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [-205.13710122354044, -168.01474097730252],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [-607.29382260678028, -32.204975441268658],
          'useUserColor': False,
          'userColor': None},
   33: {  'position': [-175.08840042648799, -167.82340298227959],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [-599.33009125788908, -179.19628491828604],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   35: {  'position': [-564.00166741567978, -178.72226863498418],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   36: {  'position': [-152.35691860731836, -168.11283119502784],
          'useUserColor': False,
          'userColor': None},
   37: {  'position': [-630.62509013497765, -126.0922584147504],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [-206.50988739491825, -114.53730161112151],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-403.25264928191103, -169.37285768988127],
          'useUserColor': False,
          'userColor': None},
   40: {  'position': [-507.2847787828747, -85.112166463315361],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_BuiltBud = Factory(name='BuiltBud',
                authors=' (rose authors)',
                description='a function builds a bud with 2 spheres and a paraboloid.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BuiltBud',
                inputs=[{'interface': IInt, 'name': 'stride', 'value': 10, 'desc': 'the number of splices of the graphic primitives.'}],
                outputs=[{'interface': IFunction, 'name': 'compute_bud', 'desc': 'function to draw a bud'}],
                widgetmodule=None,
                widgetclass=None,
               )




drawFlowers = CompositeNodeFactory(name='drawFlowers',
                             description='returns a list of functions that draw flowers',
                             category='composite',
                             doc='',
                             inputs=[  {  'desc': 'a function to lcolor tht turtle.',
      'interface': ISequence,
      'name': 'colorFunc',
      'value': None}],
                             outputs=[  {  'desc': 'a list of functions that draw flowers',
      'interface': ISequence,
      'name': 'drawFlower'}],
                             elt_factory={  2: ('Rose', 'BezierPatchFlower'),
   3: ('Rose', 'RawFlower'),
   4: ('Rose', 'NoOrgan'),
   5: ('openalea.data structure', 'int'),
   6: ('openalea.data structure', 'int'),
   7: ('Rose', 'TaperedFlower')},
                             elt_connections={  6402800: (6, 0, 2, 2),
   6402824: (6, 0, 7, 2),
   6402848: (5, 0, 7, 1),
   6402872: (2, 0, '__out__', 0),
   6402896: ('__in__', 0, 7, 3),
   6402920: (7, 0, '__out__', 0),
   6402944: ('__in__', 0, 2, 3),
   6402968: (4, 0, '__out__', 0),
   6402992: ('__in__', 0, 3, 0),
   6403016: (3, 0, '__out__', 0),
   6403040: (5, 0, 2, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'BezierPatchFlower',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5ede190> : "BezierPatchFlower"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 21.301224556255747,
         'posy': -17.836943972594959,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'RawFlower',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5edea50> : "RawFlower"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -58.285370348544177,
         'posy': -18.88808506141196,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5ede710> : "NoOrgan"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -127.8436064851085,
         'posy': -19.308622402272615,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '8',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4708f50> : "int"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 103.60166285446122,
         'posy': -121.20294333413273,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '8',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4708f50> : "int"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 131.40342844660594,
         'posy': -122.57111481776141,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'TaperedFlower',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5ede8d0> : "TaperedFlower"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 145.81074384585287,
         'posy': -17.232178818146245,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 82.735288499344165,
                'posy': -130.39222376086244,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 84.589317637865946,
                 'posy': 62.412882508502349,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, 'None')],
   3: [],
   4: [],
   5: [(0, '8')],
   6: [(0, '8')],
   7: [(0, 'None')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [21.301224556255747, -17.836943972594959],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-58.285370348544177, -18.88808506141196],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-127.8436064851085, -19.308622402272615],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [103.60166285446122, -121.20294333413273],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [131.40342844660594, -122.57111481776141],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [145.81074384585287, -17.232178818146245],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-44.521429995035319, -51.900622786239325],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-53.156918921739489, -96.013399618634139],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [82.735288499344165, -130.39222376086244],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [84.589317637865946, 62.412882508502349],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




revolutionTest1file_revolutionTest1file = Factory(name='revolutionTest1file',
                authors=' (wralea authors)',
                description='revolution fig test node in 1 file',
                category='category test',
                nodemodule='revolutionTest1file',
                nodeclass='revolutionTest1file',
                inputs=[],
                outputs=[{'interface': None, 'name': 'scene', 'desc': 'scene'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_GridFile2Dict = Factory(name='GridFile2Dict',
                authors=' (rose authors) ',
                description='Makes a dictionnary of pairs {plant num : plant position} in a 2D grid of int coordinates',
                category='data processing',
                nodemodule='rose',
                nodeclass='GridFile2Dict',
                inputs=[{'interface': IFileStr, 'name': 'GridFileName', 'value': '', 'desc': 'A file which contains a grid of plant numbers vs. positions in a 2D grid'}],
                outputs=[{'interface': IDict, 'name': 'dictOfPlantNums', 'desc': 'A dict which associates plant numbers with a position in a 2D grid.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RawFlower = Factory(name='RawFlower',
                authors=' (rose authors)',
                description='computes a quick flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RawFlower',
                inputs=[{'interface': IFunction, 'name': 'colorFunc', 'value': None, 'desc': 'a function to set the Turtle color'}],
                outputs=[{'interface': IFunction, 'name': 'RawFlower', 'desc': 'computes a conic red flower from 2 points and a diameter.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_NoOrgan = Factory(name='NoOrgan',
                authors=' (rose authors)',
                description='computes no leaflet in order to be able to look at the trunk.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='NoOrgan',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'PolygonLeaflet', 'desc': 'Makes nothing.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_GetOrigin = Factory(name='GetOrigin',
                authors=' (rose authors) ',
                description='Makes a dictionnary of pairs {plant num : plant position} in a 2D grid of int coordinates',
                category='data processing',
                nodemodule='rose',
                nodeclass='GetOrigin',
                inputs=[{'interface': IFileStr, 'name': 'OriginFilename', 'value': '', 'desc': 'A file which contains a header line (i.e "x","y","z" and a data line with a 3D origine coordinate.'}],
                outputs=[{'interface': ISequence, 'name': 'origin', 'desc': 'A vector of 3D coordinates.'}],
                widgetmodule=None,
                widgetclass=None,
               )



_61556560 = DataFactory(name='21052010_BFV.txt',
                    description='',
                    editors=None,
                    includes=None,
                    )



rose_geometry_RevolutionBud = Factory(name='RevolutionBud',
                authors=' (rose authors)',
                description='draws up a bud from a revolution volume.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RevolutionBud',
                inputs=[{'interface': IData, 'name': 'revFig', 'value': None, 'desc': 'a revolution volume'}],
                outputs=[{'interface': IFunction, 'name': 'rev_bud', 'desc': 'A function that draws a bud from a 3D revolution volume.'}],
                widgetmodule=None,
                widgetclass=None,
               )



_61325008 = DataFactory(name='rose.drf',
                    description='dressing file for rose stem',
                    editors=None,
                    includes=None,
                    )



rose_geometry_RevolutionFig = Factory(name='RevolutionFig',
                authors=' (rose authors)',
                description='returns a 3D revolution volume.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RevolutionFig',
                inputs=[{'interface': ISequence, 'name': 'pointArray', 'value': None, 'desc': 'a 2D points array'}, {'interface': IInt, 'name': 'stride', 'value': 8, 'desc': 'the 3D volume number of revolution slices.'}],
                outputs=[{'interface': IData, 'name': 'rev_fig', 'desc': 'A 3D revolution volume.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_ControlPointsMatrix = Factory(name='ControlPointsMatrix',
                authors=' (wralea authors)',
                description='a control matrix points to control a bezier patch',
                category='data i/o',
                nodemodule='rose_geometry',
                nodeclass='ControlPointsMatrix',
                inputs=[],
                outputs=[{'interface': IData, 'name': 'cmp', 'desc': 'a control points matrix to set up a bezier patch'}],
                widgetmodule=None,
                widgetclass=None,
               )




GetWebFiles = CompositeNodeFactory(name='GetWebFiles',
                             description='Get MTGs from a webserver',
                             category='data i/o',
                             doc='',
                             inputs=[  {  'desc': 'the URL of the server, including http://',
      'interface': IStr,
      'name': 'ServerName',
      'value': None},
   {  'desc': 'the directory where to get the files from',
      'interface': IStr,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'A string to filter filenames with.',
      'interface': IStr,
      'name': 'FileNameFilter',
      'value': None}],
                             outputs=[  {  'desc': 'the dictionnary that associates MTG files to temp files.',
      'interface': IDict,
      'name': 'DictOfFiles'}],
                             elt_factory={  5: ('openalea.python method', 'print'),
   9: ('openalea.math', '+'),
   10: ('Rose', 'HttpDir2DictOfFiles')},
                             elt_connections={  6402872: ('__in__', 2, 10, 1),
   6402896: (10, 0, '__out__', 0),
   6402920: ('__in__', 0, 9, 0),
   6402944: (9, 0, 10, 0),
   6402968: ('__in__', 1, 9, 1),
   6403016: (10, 0, 5, 0)},
                             elt_data={  5: {  'block': False,
         'caption': 'print',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x1e24990> : "print"',
         'hide': True,
         'id': 5,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 22.112740619081741,
         'posy': 139.00725106939879,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 57.299535035246208,
         'posy': -10.862803670320648,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'httpDir2DictOfFiles',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x67322d0> : "HttpDir2DictOfFiles"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 18.029314677248792,
          'posy': 50.549019939773281,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 56.042165150349334,
                'posy': -68.461016869243181,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 118.70269723862339,
                 'posy': 143.36518211047655,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  5: [], 9: [(1, '0')], 10: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  2: {  'position': [3.2113821928186255, 60.330313302205496],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-24.793391075541848, -18.168406617407726],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-20.793391075541848, 15.886574346013159],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [22.112740619081741, 139.00725106939879],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-24.916817856452088, -140.31400327658361],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [42.575997663737176, -90.418396575988723],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [57.299535035246208, -10.862803670320648],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [18.029314677248792, 50.549019939773281],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [56.042165150349334, -68.461016869243181],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [118.70269723862339, 143.36518211047655],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




Canopy2011Driver = CompositeNodeFactory(name='Canopy2011Driver',
                             description='drives data search for CanopyReconstruction2011 nodes',
                             category='data processing',
                             doc='',
                             inputs=[  {  'desc': 'List of experimentation folders',
      'interface': ISequence,
      'name': 'PosFilesList',
      'value': None},
   {  'desc': 'Index to select the experiment',
      'interface': IInt,
      'name': 'ManipIndex',
      'value': 0},
   {  'desc': 'List of prelevements for an experiment (P1 .. PN)',
      'interface': ISequence,
      'name': 'PrelevList',
      'value': None},
   {  'desc': 'Index to select the prelevementof the experiment',
      'interface': IInt,
      'name': 'PrelevIndex',
      'value': 0},
   {  'desc': 'root directory to search for pathes generated by other entries',
      'interface': IStr,
      'name': 'DataDir',
      'value': None}],
                             outputs=[  {  'desc': 'Actual position File',
      'interface': IStr,
      'name': 'Out4GridToDict'},
   {  'desc': 'directory to get MTG files from',
      'interface': IStr,
      'name': 'Out4GetLocal'},
   {  'desc': '(part of) the remote directory to get MTG files from',
      'interface': IStr,
      'name': 'Out4GetWeb'},
   {  'desc': 'the path to the origin file',
      'interface': IStr,
      'name': 'Out4GetOrigin'}],
                             elt_factory={  2: ('openalea.data structure.string', 'string'),
   4: ('openalea.math', '+'),
   6: ('openalea.data structure.string', 'string'),
   7: ('openalea.math', '+'),
   8: ('openalea.math', '+'),
   9: ('openalea.math', '+'),
   10: ('openalea.python method', 'getitem'),
   11: ('openalea.python method', 'getitem'),
   12: ('openalea.data structure.string', 'string'),
   13: ('openalea.math', '+'),
   14: ('openalea.math', '+')},
                             elt_connections={  6402584: (9, 0, '__out__', 3),
   6402608: (7, 0, 9, 0),
   6402632: (6, 0, 9, 1),
   6402656: (13, 0, 8, 0),
   6402680: (10, 0, 13, 0),
   6402704: (7, 0, '__out__', 1),
   6402728: (4, 0, '__out__', 0),
   6402752: (14, 0, '__out__', 2),
   6402776: ('__in__', 4, 7, 0),
   6402800: ('__in__', 3, 11, 1),
   6402824: ('__in__', 0, 10, 0),
   6402848: (8, 0, 14, 1),
   6402872: ('__in__', 1, 10, 1),
   6402896: (2, 0, 14, 0),
   6402920: ('__in__', 2, 11, 0),
   6402944: (11, 0, 8, 1),
   6402968: (2, 0, 13, 1),
   6402992: (12, 0, 4, 1),
   6403016: (7, 0, 4, 0),
   6403040: (14, 0, 7, 1)},
                             elt_data={  2: {  'block': False,
         'caption': "'/'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4740d90> : "string"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 96.829437224558447,
         'posy': -70.552169717533218,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 124.9022887159598,
         'posy': 268.63029439343103,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': "'/positions.txt'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4740d90> : "string"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 231.94918311606818,
         'posy': 215.62939023988667,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 184.29300108242055,
         'posy': 142.83792207769739,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 100.97739479192117,
         'posy': 58.76418930828703,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 259.6229833572803,
         'posy': 276.26702279364395,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x1e24750> : "getitem"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 37.616563672692095,
          'posy': -43.518182536315592,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x1e24750> : "getitem"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 115.44766501715497,
          'posy': -45.161636239104816,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': "'/positions.txt'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4740d90> : "string"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 97.228488474747678,
          'posy': 207.99266183967373,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 78.720505365437646,
          'posy': 10.0,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 147.44101073087526,
          'posy': 101.09462339139411,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 162.99286178218253,
                'posy': -220.39691806190118,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 195.49286178218253,
                 'posy': 374.38719052061322,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "'/'")],
   4: [],
   6: [(0, "'/origin.txt'")],
   7: [],
   8: [],
   9: [],
   10: [],
   11: [],
   12: [(0, "'/positions.txt'")],
   13: [],
   14: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [96.829437224558447, -70.552169717533218],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-93.181881214030895, -1.1221263839932023],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [124.9022887159598, 268.63029439343103],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-8.1928777513867743, 101.87096399554076],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [231.94918311606818, 215.62939023988667],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [184.29300108242055, 142.83792207769739],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [100.97739479192117, 58.76418930828703],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [259.6229833572803, 276.26702279364395],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [37.616563672692095, -43.518182536315592],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [115.44766501715497, -45.161636239104816],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [97.228488474747678, 207.99266183967373],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [78.720505365437646, 10.0],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [147.44101073087526, 101.09462339139411],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [162.99286178218253, -220.39691806190118],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [195.49286178218253, 374.38719052061322],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_TaperedFlower = Factory(name='TaperedFlower',
                authors=' (rose authors)',
                description='computes a flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='TaperedFlower',
                inputs=[{'interface': ISequence, 'name': 'controlPointMatrix', 'value': None, 'desc': 'control points matrix of Vector4'}, {'interface': IInt, 'name': 'uStride', 'value': 8, 'desc': '"U" stride'}, {'interface': IInt, 'name': 'vStride', 'value': 8, 'desc': '"V" stride'}],
                outputs=[{'interface': IFunction, 'name': 'TaperedFlower', 'desc': 'computes a flower from 2 points and a diameter.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_BudArray = Factory(name='budArray',
                authors=' (rose authors)',
                description='returns a points array.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BudArray',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'bud_array', 'desc': 'A Vector2 array.'}],
                widgetmodule=None,
                widgetclass=None,
               )




leaflet_orientation_leaflet_orientation = Factory(name='leaflet_orientation',
                authors=' (wralea authors)',
                description='',
                category='scene design',
                nodemodule='leaflet_orientation',
                nodeclass='leaflet_orientation',
                inputs=[{'interface': None, 'name': 'mtg', 'value': None, 'desc': ''}, {'interface': IFileStr, 'name': 'geom_file', 'value': None, 'desc': ''}, {'interface': None, 'name': 'mesh', 'value': None, 'desc': ''}],
                outputs=[{'interface': None, 'name': 'scene', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




CanopyReconstruction = CompositeNodeFactory(name='CanopyReconstruction',
                             description='Builds a 3d canopy from digitization data',
                             category='scene design',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure', 'float'),
   3: ('openalea.data structure.list', 'list'),
   4: ('openalea.mtg', 'MTG'),
   5: ('openalea.data structure.list', 'list'),
   6: ('Rose', 'ComputeLeaflet4pts'),
   7: ('Rose', 'VertexVisitor'),
   8: ('vplants.plantgl.visualization', 'plot3D'),
   9: ('openalea.file', 'glob'),
   10: ('Rose', 'ReconstructWithTurtle'),
   11: ('openalea.file', 'dirname'),
   12: ('openalea.data structure.string', 'string'),
   13: ('openalea.python method', 'getitem'),
   14: ('openalea.data structure', 'int'),
   15: ('openalea.data structure', 'int'),
   16: ('openalea.math', '+'),
   17: ('openalea.python method', 'getitem'),
   18: ('Rose', 'PolygonLeaflet'),
   19: ('Rose', 'NoOrgan')},
                             elt_connections={  6402632: (18, 0, 17, 0),
   6402656: (12, 0, 9, 1),
   6402680: (14, 0, 16, 0),
   6402704: (19, 0, 17, 0),
   6402752: (10, 0, 8, 0),
   6402800: (7, 0, 10, 1),
   6402824: (2, 0, 10, 2),
   6402848: (11, 0, 9, 0),
   6402872: (15, 0, 16, 1),
   6402896: (17, 0, 7, 0),
   6402920: (6, 0, 17, 0),
   6402944: (9, 0, 13, 0),
   6402992: (13, 0, 4, 0),
   6403016: (4, 0, 10, 0),
   6403040: (16, 0, 13, 1)},
                             elt_data={  2: {  'block': False,
         'caption': '2.5',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4740390> : "float"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -25.567446849555555,
         'posy': -33.23768090442222,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x373f150> : "list"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -193.94542610922454,
         'posy': -168.65029807639615,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   4: {  'block': False,
         'caption': 'MTG',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3afaf10> : "MTG"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 76.913902204712443,
         'posy': -5.3469557682420401,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x373f150> : "list"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -228.55474109745128,
         'posy': -168.4052055057154,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   6: {  'block': False,
         'caption': 'computeLeaflet4pts',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3a71450> : "ComputeLeaflet4pts"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -261.13926336519967,
         'posy': -126.45253267734243,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'VertexVisitor',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3a71810> : "VertexVisitor"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -122.39645638076145,
         'posy': -34.250255247124137,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'plot3D',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4735850> : "plot3D"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -105.21123714537728,
         'posy': 98.781400967991246,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'glob',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x332fc50> : "glob"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 99.41602953233658,
         'posy': -81.384107671665134,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'ReconstructWithTurtle',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3a71a10> : "ReconstructWithTurtle"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -154.25692932565184,
          'posy': 38.351170274333349,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': '.../P1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x332f310> : "dirname"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 68.391779165044539,
          'posy': -120.4575825649413,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': "'*.mtg'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4740f10> : "string"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 136.94893603920943,
          'posy': -120.05841425708591,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x288b790> : "getitem"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 92.863625824013326,
          'posy': -46.616153569138021,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4740510> : "int"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 201.31217883290824,
          'posy': -135.31302661192299,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': '18',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4740510> : "int"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 251.43557441174849,
          'posy': -86.617789389403072,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x43db950> : "+"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 203.48379727897591,
          'posy': -84.815335985096539,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x288b790> : "getitem"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -119.52213659004252,
          'posy': -70.30713917061324,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': 'PolygonLeaflet',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3a71990> : "PolygonLeaflet"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -143.09045208185142,
          'posy': -166.59816920958417,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'NoOrgan',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3a71b50> : "NoOrgan"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -44.316907872562965,
          'posy': -116.75800727963701,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, '2.5')],
   3: [  (  0,
            '[0.81000000000000005, 0.97999999999999998, 0.93999999999999995, 0.0]')],
   4: [],
   5: [(0, '[0.25, 0.5, 0.75, 1.0]')],
   6: [  (0, '[0.25, 0.5, 0.75, 1.0]'),
         (  1,
            '[0.81000000000000005, 0.97999999999999998, 0.93999999999999995, 0.0]')],
   7: [(1, 'None'), (2, 'None')],
   8: [],
   9: [],
   10: [(1, 'None'), (2, '3.0')],
   11: [(0, "'/mnt/echange/samba/MTG/Manip2_C1_PARfort/P1'")],
   12: [(0, "'*.mtg'")],
   13: [],
   14: [(0, '1')],
   15: [(0, '18')],
   16: [],
   17: [(1, '0')],
   18: [],
   19: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-25.567446849555555, -33.23768090442222],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-193.94542610922454, -168.65029807639615],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   4: {  'position': [76.913902204712443, -5.3469557682420401],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-228.55474109745128, -168.4052055057154],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   6: {  'position': [-261.13926336519967, -126.45253267734243],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-122.39645638076145, -34.250255247124137],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-105.21123714537728, 98.781400967991246],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [99.41602953233658, -81.384107671665134],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-154.25692932565184, 38.351170274333349],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [68.391779165044539, -120.4575825649413],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [136.94893603920943, -120.05841425708591],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [92.863625824013326, -46.616153569138021],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [201.31217883290824, -135.31302661192299],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [251.43557441174849, -86.617789389403072],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [203.48379727897591, -84.815335985096539],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-119.52213659004252, -70.30713917061324],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-143.09045208185142, -166.59816920958417],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-44.316907872562965, -116.75800727963701],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-292.32114231325187, -4.2612411415925902],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-224.14128404777037, 116.75800727963704],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [-232.66376633095558, 44.316907872562965],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-246.29973798405194, -49.430397242474079],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-230.10702164600005, 3.4089929132740728],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_colors_ColorFuncs = Factory(name='colorFunc',
                authors=' (rose authors)',
                description='returns a list of colorFuncs.',
                category='data processing',
                nodemodule='rose_colors',
                nodeclass='ColorFuncs',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'colorFuncs', 'desc': 'A list of functions to color the turtle.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_FineBudArray = Factory(name='fineBudArray',
                authors=' (rose authors)',
                description='returns a points array.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='FineBudArray',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'bud_array', 'desc': 'A Vector2 array.'}],
                widgetmodule=None,
                widgetclass=None,
               )




drawBuds = CompositeNodeFactory(name='drawBuds',
                             description='alist of functions to draw buds',
                             category='data processing',
                             doc='',
                             inputs=[],
                             outputs=[  {  'desc': 'a list of functions that draw buds',
      'interface': ISequence,
      'name': 'drawbud'}],
                             elt_factory={  2: ('Rose', 'BuiltBud'),
   3: ('openalea.data structure', 'int'),
   4: ('Rose', 'NoOrgan'),
   5: ('Rose', 'RevolutionBud'),
   6: ('Rose', 'budArray'),
   7: ('Rose', 'fineBudArray')},
                             elt_connections={  6402944: (5, 0, '__out__', 0),
   6402968: (4, 0, '__out__', 0),
   6402992: (2, 0, '__out__', 0),
   6403016: (3, 0, 2, 0),
   6403040: (7, 0, 5, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'BuiltBud',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x422c050> : "BuiltBud"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 1.5127998508044769,
         'posy': -11.298195738342841,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': '8',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4713b90> : "int"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 22.809020999974194,
         'posy': -71.418410016312635,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x422c2d0> : "NoOrgan"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -96.844859655628142,
         'posy': -12.713224819657745,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'RevolutionBud',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x422c410> : "RevolutionBud"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 88.618655360555465,
         'posy': -13.087143196706499,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'budArray',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x422c590> : "budArray"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 150.68537421885318,
         'posy': -71.896075003853213,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'fineBudArray',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x422c5d0> : "fineBudArray"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 74.966501943182138,
         'posy': -73.076590129488466,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 32.229248063670909,
                 'posy': 81.46384564518614,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [], 3: [(0, '8')], 4: [], 5: [], 6: [], 7: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  2: {  'position': [1.5127998508044769, -11.298195738342841],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [22.809020999974194, -71.418410016312635],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-96.844859655628142, -12.713224819657745],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [88.618655360555465, -13.087143196706499],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [150.68537421885318, -71.896075003853213],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [74.966501943182138, -73.076590129488466],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [32.229248063670909, 81.46384564518614],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




CropGeneration_CropGeneration = Factory(name='CropGeneration',
                authors=' (wralea authors)',
                description='',
                category='data processing',
                nodemodule='CropGeneration',
                nodeclass='CropGeneration',
                inputs=[{'interface': IFileStr, 'name': 'txtfile', 'value': None, 'desc': ''}, {'interface': IStr, 'name': 'Plt_Not_Use', 'value': [], 'desc': ''}, {'interface': IBool, 'name': 'filling', 'value': True, 'desc': ''}, {'interface': IFloat, 'name': 'crop_width', 'value': 90.0, 'desc': ''}, {'interface': IFloat, 'name': 'crop_length', 'value': 200.0, 'desc': ''}, {'interface': IFloat, 'name': 'spacing', 'value': 15.0, 'desc': ''}],
                outputs=[{'interface': IDict, 'name': 'dico_complete', 'desc': ''}, {'interface': ISequence, 'name': 'IDplants', 'desc': ''}],
                widgetmodule=None,
                widgetclass=None,
               )




