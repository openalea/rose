
# This file has been generated at Mon Dec  1 13:15:49 2014

from openalea.core import *


__name__ = 'Rose.mockup'

__editable__ = True
__description__ = 'Stuff to display rosebush'
__license__ = ''
__url__ = ''
__alias__ = ['Rose']
__version__ = ''
__authors__ = ''
__institutes__ = ''
__icon__ = ''


__all__ = ['drawLeaflets', 'rose_geometry_VertexVisitor', 'rose_process_RunXV', 'rose_geometry_ReconstructWithTurtle', 'roseMtgDataDir', 'rose_geometry_computeLeaflet4pts', 'iterOnce', 'rose_CropGeneration_2011', 'rose_MTG_union', 'testMTGs', 'rose_geometry_Flower', 'rose_HttpDir2DictOfFiles', 'rose_Files2MTGs', 'rose_GetGrid', 'rose_geometry_RawBud', '_64555088', 'GetLocalFiles', 'rose_LocalDir2DictOfFiles', 'rose_file_RootName', 'rose_geometry_RawFruit', 'rose_geometry_PetalMatrix', 'CanopyReconstruction2011', '_64554704', '_64555536', 'rose_file_IntSort', '_64555920', 'scene2Can01', 'rose_geometry_BuiltBud', 'drawFlowers', 'rose_geometry_PolygonLeaflet', 'rose_geometry_RawFlower', 'rose_geometry_NoOrgan', 'GetWebFiles', 'rose_geometry_RevolutionBud', 'drawBuds', 'rose_geometry_RevolutionFig', 'rose_GetOrigin', 'convertMtgToCanFiles', 'ChooseOnePlant', 'rose_geometry_BudArray', 'rose_geometry_BezierPatchFlower', 'Canopy2011Filenames', 'tempPickleFile_tempPickleFile', 'rose_colors_ColorFuncs', 'rose_geometry_FineBudArray', 'readCsv', 'readXls', 'decode_liste']



drawLeaflets = CompositeNodeFactory(name='drawLeaflets',
                             description='groups several procedures to draw leaflets',
                             category='data processing',
                             doc='',
                             inputs=[],
                             outputs=[  {  'desc': 'a list of funcs to display leaflets',
      'interface': ISequence,
      'name': 'leaflet_func'}],
                             elt_factory={  2: ('Rose.mockup', 'PolygonLeaflet'),
   3: ('Rose.mockup', 'NoOrgan'),
   4: ('Rose.mockup', 'ComputeLeaflet4pts'),
   5: ('openalea.data structure.list', 'list'),
   6: ('openalea.data structure.list', 'list')},
                             elt_connections={  6402944: (6, 0, 4, 1),
   6402968: (5, 0, 4, 0),
   6402992: (4, 0, '__out__', 0),
   6403016: (2, 0, '__out__', 0),
   6403040: (3, 0, '__out__', 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PolygonLeaflet',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865b50> : "PolygonLeaflet"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -23.752878046893095,
         'posy': -23.380781012573081,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865d50> : "NoOrgan"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -89.575201045276302,
         'posy': -23.512162422928498,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'ComputeLeaflet4pts',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865650> : "ComputeLeaflet4pts"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 78.125876851335107,
         'posy': -23.205705995446074,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 114.03891521291656,
         'posy': -73.189380675582001,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   6: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 143.27889055901449,
         'posy': -73.540541583605872,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 16.0,
                 'posy': 27.0,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [],
   4: [],
   5: [(0, '[0.25, 0.5, 0.75, 1.0]')],
   6: [  (  0,
            '[0.81000000000000005, 0.97999999999999998, 0.93999999999999995, 0.0]')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-23.752878046893095, -23.380781012573081],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-89.575201045276302, -23.512162422928498],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [78.125876851335107, -23.205705995446074],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [114.03891521291656, -73.189380675582001],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   6: {  'position': [143.27889055901449, -73.540541583605872],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [16.0, 27.0],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_VertexVisitor = Factory(name='VertexVisitor',
                authors=' (wralea authors)',
                description='function to visit MTG nodes',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='VertexVisitor',
                inputs=[{'interface': IFunction, 'name': 'leaf_factory', 'value': None, 'desc': 'function to compute leaflet geometry'}, {'interface': IFunction, 'name': 'compute_bud', 'value': None, 'desc': 'function to compute bud geometry'}, {'interface': IFunction, 'name': 'compute_sepal', 'value': None, 'desc': 'function to compute sepal geometry'}, {'interface': IFunction, 'name': 'flower_factory', 'value': None, 'desc': 'function to compute flower geometry'}],
                outputs=[{'interface': IFunction, 'name': 'VertexVisitor', 'desc': 'function to visit the MTG nodes'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_process_RunXV = Factory(name='my_viewer',
                authors=' (rose authors)',
                description='a function that displays an image.',
                category='data processing',
                nodemodule='rose_process',
                nodeclass='RunXV',
                inputs=[{'interface': IStr, 'name': 'iFileName', 'value': None, 'desc': 'a complete path to an image file'}],
                outputs=[{'interface': IStr, 'name': 'oFileName', 'desc': 'the image name'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_ReconstructWithTurtle = Factory(name='ReconstructWithTurtle',
                authors=' (wralea authors)',
                description='builds a scene using the plantgl Turtle',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='ReconstructWithTurtle',
                inputs=[{'interface': IData, 'name': 'g', 'value': None, 'desc': 'a "Sagah2011" MTG'}, {'interface': IFunction, 'name': 'Visitor', 'value': None, 'desc': 'A function that builds the scene while walking throught the nodes of the MTG'}, {'interface': IFloat, 'name': 'powerParam', 'value': None, 'desc': 'the power parameter of the pipe model'}],
                outputs=[{'interface': IData, 'name': 'TheScene', 'desc': 'A 3D scene'}],
                widgetmodule=None,
                widgetclass=None,
               )




roseMtgDataDir = CompositeNodeFactory(name='roseMtgDataDir',
                             description='gets the name of the MTG data dir of tthe rose package',
                             category='data i/o',
                             doc='',
                             inputs=[],
                             outputs=[  {  'desc': 'the path to the MTG data directory',
      'interface': IStr,
      'name': 'dataDir'}],
                             elt_factory={  2: ('openalea.file', 'joinpath'),
   3: ('openalea.file', 'parentdir'),
   4: ('openalea.file', 'packagedir'),
   6: ('openalea.data structure.string', 'string'),
   7: ('openalea.data structure.string', 'string'),
   10: ('openalea.file', 'parentdir'),
   11: ('openalea.data structure.string', 'string')},
                             elt_connections={  6402872: (11, 0, 4, 0),
   6402896: (10, 0, 2, 0),
   6402920: (2, 0, '__out__', 0),
   6402944: (7, 0, 2, 0),
   6402968: (6, 0, 2, 0),
   6402992: (3, 0, 10, 0),
   6403016: (4, 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'joinpath',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x327bc50> : "joinpath"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -42.675461482915154,
         'posy': 43.424153789632946,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'parentdir',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x327be90> : "parentdir"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -113.39360290953195,
         'posy': -54.580709985996918,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'packagedir',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x32852d0> : "packagedir"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -119.34431910764286,
         'posy': -93.026522482721674,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': "'share'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x47c5190> : "string"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -7.1822039844075292,
         'posy': -12.519373400225936,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': "'MTG'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x47c5190> : "string"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 60.221650594916284,
         'posy': -11.527343243779026,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'parentdir',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x327be90> : "parentdir"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -113.01173939941646,
          'posy': -13.808723754725762,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': "'rose.mockup'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x47c5190> : "string"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -128.54796492628523,
          'posy': -137.66717307216484,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': -28.435350950467239,
                 'posy': 81.749281295652906,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [(0, "'/home/hautret/developpement/rose/rose/mockup'")],
   4: [(0, "'rose.mockup'")],
   6: [(0, "'share'")],
   7: [(0, "'MTG'")],
   10: [],
   11: [(0, "'rose.mockup'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-42.675461482915154, 43.424153789632946],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-113.39360290953195, -54.580709985996918],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-119.34431910764286, -93.026522482721674],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-7.1822039844075292, -12.519373400225936],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [60.221650594916284, -11.527343243779026],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-113.01173939941646, -13.808723754725762],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-128.54796492628523, -137.66717307216484],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [-28.435350950467239, 81.749281295652906],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_computeLeaflet4pts = Factory(name='ComputeLeaflet4pts',
                authors=' (rose authors)',
                description='compute leaflet geometry from 4 points',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='computeLeaflet4pts',
                inputs=[{'interface': ISequence, 'name': 'x', 'value': [0.25, 0.5, 0.074999999999999997, 1.0], 'desc': ''}, {'interface': ISequence, 'name': 'y', 'value': [0.81000000000000005, 0.92000000000000004, 0.94999999999999996, 1.0], 'desc': 'sequence of positions along the y axis'}],
                outputs=[{'interface': IFunction, 'name': 'computeLeaflet4pts', 'desc': 'function that computes a leaflet from 4 digitization points'}],
                widgetmodule=None,
                widgetclass=None,
               )




iterOnce = CompositeNodeFactory(name='iterOnce',
                             description='Walks once through a list, then repeats the last item.',
                             category='category test',
                             doc='',
                             inputs=[  {  'desc': 'A list to walk trough',
      'interface': ISequence,
      'name': 'inList',
      'value': None}],
                             outputs=[  {  'desc': 'each element of the input list gets used once, but the last one wich is used endless',
      'interface': None,
      'name': 'outItems'}],
                             elt_factory={  2: ('openalea.python method', 'len'),
   4: ('openalea.python method', 'range'),
   5: ('openalea.python method', 'getitem'),
   7: ('openalea.flow control', 'iter'),
   8: ('openalea.python method', 'getitem'),
   9: ('openalea.data structure', 'int'),
   11: ('openalea.python method', 'ifelse'),
   12: ('openalea.math', '=='),
   14: ('openalea.data structure', 'int')},
                             elt_connections={  137031824: ('__in__', 0, 5, 0),
   137031836: ('__in__', 0, 8, 0),
   137031848: ('__in__', 0, 2, 0),
   137031860: (4, 0, 7, 0),
   137031872: (12, 0, 11, 0),
   137031884: (9, 0, 8, 1),
   137031908: (8, 0, 11, 1),
   137031920: (11, 0, 12, 1),
   137031932: (8, 0, 12, 0),
   137031944: (11, 0, '__out__', 0),
   137031956: (2, 0, 4, 1),
   137031968: (5, 0, 11, 2),
   137031992: (14, 0, 4, 0),
   137032004: (7, 0, 5, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'len',
         'delay': 0,
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -25.692124007256758,
         'posy': -157.07869909426643,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'range',
         'delay': 0,
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -39.518998557084835,
         'posy': -115.51531806159285,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'getitem',
         'delay': 0,
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -70.56683854824081,
         'posy': -28.262296930953759,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'iter',
         'delay': 0,
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -34.85308365976185,
         'posy': -74.021166447285168,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'getitem',
         'delay': 0,
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -166.97883459837192,
         'posy': -60.433032330802313,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '-1',
         'delay': 0,
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -131.67752813423596,
         'posy': -94.992653686336595,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   11: {  'block': False,
          'caption': 'ifelse',
          'delay': 0,
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -76.47713421439866,
          'posy': 13.794739421993199,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': '==',
          'delay': 0,
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -140.60678260482877,
          'posy': 12.988898431747334,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '0',
          'delay': 0,
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -46.952686679800237,
          'posy': -155.5943629882573,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': -61.868463791303022,
                'posy': -214.06223302883541,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': -72.94074193869821,
                 'posy': 74.647354317512423,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, 'None')],
   4: [(2, '1')],
   5: [],
   7: [(0, '[0, 1, 2, 3]')],
   8: [],
   9: [(0, '-1')],
   11: [],
   12: [],
   14: [(0, '0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-25.692124007256758, -157.07869909426643],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-39.518998557084835, -115.51531806159285],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-70.56683854824081, -28.262296930953759],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-34.85308365976185, -74.021166447285168],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-166.97883459837192, -60.433032330802313],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-131.67752813423596, -94.992653686336595],
         'useUserColor': False,
         'userColor': None},
   11: {  'position': [-76.47713421439866, 13.794739421993199],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-140.60678260482877, 12.988898431747334],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [-46.952686679800237, -155.5943629882573],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [-61.868463791303022, -214.06223302883541],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [-72.94074193869821, 74.647354317512423],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_CropGeneration_2011 = Factory(name='CropGeneration_2011',
                authors=' (wralea authors)',
                description='creates a population of plants by associating plants numbers to positions in a grid',
                category='data processing',
                nodemodule='rose',
                nodeclass='CropGeneration_2011',
                inputs=[{'interface': IDict, 'name': 'plantlist', 'value': {}, 'desc': 'the dispatching of plants on the table'}, {'interface': IDict, 'name': 'existingmtglist', 'value': {}, 'desc': 'the dict of existing mtg:filename'}, {'interface': ISequence, 'name': 'excludelist', 'value': [], 'desc': 'list of plants not touse for filling'}, {'interface': ISequence, 'name': 'gridDef', 'value': [], 'desc': 'characteristice of the grid for this experiment : nX, nY, sizeX, sizeY'}, {'interface': ISequence, 'name': 'origin', 'value': [0, 0, 800], 'desc': 'the 3D coordinates of the 0,0 position'}, {'interface': IBool, 'name': 'DoFill', 'value': True, 'desc': 'If we fill missing data with existing data'}, {'interface': IBool, 'name': 'DoRotate', 'value': True, 'desc': 'wether we rotate the planst used for filling'}],
                outputs=[{'interface': IDict, 'name': 'dictofpositions', 'desc': 'dict of filenames associated with a list of coordinates and rotations'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_MTG_union = Factory(name='MTG_union',
                authors=' (rose authors)',
                description='garthers differents MTG objects in a single one.',
                category='data processing',
                nodemodule='rose',
                nodeclass='MTG_union',
                inputs=[{'interface': ISequence, 'name': 'mtgsin', 'value': {}, 'desc': 'a list of MTG objects to be glued together in a signle MTG object'}],
                outputs=[{'interface': IDict, 'name': 'mtgout', 'desc': 'An MTG object that holds the MTGs of the input list in a single one'}],
                widgetmodule=None,
                widgetclass=None,
               )




testMTGs = CompositeNodeFactory(name='testMTGs',
                             description='displays MTGs one by one',
                             category='category test',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure.list', 'list'),
   3: ('Rose.mockup', 'Canopy2011Filenames'),
   4: ('openalea.python method', 'getitem'),
   5: ('openalea.python method', 'getitem'),
   10: ('openalea.python method', 'print'),
   15: ('openalea.file', 'glob'),
   16: ('openalea.data structure.string', 'string'),
   22: ('Rose.mockup', 'rose_reconstruction'),
   25: ('vplants.plantgl.visualization', 'plot3D'),
   37: ('Rose.mockup', 'iterOnce'),
   38: ('openalea.mtg', 'MTG'),
   40: ('openalea.data structure.list', 'list')},
                             elt_connections={  166064176: (38, 0, 22, 0),
   166064188: (37, 0, 10, 0),
   166064200: (2, 0, 4, 0),
   166064224: (40, 0, 5, 0),
   166064260: (3, 1, 15, 0),
   166064356: (10, 0, 38, 0),
   166064380: (22, 0, 25, 0),
   166064392: (5, 0, 3, 1),
   166064404: (4, 0, 3, 2),
   166064416: (15, 0, 37, 0),
   166064440: (16, 0, 15, 1)},
                             elt_data={  2: {  'block': False,
         'caption': 'prel.',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x466b350> : "list"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -285.95603849655379,
         'posy': -208.70306528669175,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'Canopy2011Filenames',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x58ed210> : "Canopy2011Filenames"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -382.26485063431289,
         'posy': -124.98779561173353,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'select',
         'delay': 0,
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -293.07405139198795,
         'posy': -175.01655580566796,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'select',
         'delay': 0,
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -351.55960756481846,
         'posy': -175.05349210455401,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'print',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x074FFDB0> : "print"',
          'hide': True,
          'id': 10,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -198.34234151770153,
          'posy': -2.3594071348731216,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'glob',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x0708A5F0> : "glob"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -226.03999889665809,
          'posy': -81.723331831693059,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': '*.mtg',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x071279B0> : "string"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -223.01246266405633,
          'posy': -122.17821820186794,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': 'rose_reconstruction',
          'delay': 0,
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -219.76673365949267,
          'posy': 91.569472358121942,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x06CE1390> : "plot3D"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -192.33889526786351,
          'posy': 140.91199691394445,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   37: {  'block': False,
          'caption': 'iterOnce',
          'delay': 0,
          'hide': True,
          'id': 37,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -224.64514469352088,
          'posy': -42.178863045365837,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   38: {  'block': False,
          'caption': 'MTG',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x06D5D4F0> : "MTG"',
          'hide': True,
          'id': 38,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -172.25129154813902,
          'posy': 43.652724570418798,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   40: {  'block': False,
          'caption': 'Manips',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x466b350> : "list"',
          'hide': True,
          'id': 40,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -366.27495991234218,
          'posy': -208.16128530951596,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "['P1', 'P2', 'P3']")],
   3: [(0, 'None')],
   4: [(0, "['P1', 'P2', 'P3']"), (1, '2')],
   5: [(1, '0')],
   10: [  (  0,
             "path(u'/home/hautret/outils/OA/rose/share/MTG/Manip1_C1_PARfort/P3/206.mtg')")],
   15: [  (  0,
             "path(u'/home/hautret/outils/OA/rose/share/MTG/Manip1_C1_PARfort/P3')")],
   16: [(0, "'*.mtg'")],
   22: [],
   25: [],
   37: [],
   38: [],
   40: [  (  0,
             "['Manip1_C1_PARfort', 'Manip1_C2_PARfaible', 'Manip2_C1_PARfort', 'Manip2_C2_PARfaible', 'Manip3_PARfort', 'Manip3_PARfaible']")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-285.95603849655379, -208.70306528669175],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-382.26485063431289, -124.98779561173353],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-293.07405139198795, -175.01655580566796],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-351.55960756481846, -175.05349210455401],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [102.86182179907549, -245.15186326312039],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-43.424188325747551, -41.628184825983453],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-2.5574028262567854, -132.90055312758415],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-61.279114559427107, -6.4464696876726464],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-198.34234151770153, -2.3594071348731216],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [110.14814395928624, -6.5869214943046615],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [144.37484910952776, -45.683618492846179],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-6.1784294023771604, -8.0222805726030018],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [-165.60012503165632, -109.27646934863529],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   15: {  'position': [-226.03999889665809, -81.723331831693059],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-223.01246266405633, -122.17821820186794],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-178.04106126085702, -159.77415997546169],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   18: {  'position': [129.42711044760787, -213.35372718837215],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-280.34511992116535, -269.63127785765374],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-223.06432869381857, -45.05977888768264],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-115.68019311506849, -111.69490850772047],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   22: {  'position': [-219.76673365949267, 91.569472358121942],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-301.19824085039147, -157.22717797936428],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [17.565039290397372, -40.653071145656654],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-192.33889526786351, 140.91199691394445],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   26: {  'position': [-104.8489549182969, -69.506230829933003],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [174.33080051703578, -207.69097134463351],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [-267.48850944495143, -201.06268865117926],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [103.49445117845821, -170.91472743357087],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [-306.05834087359335, -202.13407285753047],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [-239.89070894201879, -268.59130931469343],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [-399.5023201578507, -269.80113779449857],
          'useUserColor': False,
          'userColor': None},
   33: {  'position': [38.233110239552218, -136.45255130729845],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [-41.352647503734289, -102.723516500464],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [-21.469372665382465, 44.544958874215268],
          'useUserColor': False,
          'userColor': None},
   36: {  'position': [-390.22111212984851, -236.71117384672533],
          'useUserColor': False,
          'userColor': None},
   37: {  'position': [-224.64514469352088, -42.178863045365837],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [-172.25129154813902, 43.652724570418798],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-116.46188651032784, 42.993364587015634],
          'useUserColor': False,
          'userColor': None},
   40: {  'position': [-366.27495991234218, -208.16128530951596],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_Flower = Factory(name='Flower',
                authors=' (rose authors)',
                description='a function that builds a bud or a flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='Flower',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'flower', 'desc': 'function to draw a bud or a flower'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_HttpDir2DictOfFiles = Factory(name='HttpDir2DictOfFiles',
                authors=' (rose authors) ',
                description='gets the files whose name matches "filter" on an URL and returns a dict which associates the names with a temp file on the local host.',
                category='Unclassified',
                nodemodule='rose',
                nodeclass='HttpDir2DictOfFiles',
                inputs=[{'interface': IStr, 'name': 'url', 'value': None, 'desc': 'An URL from which we download the files.'}, {'interface': IStr, 'name': 'filtre', 'value': None, 'desc': 'a string to filter filenames'}],
                outputs=[{'interface': IDict, 'name': 'dictoffiles', 'desc': 'a dict which associates PlantNum.mtg:realPathOfFile'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_Files2MTGs = Factory(name='Files2MTGs',
                authors=' (rose authors)',
                description='Makes MTG objects from MTG files',
                category='data processing',
                nodemodule='rose',
                nodeclass='Files2MTGs',
                inputs=[{'interface': IDict, 'name': 'cropdict', 'value': {}, 'desc': 'A dict which associates MTG filenames with lists of [positions, rotation] pairs.'}],
                outputs=[{'interface': ISequence, 'name': 'listOfMTGs', 'desc': 'A list of MTG objects, i.e MTG files shifted and rotated according to the input dict.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_GetGrid = Factory(name='getGrid',
                authors=' (rose authors) ',
                description='Makes a dictionnary of pairs {plant num : plant position} in a 2D grid of int coordinates',
                category='data processing',
                nodemodule='rose',
                nodeclass='GetGrid',
                inputs=[{'interface': IFileStr, 'name': 'GridFileName', 'value': '', 'desc': 'A file which contains a grid of plant numbers vs. positions in a 2D grid'}],
                outputs=[{'interface': IDict, 'name': 'dictOfPlantNums', 'desc': 'A dict which associates plant numbers with a position in a 2D grid.'}, {'interface': ISequence, 'name': 'gridSpecs', 'desc': 'the spec of hte grid: nStepsX, nStepY, srideX, strideY '}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RawBud = Factory(name='RawBud',
                authors=' (rose authors)',
                description='builds a raw bud with a sphere and a cone',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RawBud',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'compute_bud', 'desc': 'function to draw a bud'}],
                widgetmodule=None,
                widgetclass=None,
               )




_64555088 = CompositeNodeFactory(name='display_photos',
                             description='',
                             category='Unclassified',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure.list', 'list'),
   4: ('openalea.python method', 'getitem'),
   5: ('openalea.python method', 'getitem'),
   6: ('openalea.math', '+'),
   10: ('openalea.python method', 'print'),
   14: ('openalea.file', 'joinpath'),
   17: ('openalea.data structure.string', 'string'),
   18: ('openalea.math', '+'),
   19: ('Rose.mockup', 'roseMtgDataDir'),
   20: ('openalea.file', 'dirname'),
   23: ('openalea.file', 'joinpath'),
   25: ('vplants.plantgl.visualization', 'plot3D'),
   31: ('openalea.data structure.string', 'string'),
   36: ('openalea.python method', 'getitem'),
   38: ('openalea.mtg', 'MTG'),
   39: ('Rose.mockup', 'rose_reconstruction'),
   40: ('openalea.data structure.list', 'list'),
   41: ('openalea.math', '+'),
   42: ('openalea.data structure.string', 'string'),
   43: ('Rose.mockup', 'my_viewer'),
   44: ('openalea.python method', 'print'),
   45: ('openalea.math', '+'),
   46: ('Rose.mockup', 'Manip+Prel_to_listOfID'),
   47: ('openalea.data structure.string', 'string'),
   48: ('openalea.flow control', 'iter'),
   49: ('openalea.data structure.list', 'list'),
   50: ('openalea.python method', 'getitem'),
   51: ('openalea.math', '+'),
   52: ('openalea.file', 'dirname'),
   53: ('openalea.data structure.list', 'list')},
                             elt_connections={  6402296: (14, 0, 10, 0),
   6402320: (46, 0, 36, 0),
   6402344: (51, 0, 45, 0),
   6402368: (5, 0, 46, 0),
   6402392: (19, 0, 23, 0),
   6402416: (49, 0, 50, 0),
   6402440: (20, 0, 14, 0),
   6402464: (36, 0, 6, 0),
   6402488: (4, 0, 23, 0),
   6402512: (4, 0, 46, 1),
   6402536: (17, 0, 41, 1),
   6402560: (6, 0, 14, 0),
   6402584: (2, 0, 4, 0),
   6402608: (41, 0, 6, 1),
   6402632: (31, 0, 18, 1),
   6402656: (18, 0, 23, 0),
   6402680: (47, 0, 45, 1),
   6402704: (38, 0, 39, 0),
   6402728: (40, 0, 5, 0),
   6402752: (10, 0, 43, 0),
   6402776: (42, 0, 51, 0),
   6402800: (5, 0, 23, 0),
   6402824: (53, 0, 48, 0),
   6402848: (36, 0, 18, 0),
   6402872: (5, 0, 14, 0),
   6402896: (48, 0, 47, 0),
   6402920: (50, 0, 51, 1),
   6402944: (44, 0, 38, 0),
   6402968: (45, 0, 41, 0),
   6402992: (23, 0, 44, 0),
   6403016: (4, 0, 14, 0),
   6403040: (39, 0, 25, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'liste de prelts.',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x466b350> : "list"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -495.55292238735512,
         'posy': -209.64000004770628,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': 85},
   4: {  'block': False,
         'caption': 'choix prelevement',
         'delay': 0,
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -508.67477746230531,
         'posy': -176.02245206393138,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 170},
   5: {  'block': False,
         'caption': 'choix manip',
         'delay': 0,
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -598.31461296152384,
         'posy': -175.99042686556851,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 170},
   6: {  'block': False,
         'caption': '+',
         'delay': 0,
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -491.83359304095751,
         'posy': 356.53088522683674,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'print',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x074FFDB0> : "print"',
          'hide': True,
          'id': 10,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -657.0526203814652,
          'posy': 370.66678751185907,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': 'joinpath',
          'delay': 0,
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -668.23327624862679,
          'posy': 324.03937474563412,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': '.pnm',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x071279B0> : "string"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -403.74149871761773,
          'posy': 178.87408110923172,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': '+',
          'delay': 0,
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -342.03066757771177,
          'posy': 185.62143324758412,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'roseMtgDataDir',
          'delay': 0,
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -641.07847705141387,
          'posy': 6.9124659003581073,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': '.../detoures',
          'delay': 0,
          'hide': True,
          'id': 20,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -784.05823372143288,
          'posy': -21.712381856901217,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'joinpath',
          'delay': 0,
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -383.95493325362719,
          'posy': 255.51827957393402,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x06CE1390> : "plot3D"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -376.91082563102128,
          'posy': 421.52712125724702,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': 170},
   31: {  'block': False,
          'caption': '.mtg',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x071279B0> : "string"',
          'hide': True,
          'id': 31,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -282.78138402288698,
          'posy': 117.7214526121943,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   36: {  'block': False,
          'caption': 'choix plante',
          'delay': 0,
          'hide': True,
          'id': 36,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -377.40068192796673,
          'posy': 118.12562532780368,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   38: {  'block': False,
          'caption': 'MTG',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x06D5D4F0> : "MTG"',
          'hide': True,
          'id': 38,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -372.41867910786442,
          'posy': 336.03069183818127,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   39: {  'block': False,
          'caption': 'rose_reconstruction',
          'delay': 0,
          'hide': True,
          'id': 39,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -422.84771018556853,
          'posy': 378.70849556201159,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   40: {  'block': False,
          'caption': 'liste de manips',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x466b350> : "list"',
          'hide': True,
          'id': 40,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -620.23457592446675,
          'posy': -212.70052537824012,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': 85},
   41: {  'block': False,
          'caption': '+',
          'delay': 0,
          'hide': True,
          'id': 41,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -480.98042527901447,
          'posy': 308.22514720651247,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   42: {  'block': False,
          'caption': '_',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x071279B0> : "string"',
          'hide': True,
          'id': 42,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -585.16258056579227,
          'posy': 152.33436942422944,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': 170},
   43: {  'block': False,
          'caption': 'my_viewer',
          'delay': 0,
          'hide': True,
          'id': 43,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -674.30008632217994,
          'posy': 407.63357406841254,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': 255},
   44: {  'block': False,
          'caption': 'print',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x074FFDB0> : "print"',
          'hide': True,
          'id': 44,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -373.02542235353383,
          'posy': 297.33263281882131,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   45: {  'block': False,
          'caption': '+',
          'delay': 0,
          'hide': True,
          'id': 45,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -511.28785893821288,
          'posy': 256.09636131269127,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   46: {  'block': False,
          'caption': 'Manip+Prel_to_listOfID',
          'delay': 0,
          'hide': True,
          'id': 46,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -449.92880181245306,
          'posy': -34.981059658340854,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   47: {  'block': False,
          'caption': '1',
          'delay': 0,
          'hide': True,
          'id': 47,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -498.25388776230108,
          'posy': 196.99912277209239,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   48: {  'block': False,
          'caption': 'orientation',
          'delay': 0,
          'hide': True,
          'id': 48,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -478.45017818653008,
          'posy': 116.32384214345988,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   49: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'hide': True,
          'id': 49,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -575.28943148626774,
          'posy': 72.353412814899713,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   50: {  'block': False,
          'caption': 'choix elevation',
          'delay': 0,
          'hide': True,
          'id': 50,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -605.78006091443342,
          'posy': 119.11357583535954,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   51: {  'block': False,
          'caption': '+',
          'delay': 0,
          'hide': True,
          'id': 51,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -541.59529259741123,
          'posy': 197.90608868703018,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   52: {  'block': False,
          'caption': '.../CNRepartitionMTG',
          'delay': 0,
          'hide': True,
          'id': 52,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -664.05862051532131,
          'posy': -54.431034468468965,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   53: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'hide': True,
          'id': 53,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -455.2167279456765,
          'posy': 74.6322482931444,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "['P1', 'P2', 'P3']")],
   4: [(1, '0')],
   5: [(1, '2')],
   6: [],
   10: [],
   14: [],
   17: [(0, "u'.pnm'")],
   18: [],
   19: [],
   20: [(0, "'/mnt/donnees/donnees/manips/Photos2011Jessica/detoures'")],
   23: [],
   25: [],
   31: [(0, "u'.mtg'")],
   36: [(1, '4')],
   38: [],
   39: [],
   40: [  (  0,
             "['Manip1_C1_PARfort', 'Manip1_C2_PARfaible', 'Manip2_C1_PARfort', 'Manip2_C2_PARfaible', 'Manip3_PARfort', 'Manip3_PARfaible']")],
   41: [],
   42: [(0, "u'_'")],
   43: [],
   44: [],
   45: [],
   46: [],
   47: [],
   48: [],
   49: [(0, "['H', 'O', 'V']")],
   50: [(1, '2')],
   51: [],
   52: [(0, "'/mnt/echange/samba/RoseBush2011Digits/CNRepartitionMTG'")],
   53: [(0, "[1, 2, 3, 4, '']")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-495.55292238735512, -209.64000004770628],
         'useUserColor': False,
         'userColor': [85, 170, 255]},
   3: {  'position': [-555.59778142200048, -125.92473037274804],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-508.67477746230531, -176.02245206393138],
         'useUserColor': True,
         'userColor': [170, 170, 0]},
   5: {  'position': [-598.31461296152384, -175.99042686556851],
         'useUserColor': True,
         'userColor': [170, 170, 0]},
   6: {  'position': [-491.83359304095751, 356.53088522683674],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-222.95331021432557, -36.903734249968238],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-182.08652471483478, -128.17610255156893],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-240.80823644800512, -1.7220191116574313],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-657.0526203814652, 370.66678751185907],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-69.38097792929176, -1.8624709182894463],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-35.154272779050252, -40.959167916830964],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-185.70755129095517, -3.2978299965877937],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [-668.23327624862679, 324.03937474563412],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [-424.67016823173799, -81.723331831693059],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-396.34539345174397, -123.11515296288245],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-403.74149871761773, 178.87408110923172],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-342.03066757771177, 185.62143324758412],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-641.07847705141387, 6.9124659003581073],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-784.05823372143288, -21.712381856901217],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-365.94877246509009, 70.919030528120004],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [-370.21956859354844, 390.16587825217664],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-383.95493325362719, 255.51827957393402],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-161.96408259818062, -35.928620569641438],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-376.91082563102128, 421.52712125724702],
          'useUserColor': False,
          'userColor': [170, 170, 0]},
   26: {  'position': [-284.3780768068749, -64.781780253917788],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [-5.1983213715422281, -202.9665207686183],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [-353.33967740015351, -51.348075439204521],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [-76.034670710119798, -166.19027685755566],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [-357.62748963394722, 31.254297569887044],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [-282.78138402288698, 117.7214526121943],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [-276.12874382621766, -195.16213524931459],
          'useUserColor': False,
          'userColor': None},
   33: {  'position': [-141.29601164902579, -131.72810073128323],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [-220.88176939231232, -97.999065924448786],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [-200.99849455396048, 49.269409450230484],
          'useUserColor': False,
          'userColor': None},
   36: {  'position': [-377.40068192796673, 118.12562532780368],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   37: {  'position': [-382.27054625741516, -11.047493421184868],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [-372.41867910786442, 336.03069183818127],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-422.84771018556853, 378.70849556201159],
          'useUserColor': False,
          'userColor': None},
   40: {  'position': [-620.23457592446675, -212.70052537824012],
          'useUserColor': False,
          'userColor': [85, 170, 255]},
   41: {  'position': [-480.98042527901447, 308.22514720651247],
          'useUserColor': False,
          'userColor': None},
   42: {  'position': [-585.16258056579227, 152.33436942422944],
          'useUserColor': False,
          'userColor': [170, 170, 0]},
   43: {  'position': [-674.30008632217994, 407.63357406841254],
          'useUserColor': False,
          'userColor': [255, 170, 0]},
   44: {  'position': [-373.02542235353383, 297.33263281882131],
          'useUserColor': False,
          'userColor': None},
   45: {  'position': [-511.28785893821288, 256.09636131269127],
          'useUserColor': False,
          'userColor': None},
   46: {  'position': [-449.92880181245306, -34.981059658340854],
          'useUserColor': False,
          'userColor': None},
   47: {  'position': [-498.25388776230108, 196.99912277209239],
          'useUserColor': False,
          'userColor': None},
   48: {  'position': [-478.45017818653008, 116.32384214345988],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   49: {  'position': [-575.28943148626774, 72.353412814899713],
          'useUserColor': False,
          'userColor': None},
   50: {  'position': [-605.78006091443342, 119.11357583535954],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   51: {  'position': [-541.59529259741123, 197.90608868703018],
          'useUserColor': False,
          'userColor': None},
   52: {  'position': [-664.05862051532131, -54.431034468468965],
          'useUserColor': False,
          'userColor': None},
   53: {  'position': [-455.2167279456765, 74.6322482931444],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




GetLocalFiles = CompositeNodeFactory(name='GetLocalFiles',
                             description='Get mtg files from local directory',
                             category='data i/o',
                             doc='',
                             inputs=[  {  'desc': 'the name of the directoryr',
      'interface': IStr,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'a string to filter file names',
      'interface': IStr,
      'name': 'filenamefilter',
      'value': None}],
                             outputs=[  {  'desc': 'the dictionnary that associates MTG files to temp files.',
      'interface': IDict,
      'name': 'DictOfFiles'}],
                             elt_factory={  6: ('openalea.file', 'glob'), 10: ('Rose.mockup', 'LocalDir2DictOfFiles')},
                             elt_connections={  6402968: (6, 0, 10, 0),
   6402992: (10, 0, '__out__', 0),
   6403016: ('__in__', 1, 6, 1),
   6403040: ('__in__', 0, 6, 0)},
                             elt_data={  6: {  'block': False,
         'caption': 'glob',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x4199a50> : "glob"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 87.192309122039816,
         'posy': -30.976215082829924,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'LocalDir2DictOfFiles',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x94757d0> : "LocalDir2DictOfFiles"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 41.266968895291669,
          'posy': 7.8576145012888787,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 90.213411480534077,
                'posy': -82.804128329343769,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 89.4633286740805,
                 'posy': 59.35094114445964,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  6: [], 10: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  5: {  'position': [75.719636869139805, -74.572369643849825],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [87.192309122039816, -30.976215082829924],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [31.057076995096743, -167.06126932364518],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [46.01779933960718, -122.54187888410866],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-44.807248015563559, -30.86226323142488],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [41.266968895291669, 7.8576145012888787],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [90.213411480534077, -82.804128329343769],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [89.4633286740805, 59.35094114445964],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_LocalDir2DictOfFiles = Factory(name='LocalDir2DictOfFiles',
                authors=' (rose authors)',
                description='',
                category='data processing',
                nodemodule='rose',
                nodeclass='LocalDir2DictOfFiles',
                inputs=[{'interface': ISequence, 'name': 'listoffiles', 'value': None, 'desc': 'The list of files to make the dist from'}],
                outputs=[{'interface': IDict, 'name': 'dictoffiles', 'desc': 'a dict which associates PlantNum.mtg:realPathOfFile'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_file_RootName = Factory(name='RootName',
                authors=' (rose authors) ',
                description='returns the basename of the file without its extension (if any).',
                category='data processing',
                nodemodule='rose_file',
                nodeclass='RootName',
                inputs=[{'interface': IStr, 'name': 'fileName', 'value': '', 'desc': 'A file name.'}],
                outputs=[{'interface': IStr, 'name': 'rootName', 'desc': 'basename of the file without extension.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RawFruit = Factory(name='RawFruit',
                authors=' (rose authors)',
                description='computes a quick flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RawFruit',
                inputs=[{'interface': IFunction, 'name': 'colorFunc', 'value': None, 'desc': 'a function to set the Turtle color'}],
                outputs=[{'interface': IFunction, 'name': 'RawFruit', 'desc': 'computes a red fruit from 2 points.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_PetalMatrix = Factory(name='PetalMatrix',
                authors=' (wralea authors)',
                description='a control matrix points to control a bezier patch',
                category='data i/o',
                nodemodule='rose_geometry',
                nodeclass='PetalMatrix',
                inputs=[],
                outputs=[{'interface': IData, 'name': 'cmp', 'desc': 'a control points matrix to set up a bezier patch'}],
                widgetmodule=None,
                widgetclass=None,
               )




CanopyReconstruction2011 = CompositeNodeFactory(name='CanopyReconstruction2011',
                             description='make a canopy from digitized plants',
                             category='workflow',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('Rose.mockup', 'rose_reconstruction'),
   6: ('Rose.mockup', 'GetLocalFiles'),
   7: ('Rose.mockup', 'Canopy2011Filenames'),
   10: ('openalea.file.pickle', 'pickle dump'),
   12: ('vplants.plantgl.visualization', 'plot3D'),
   13: ('Rose.mockup', 'MTG_union'),
   14: ('Rose.mockup', 'getGrid'),
   15: ('Rose.mockup', 'CropGeneration_2011'),
   17: ('openalea.data structure.string', 'string'),
   18: ('Rose.mockup', 'Files2MTGs'),
   19: ('openalea.data structure', 'bool'),
   21: ('openalea.file.pickle', 'pickle load'),
   23: ('openalea.data structure', 'bool'),
   26: ('Rose.mockup', 'GetOrigin'),
   28: ('openalea.python method', 'getitem'),
   30: ('Rose.mockup', 'tempFile'),
   31: ('openalea.data structure.list', 'list'),
   32: ('openalea.python method', 'getitem'),
   36: ('openalea.data structure.list', 'list')},
                             elt_connections={  166064212: (30, 0, 21, 0),
   166064224: (18, 0, 13, 0),
   166064236: (15, 0, 18, 0),
   166064248: (21, 0, 2, 0),
   166064260: (31, 0, 32, 0),
   166064272: (36, 0, 28, 0),
   166064284: (17, 0, 30, 0),
   166064296: (13, 0, 10, 0),
   166064308: (19, 0, 15, 5),
   166064320: (23, 0, 15, 6),
   166064332: (30, 0, 10, 1),
   166064344: (14, 1, 15, 3),
   166064356: (7, 0, 14, 0),
   166064368: (7, 1, 6, 0),
   166064380: (14, 0, 15, 0),
   166064392: (26, 0, 15, 4),
   166064404: (2, 0, 12, 0),
   166064416: (32, 0, 7, 1),
   166064428: (6, 0, 15, 1),
   166064440: (7, 3, 26, 0),
   166064452: (28, 0, 7, 2)},
                             elt_data={  2: {  'block': False,
         'caption': 'rose_reconstruction',
         'delay': 0,
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 25.63073244207736,
         'posy': 176.10793581169287,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'GetLocalFiles',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x58d7d10> : "GetLocalFiles"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -202.80129680355253,
         'posy': -25.493916834493277,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'Canopy2011Filenames',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x58ed210> : "Canopy2011Filenames"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -234.2925623178391,
         'posy': -93.909783138649559,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'pickle dump',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4d51650> : "pickle dump"',
          'hide': True,
          'id': 10,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -36.592442960340975,
          'posy': 134.08583970854446,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x466b290> : "plot3D"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 67.803022311149348,
          'posy': 216.7437115469655,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'MTG_union',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x58d7b50> : "MTG_union"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -140.58867198694978,
          'posy': 111.24154176164225,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': 'GetGrid',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x58d7c90> : "getGrid"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -264.60402892464322,
          'posy': -24.832016046226485,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'CropGeneration_2011',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x58d7a10> : "CropGeneration_2011"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -176.27202044050958,
          'posy': 43.114320982386488,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': 'canopy.pf',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5752790> : "string"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 9.3876217439155383,
          'posy': 45.064615765697191,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': 'Files2MTGs',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x58d7c50> : "Files2MTGs"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -140.41023134959707,
          'posy': 76.58686511707063,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'Fill',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5a98710> : "bool"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -34.314283560207173,
          'posy': -25.707055355355649,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   21: {  'block': False,
          'caption': 'pickle load',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4d513d0> : "pickle load"',
          'hide': True,
          'id': 21,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 54.435570216351493,
          'posy': 134.61756587641182,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'rotate',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5a98710> : "bool"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 9.0674673522150755,
          'posy': -25.467470870753111,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   26: {  'block': False,
          'caption': 'GetOrigin',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x58ed110> : "GetOrigin"',
          'hide': True,
          'id': 26,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -108.86271156617576,
          'posy': -25.150103023239595,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   28: {  'block': False,
          'caption': 'choix prelevement',
          'delay': 0,
          'hide': True,
          'id': 28,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -165.60287305207277,
          'posy': -149.44374131552684,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   30: {  'block': False,
          'caption': 'tempFile',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x58ed0d0> : "tempFile"',
          'hide': True,
          'id': 30,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 12.830764950020068,
          'posy': 80.282587647713697,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   31: {  'block': False,
          'caption': 'Manips',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x466b350> : "list"',
          'hide': True,
          'id': 31,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -255.45756151993533,
          'posy': -190.07641350279107,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': 170},
   32: {  'block': False,
          'caption': 'choix manip',
          'delay': 0,
          'hide': True,
          'id': 32,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -262.68753666533274,
          'posy': -147.54668554265015,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   36: {  'block': False,
          'caption': 'Prelevements',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x466b350> : "list"',
          'hide': True,
          'id': 36,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -156.63913370695312,
          'posy': -193.19449464513107,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': 170},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   6: [(1, "'*.mtg'")],
   7: [(0, 'None')],
   10: [(2, 'False')],
   12: [],
   13: [],
   14: [],
   15: [(2, '[]')],
   17: [(0, "'canopy.pf'")],
   18: [],
   19: [(0, 'False')],
   21: [],
   23: [(0, 'True')],
   26: [],
   28: [(1, '0')],
   30: [],
   31: [  (  0,
             "['Manip1_C1_PARfort', 'Manip1_C2_PARfaible', 'Manip2_C1_PARfort', 'Manip2_C2_PARfaible', 'Manip3_PARfort', 'Manip3_PARfaible']")],
   32: [(1, '0')],
   36: [(0, "['P1', 'P2', 'P3']")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [25.63073244207736, 176.10793581169287],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-158.80362547620638, -174.68398802382703],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-230.46011170157007, -175.14528507985492],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-27.41522731054522, -128.69047862236926],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-202.80129680355253, -25.493916834493277],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-234.2925623178391, -93.909783138649559],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [255.11049718604943, -6.4524691170253874],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-121.46444725546752, -151.93061127328156],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-36.592442960340975, 134.08583970854446],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [136.05881918803203, -6.9879276600424731],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [67.803022311149348, 216.7437115469655],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-140.58867198694978, 111.24154176164225],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [-264.60402892464322, -24.832016046226485],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [-176.27202044050958, 43.114320982386488],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [140.23608846981585, 98.405994265324424],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [9.3876217439155383, 45.064615765697191],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-140.41023134959707, 76.58686511707063],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-34.314283560207173, -25.707055355355649],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   20: {  'position': [-140.83518631861594, -9.7981852050721443],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [54.435570216351493, 134.61756587641182],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [226.21517109382484, -6.9922529610609985],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [9.0674673522150755, -25.467470870753111],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   24: {  'position': [205.75788145910758, -46.669940864678736],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [112.23346327848753, -110.85070655174023],
          'useUserColor': False,
          'userColor': None},
   26: {  'position': [-108.86271156617576, -25.150103023239595],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [90.089896344536072, -48.047944717085912],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [-165.60287305207277, -149.44374131552684],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   29: {  'position': [260.17659648026267, 38.900532240977682],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [12.830764950020068, 80.282587647713697],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [-255.45756151993533, -190.07641350279107],
          'useUserColor': False,
          'userColor': [170, 170, 0]},
   32: {  'position': [-262.68753666533274, -147.54668554265015],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   33: {  'position': [-187.5120413972362, -152.24028287303639],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [-94.738048657649159, -148.25862830220166],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [113.52010337534426, -48.557732079627016],
          'useUserColor': False,
          'userColor': None},
   36: {  'position': [-156.63913370695312, -193.19449464513107],
          'useUserColor': False,
          'userColor': [170, 170, 0]},
   37: {  'position': [133.69356026410856, -144.59512043594412],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [-206.50988739491825, -114.53730161112151],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-403.25264928191103, -169.37285768988127],
          'useUserColor': False,
          'userColor': None},
   40: {  'position': [-507.2847787828747, -85.112166463315361],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_64554704 = CompositeNodeFactory(name='test_Polhemus_frame',
                             description='displays the digitized bottom corner of a rectangular box.',
                             category='test',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  49: ('openalea.python method', 'getitem'),
   50: ('Rose.mockup', 'ReconstructWithTurtle'),
   51: ('openalea.python method', 'getitem'),
   52: ('Rose.mockup', 'drawFlowers'),
   53: ('openalea.data structure', 'float'),
   54: ('vplants.plantgl.visualization', 'plot3D'),
   55: ('Rose.mockup', 'scene2Can01'),
   56: ('Rose.mockup', 'colorFunc'),
   57: ('openalea.mtg', 'MTG'),
   58: ('Rose.mockup', 'VertexVisitor'),
   59: ('Rose.mockup', 'drawLeaflets'),
   60: ('openalea.data structure.string', 'string'),
   61: ('openalea.file', 'dirname'),
   62: ('openalea.math', '+'),
   63: ('openalea.math', '+'),
   64: ('openalea.math', '+'),
   65: ('openalea.math', '+'),
   66: ('openalea.data structure.string', 'string'),
   67: ('openalea.data structure.string', 'string')},
                             elt_connections={  6402272: (59, 0, 49, 0),
   6402344: (49, 0, 58, 0),
   6402392: (66, 0, 63, 1),
   6402464: (63, 0, 62, 1),
   6402512: (51, 0, 58, 1),
   6402560: (58, 0, 50, 1),
   6402776: (62, 0, 57, 0),
   6402800: (60, 0, 64, 0),
   6402824: (57, 0, 50, 0),
   6403280: (51, 0, 58, 4),
   6403304: (67, 0, 64, 1),
   6403376: (64, 0, 65, 1),
   6403448: (53, 0, 50, 2),
   6403520: (65, 0, 55, 1),
   6403544: (50, 0, 55, 0),
   6403640: (60, 0, 63, 0),
   6403760: (61, 0, 65, 0),
   6403808: (61, 0, 62, 0),
   6403880: (52, 0, 51, 0),
   6403952: (55, 0, 54, 0),
   6404048: (56, 0, 52, 0),
   6404096: (49, 0, 58, 2),
   6404120: (51, 0, 58, 3)},
                             elt_data={  49: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3b41590> : "getitem"',
          'hide': True,
          'id': 49,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -365.85947755094332,
          'posy': 309.11364373968769,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   50: {  'block': False,
          'caption': 'ReconstructWithTurtle',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5926910> : "ReconstructWithTurtle"',
          'hide': True,
          'id': 50,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -346.11340801060237,
          'posy': 420.00551608414929,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   51: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3b41590> : "getitem"',
          'hide': True,
          'id': 51,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -264.7663609394383,
          'posy': 310.22469075241355,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   52: {  'block': False,
          'caption': 'drawFlowers',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x5926d90> : "drawFlowers"',
          'hide': True,
          'id': 52,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -283.09500014185073,
          'posy': 266.90253301113972,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   53: {  'block': False,
          'caption': '4.2',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5af0690> : "float"',
          'hide': True,
          'id': 53,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -226.17290000015555,
          'posy': 360.50005405980261,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   54: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x46c52d0> : "plot3D"',
          'hide': True,
          'id': 54,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -287.44962954753623,
          'posy': 516.3159799942548,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   55: {  'block': False,
          'caption': 'scene2Can01',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5926c10> : "scene2Can01"',
          'hide': True,
          'id': 55,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -310.31658857970297,
          'posy': 468.15912777541899,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   56: {  'block': False,
          'caption': 'colorFunc',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5948150> : "colorFunc"',
          'hide': True,
          'id': 56,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -276.602816533127,
          'posy': 214.01541240805579,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   57: {  'block': False,
          'caption': 'MTG',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4847710> : "MTG"',
          'hide': True,
          'id': 57,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -473.42782505387129,
          'posy': 248.59027707226164,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   58: {  'block': False,
          'caption': 'VertexVisitor',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x58b5550> : "VertexVisitor"',
          'hide': True,
          'id': 58,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -320.16873157610075,
          'posy': 361.24754627816827,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   59: {  'block': False,
          'caption': 'drawLeaflets',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x58b5510> : "drawLeaflets"',
          'hide': True,
          'id': 59,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -385.50306122545862,
          'posy': 268.69803341816032,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   60: {  'block': False,
          'caption': '/boiteRS-20130410',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
          'hide': True,
          'id': 60,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -469.78262154480853,
          'posy': 62.393004423919891,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   61: {  'block': False,
          'caption': '.../reperePolhemus',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x41f2090> : "dirname"',
          'hide': True,
          'id': 61,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -534.01071433413767,
          'posy': 132.12636230947737,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   62: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 62,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -487.30894702594964,
          'posy': 188.00357144471258,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   63: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 63,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -432.25629606366738,
          'posy': 131.11583211702094,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   64: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 64,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -48.722827693101053,
          'posy': 215.52989692585371,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   65: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 65,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -96.435125193745705,
          'posy': 263.24219442649843,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   66: {  'block': False,
          'caption': '.mtg',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
          'hide': True,
          'id': 66,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -328.5482318515439,
          'posy': 74.029876652393085,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   67: {  'block': False,
          'caption': '.can',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
          'hide': True,
          'id': 67,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -19.361413846550491,
          'posy': 164.14742269439029,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  49: [(1, '2')],
   50: [],
   51: [(1, '3')],
   52: [],
   53: [(0, '4.2000000000000002')],
   54: [],
   55: [],
   56: [],
   57: [],
   58: [],
   59: [],
   60: [(0, "'/boiteRS-20130410'")],
   61: [  (  0,
             "'/home/hautret/manips/modeleChambre/auxiliairesManip2/tests/reperePolhemus'")],
   62: [],
   63: [],
   64: [],
   65: [],
   66: [(0, "'.mtg'")],
   67: [(0, "'.can'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-51.671585256931763, -369.3435801376275],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-176.55418786422544, -369.16213539710299],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-144.1635833065823, -266.43138600082239],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-53.667415222568536, -409.0990262805542],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [78.25907863466233, -405.89679533546746],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-96.864782095031785, -368.50740041488774],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-151.85805262966244, -313.64096894011692],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-35.900008863765159, -287.19562983104902],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-47.375416506348415, -166.47608672099932],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-14.952345395452086, -232.46741902656686],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [41.530137866755631, -233.82286291009871],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-137.83428499078948, -168.3710543581995],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [301.2815583346038, -194.23250183278691],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [-73.265808033087126, -166.98020470639662],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-20.096322632026641, -62.625465623095323],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-112.54312804364531, -112.55608730243297],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-67.773784475830752, -62.557356798645543],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-30.742824602751341, -4.8493085917419876],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [245.1098969258112, -193.92114290141387],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [290.52040333181139, -132.83212385683998],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [596.81588030577484, -125.43594004814793],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [566.78627474629855, -190.15062871827195],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [631.14740536884653, -128.21449609473109],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [630.14842598836037, -191.55544953900034],
          'useUserColor': False,
          'userColor': None},
   26: {  'position': [296.72563798776014, -15.116792020400794],
          'useUserColor': False,
          'userColor': None},
   27: {  'color': None,
          'position': [266.63701044185342, -313.48764105923783],
          'rectP2': (-1, -1),
          'text': u"Can't",
          'textColor': None,
          'visualStyle': 0},
   28: {  'position': [286.3560102021147, -80.026453067831255],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [344.4353732438891, -126.93581993952154],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [449.98473146553067, 97.540477185505836],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [384.6504018161728, 4.9909643254978846],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [104.24035614437028, -314.62411976713025],
          'useUserColor': False,
          'userColor': None},
   33: {  'color': None,
          'position': [446.73480065308053, -311.01383756620714],
          'rectP2': (-1, -1),
          'text': u'these',
          'textColor': [0, 0, 0],
          'visualStyle': 1},
   34: {  'position': [404.2939854906881, 45.406574647025252],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [424.04005503102906, 156.29844699148686],
          'useUserColor': False,
          'userColor': None},
   36: {  'position': [505.38710210219313, 46.517621659751114],
          'useUserColor': False,
          'userColor': None},
   37: {  'position': [487.05846289978069, 3.1954639184772873],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [73.293247555089479, -134.09966723516084],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [78.462216884384276, -211.77493975637282],
          'useUserColor': False,
          'userColor': None},
   40: {  'color': None,
          'position': [313.78138384879679, -312.91914369985039],
          'rectP2': (-1, -1),
          'text': u'remove',
          'textColor': None,
          'visualStyle': 1},
   41: {  'position': [543.98056304147588, 96.792984967140171],
          'useUserColor': False,
          'userColor': None},
   42: {  'position': [428.55168025574199, 287.73463192106482],
          'useUserColor': False,
          'userColor': None},
   43: {  'position': [459.83687446192846, 204.45205868275656],
          'useUserColor': False,
          'userColor': None},
   44: {  'position': [67.43027055719935, -181.81384298553954],
          'useUserColor': False,
          'userColor': None},
   45: {  'position': [493.55064650850443, -49.691656684606642],
          'useUserColor': False,
          'userColor': None},
   46: {  'position': [606.16985804425087, -52.811124163358727],
          'useUserColor': False,
          'userColor': None},
   47: {  'position': [7.2409735975797673, -367.39986403649891],
          'useUserColor': False,
          'userColor': None},
   48: {  'position': [32.933661976750955, -269.25106054043823],
          'useUserColor': False,
          'userColor': None},
   49: {  'position': [-365.85947755094332, 309.11364373968769],
          'useUserColor': False,
          'userColor': None},
   50: {  'position': [-346.11340801060237, 420.00551608414929],
          'useUserColor': False,
          'userColor': None},
   51: {  'position': [-264.7663609394383, 310.22469075241355],
          'useUserColor': False,
          'userColor': None},
   52: {  'position': [-283.09500014185073, 266.90253301113972],
          'useUserColor': False,
          'userColor': None},
   53: {  'position': [-226.17290000015555, 360.50005405980261],
          'useUserColor': False,
          'userColor': None},
   54: {  'position': [-287.44962954753623, 516.3159799942548],
          'useUserColor': False,
          'userColor': None},
   55: {  'position': [-310.31658857970297, 468.15912777541899],
          'useUserColor': False,
          'userColor': None},
   56: {  'position': [-276.602816533127, 214.01541240805579],
          'useUserColor': False,
          'userColor': None},
   57: {  'position': [-473.42782505387129, 248.59027707226164],
          'useUserColor': False,
          'userColor': None},
   58: {  'position': [-320.16873157610075, 361.24754627816827],
          'useUserColor': False,
          'userColor': None},
   59: {  'position': [-385.50306122545862, 268.69803341816032],
          'useUserColor': False,
          'userColor': None},
   60: {  'position': [-469.78262154480853, 62.393004423919891],
          'useUserColor': False,
          'userColor': None},
   61: {  'position': [-534.01071433413767, 132.12636230947737],
          'useUserColor': False,
          'userColor': None},
   62: {  'position': [-487.30894702594964, 188.00357144471258],
          'useUserColor': False,
          'userColor': None},
   63: {  'position': [-432.25629606366738, 131.11583211702094],
          'useUserColor': False,
          'userColor': None},
   64: {  'position': [-48.722827693101053, 215.52989692585371],
          'useUserColor': False,
          'userColor': None},
   65: {  'position': [-96.435125193745705, 263.24219442649843],
          'useUserColor': False,
          'userColor': None},
   66: {  'position': [-328.5482318515439, 74.029876652393085],
          'useUserColor': False,
          'userColor': None},
   67: {  'position': [-19.361413846550491, 164.14742269439029],
          'useUserColor': False,
          'userColor': None},
   68: {  'position': [55.052650962282243, 130.29127394406794],
          'useUserColor': False,
          'userColor': None},
   69: {  'position': [602.12139885660758, 153.91651300015531],
          'useUserColor': False,
          'userColor': None},
   70: {  'position': [589.819398785305, 294.17791353808008],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




_64555536 = CompositeNodeFactory(name='Manip+Prel_to_listOfID',
                             description='gets a "manip" name and the "pick up" event to generate a list of plant IDs',
                             category='process',
                             doc='',
                             inputs=[  {  'desc': 'a "manip" name, e.g \'Manip1_C1_PARFort\'',
      'interface': IStr,
      'name': 'IN1',
      'value': ''},
   {  'desc': 'a "pick up" event, e.g \'P1\'.',
      'interface': IStr,
      'name': 'IN2',
      'value': ''}],
                             outputs=[  {  'desc': "a sorted list of plant IDs, e.g ['1', '4,'25']",
      'interface': ISequence,
      'name': 'OUT1'}],
                             elt_factory={  2: ('Rose.mockup', 'Canopy2011Filenames'),
   3: ('openalea.data structure.string', 'string'),
   4: ('openalea.file', 'glob'),
   5: ('openalea.flow control', 'X'),
   6: ('Rose.mockup', 'RootName'),
   7: ('openalea.function operator', 'map'),
   8: ('Rose.mockup', 'IntSort')},
                             elt_connections={  6402848: (8, 0, '__out__', 0),
   6402872: ('__in__', 1, 2, 2),
   6402896: ('__in__', 0, 2, 1),
   6402920: (2, 1, 4, 0),
   6402944: (3, 0, 4, 1),
   6402968: (4, 0, 7, 1),
   6402992: (7, 0, 8, 0),
   6403016: (6, 0, 7, 0),
   6403040: (5, 0, 6, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'Canopy2011Filenames',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x58ed210> : "Canopy2011Filenames"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -60.247689823061819,
         'posy': -233.22318411855815,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': '*.mtg',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x071279B0> : "string"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 122.54737401759368,
         'posy': -232.46783261508435,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'glob',
         'delay': 0,
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 44.565738704953198,
         'posy': -175.99690030939144,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'X',
         'delay': 0,
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 12.493566235679253,
         'posy': -162.9754942954963,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'RootName',
         'delay': 0,
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -16.437302621582404,
         'posy': -122.67491227747665,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'map',
         'delay': 0,
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 8.2057540018855377,
         'posy': -80.373121286404739,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'IntSort',
         'delay': 0,
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -0.11552882925732888,
         'posy': -40.708388328171779,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 4.6322098622779482,
                'posy': -311.27585901911993,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 9.2424644407752581,
                 'posy': 23.87661218355607,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, 'None')],
   3: [(0, "'*.mtg'")],
   4: [],
   5: [(0, "'x'")],
   6: [],
   7: [],
   8: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-60.247689823061819, -233.22318411855815],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [122.54737401759368, -232.46783261508435],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [44.565738704953198, -175.99690030939144],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [12.493566235679253, -162.9754942954963],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-16.437302621582404, -122.67491227747665],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [8.2057540018855377, -80.373121286404739],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-0.11552882925732888, -40.708388328171779],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [4.6322098622779482, -311.27585901911993],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [9.2424644407752581, 23.87661218355607],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_file_IntSort = Factory(name='IntSort',
                authors=' (rose authors) ',
                description='Sorts numerically a list of string-d numbers',
                category='data processing',
                nodemodule='rose_file',
                nodeclass='IntSort',
                inputs=[{'interface': ISequence, 'name': 'strList', 'value': [], 'desc': 'list to sort numerically.'}],
                outputs=[{'interface': IStr, 'name': 'sortedList', 'desc': 'the list sorted numerically'}],
                widgetmodule=None,
                widgetclass=None,
               )




_64555920 = CompositeNodeFactory(name='rose_reconstruction',
                             description='build a rosebush',
                             category='process',
                             doc='',
                             inputs=[  {  'desc': 'an MTG structure',
      'interface': IData,
      'name': 'IN1',
      'value': None}],
                             outputs=[{  'desc': 'A 3D scene', 'interface': IData, 'name': 'OUT1'}],
                             elt_factory={  7: ('openalea.data structure', 'int'),
   8: ('openalea.data structure', 'int'),
   9: ('openalea.python method', 'getitem'),
   11: ('openalea.python method', 'getitem'),
   12: ('openalea.data structure', 'int'),
   13: ('openalea.python method', 'getitem'),
   22: ('Rose.mockup', 'ReconstructWithTurtle'),
   24: ('openalea.data structure', 'int'),
   26: ('Rose.mockup', 'drawLeaflets'),
   27: ('Rose.mockup', 'RawFruit'),
   29: ('Rose.mockup', 'drawFlowers'),
   33: ('Rose.mockup', 'PolygonLeaflet'),
   34: ('Rose.mockup', 'drawBuds'),
   35: ('Rose.mockup', 'VertexVisitor'),
   39: ('openalea.data structure', 'float')},
                             elt_connections={  6402680: (33, 0, 35, 2),
   6402704: (8, 0, 34, 0),
   6402728: (9, 0, 35, 0),
   6402752: (39, 0, 22, 2),
   6402776: (13, 0, 35, 1),
   6402800: ('__in__', 0, 22, 0),
   6402824: (11, 0, 35, 3),
   6402848: (7, 0, 9, 1),
   6402872: (12, 0, 11, 1),
   6402896: (35, 0, 22, 1),
   6402920: (11, 0, 35, 4),
   6402944: (24, 0, 13, 1),
   6402968: (22, 0, '__out__', 0),
   6402992: (29, 0, 11, 0),
   6403016: (34, 0, 13, 0),
   6403040: (26, 0, 9, 0)},
                             elt_data={  7: {  'block': False,
         'caption': '2',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x076E32D0> : "int"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -156.41099414653303,
         'posy': -39.271057008115548,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '12',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x076E32D0> : "int"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -120.5546409641299,
         'posy': -140.00808935202411,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'select',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x074FFC90> : "getitem"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -189.15932393107903,
         'posy': -0.74751132831920231,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   11: {  'block': False,
          'caption': 'select',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x074FFC90> : "getitem"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -69.38097792929176,
          'posy': -1.8624709182894463,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': '3',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x076E32D0> : "int"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -35.154272779050252,
          'posy': -40.959167916830964,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'select',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x074FFC90> : "getitem"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -126.26257650732325,
          'posy': -5.2468455632642499,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': 'ReconstructWithTurtle',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x07297110> : "ReconstructWithTurtle"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -306.68727815513762,
          'posy': 113.06582173625735,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   24: {  'block': False,
          'caption': '4',
          'delay': 0,
          'hide': True,
          'id': 24,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -95.697553331181098,
          'posy': -43.724682836347256,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   26: {  'block': False,
          'caption': 'leaflet drawing',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x07297050> : "drawLeaflets"',
          'hide': True,
          'id': 26,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -238.57621098997822,
          'posy': -66.730795820594238,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   27: {  'block': False,
          'caption': 'fruit drawing',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x07297270> : "RawFruit"',
          'hide': True,
          'id': 27,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 3.4029602047203866,
          'posy': -2.6304769482618795,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   29: {  'block': False,
          'caption': 'flower drawing',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x07297310> : "drawFlowers"',
          'hide': True,
          'id': 29,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -26.334773759870174,
          'posy': -171.06281577424684,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   33: {  'block': False,
          'caption': 'sepal drawing',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x07297250> : "PolygonLeaflet"',
          'hide': True,
          'id': 33,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -88.672591348761458,
          'posy': -136.60063964797439,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   34: {  'block': False,
          'caption': 'button drawing',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x072973D0> : "drawBuds"',
          'hide': True,
          'id': 34,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -168.25834909204804,
          'posy': -97.999065924448772,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   35: {  'block': False,
          'caption': 'VertexVisitor',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x07297070> : "VertexVisitor"',
          'hide': True,
          'id': 35,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -137.65548863697566,
          'posy': 52.192932800245167,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   39: {  'block': False,
          'caption': '2.0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x076E3210> : "float"',
          'hide': True,
          'id': 39,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -46.938950652055965,
          'posy': 75.94770188105268,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': -242.06840036619471,
                'posy': -226.09007920545716,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': 170},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': -233.52766607011426,
                 'posy': 234.09091916605044,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': 170}},
                             elt_value={  7: [(0, '2')],
   8: [(0, '12')],
   9: [],
   11: [],
   12: [(0, '3')],
   13: [],
   22: [],
   24: [(0, '4')],
   26: [],
   27: [(0, 'None')],
   29: [(0, 'None')],
   33: [],
   34: [],
   35: [],
   39: [(0, '2.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-495.55292238735512, -209.64000004770628],
         'useUserColor': False,
         'userColor': [85, 170, 255]},
   3: {  'position': [-555.59778142200048, -125.92473037274804],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-508.67477746230531, -176.02245206393138],
         'useUserColor': True,
         'userColor': [170, 170, 0]},
   5: {  'position': [-598.31461296152384, -175.99042686556851],
         'useUserColor': True,
         'userColor': [170, 170, 0]},
   6: {  'position': [-494.89500979136869, 350.40805172601432],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-156.41099414653303, -39.271057008115548],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-120.5546409641299, -140.00808935202411],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-189.15932393107903, -0.74751132831920231],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-658.58332875667077, 370.66678751185907],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-69.38097792929176, -1.8624709182894463],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-35.154272779050252, -40.959167916830964],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-126.26257650732325, -5.2468455632642499],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [-668.23327624862679, 336.28504174727891],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [-424.67016823173799, -81.723331831693059],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-396.34539345174397, -123.11515296288245],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-403.74149871761773, 178.87408110923172],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-342.03066757771177, 185.62143324758412],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-641.07847705141387, 6.9124659003581073],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-784.05823372143288, -21.712381856901217],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-365.94877246509009, 70.919030528120004],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [-306.68727815513762, 113.06582173625735],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-383.95493325362719, 255.51827957393402],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-95.697553331181098, -43.724682836347256],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-319.01114067928467, 433.58955562219217],
          'useUserColor': False,
          'userColor': [170, 170, 0]},
   26: {  'position': [-238.57621098997822, -66.730795820594238],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [3.4029602047203866, -2.6304769482618795],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [-353.33967740015351, -51.348075439204521],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [-26.334773759870174, -171.06281577424684],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [-357.62748963394722, 31.254297569887044],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [-282.78138402288698, 117.7214526121943],
          'useUserColor': False,
          'userColor': None},
   33: {  'position': [-88.672591348761458, -136.60063964797439],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [-168.25834909204804, -97.999065924448772],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [-137.65548863697566, 52.192932800245167],
          'useUserColor': False,
          'userColor': None},
   36: {  'position': [-377.40068192796673, 118.12562532780368],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   37: {  'position': [-382.27054625741516, -11.047493421184868],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [-347.08756694147968, 340.8556655841594],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-46.938950652055965, 75.94770188105268],
          'useUserColor': False,
          'userColor': None},
   40: {  'position': [-620.23457592446675, -212.70052537824012],
          'useUserColor': False,
          'userColor': [85, 170, 255]},
   41: {  'position': [-480.98042527901447, 308.22514720651247],
          'useUserColor': False,
          'userColor': None},
   42: {  'position': [-585.16258056579227, 152.33436942422944],
          'useUserColor': False,
          'userColor': [170, 170, 0]},
   43: {  'position': [-674.30008632217994, 407.63357406841254],
          'useUserColor': False,
          'userColor': [255, 170, 0]},
   44: {  'position': [-360.96298798858879, 300.95136312830493],
          'useUserColor': False,
          'userColor': None},
   45: {  'position': [-511.28785893821288, 256.09636131269127],
          'useUserColor': False,
          'userColor': None},
   46: {  'position': [-777.67018806927877, 163.51604522058986],
          'useUserColor': False,
          'userColor': None},
   47: {  'position': [-487.53892913586185, 200.06053952250357],
          'useUserColor': False,
          'userColor': None},
   48: {  'position': [-478.45017818653008, 116.32384214345988],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   49: {  'position': [-572.22801473585662, 60.107745813254908],
          'useUserColor': False,
          'userColor': None},
   50: {  'position': [-605.78006091443342, 119.11357583535954],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   51: {  'position': [-541.59529259741123, 197.90608868703018],
          'useUserColor': False,
          'userColor': None},
   52: {  'position': [-664.05862051532131, -54.431034468468965],
          'useUserColor': False,
          'userColor': None},
   53: {  'position': [-455.2167279456765, 74.6322482931444],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [-242.06840036619471, -226.09007920545716],
                'useUserColor': True,
                'userColor': [170, 85, 0]},
   '__out__': {  'position': [-233.52766607011426, 234.09091916605044],
                 'useUserColor': True,
                 'userColor': [170, 85, 0]}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




scene2Can01 = Factory(name='scene2Can01',
                authors=' (rose authors)',
                description='a function that writes a can file.',
                category='data processing',
                nodemodule='rose_file',
                nodeclass='scene2Can01',
                inputs=[{'interface': IData, 'name': 'maScene', 'value': None, 'desc': 'an openalea scene'}, 
                        {'interface': IStr, 'name': 'fileName', 'value': None, 'desc': 'a complete path to the CAN01 file.'},
                        {'interface': IBool, 'name': 'makeDir', 'value': False, 'desc': 'should the path to the output file be made if it does not exist ?'}
                        ],
                outputs=[{'interface': IData, 'name': 'laScene', 'desc': 'the incoming openAlea scene'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_BuiltBud = Factory(name='BuiltBud',
                authors=' (rose authors)',
                description='a function builds a bud with 2 spheres and a paraboloid.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BuiltBud',
                inputs=[{'interface': IInt, 'name': 'stride', 'value': 10, 'desc': 'the number of splices of the graphic primitives.'}],
                outputs=[{'interface': IFunction, 'name': 'compute_bud', 'desc': 'function to draw a bud'}],
                widgetmodule=None,
                widgetclass=None,
               )




drawFlowers = CompositeNodeFactory(name='drawFlowers',
                             description='returns a list of functions that draw flowers',
                             category='composite',
                             doc='',
                             inputs=[  {  'desc': 'a function that colors the turtle.',
      'interface': ISequence,
      'name': 'colorFunc',
      'value': None}],
                             outputs=[  {  'desc': 'a list of functions that draw flowers',
      'interface': ISequence,
      'name': 'drawFlower'}],
                             elt_factory={  2: ('Rose.mockup', 'BezierPatchFlower'),
   3: ('Rose.mockup', 'RawFlower'),
   4: ('Rose.mockup', 'NoOrgan'),
   6: ('openalea.data structure', 'int'),
   7: ('Rose.mockup', 'Flower'),
   8: ('Rose.mockup', 'PetalMatrix')},
                             elt_connections={  6402848: (7, 0, '__out__', 0),
   6402872: (6, 0, 2, 2),
   6402896: (4, 0, '__out__', 0),
   6402920: (6, 0, 2, 1),
   6402944: ('__in__', 0, 2, 3),
   6402968: ('__in__', 0, 3, 0),
   6402992: (2, 0, '__out__', 0),
   6403016: (8, 0, 2, 0),
   6403040: (3, 0, '__out__', 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'BezierPatchFlower',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x607a490> : "BezierPatchFlower"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 21.301224556255747,
         'posy': -17.836943972594959,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'RawFlower',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x607a2d0> : "RawFlower"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -58.285370348544177,
         'posy': -18.88808506141196,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x607a310> : "NoOrgan"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -127.8436064851085,
         'posy': -19.308622402272615,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '0',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x55f3750> : "int"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 77.052105557885454,
         'posy': -145.43584924050873,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'Flower',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x653bd50> : "Flower"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 164.85598787755993,
         'posy': -15.418185916606328,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'PetalMatrix',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x607a190> : "PetalMatrix"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -8.138242106073001,
         'posy': -65.002586757260033,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 45.196395431815361,
                'posy': -241.09813117848054,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': 255},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 63.733079684539483,
                 'posy': 114.98448813412287,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': 255}},
                             elt_value={  2: [], 3: [], 4: [], 6: [(0, '8')], 7: [], 8: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  2: {  'position': [21.301224556255747, -17.836943972594959],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-58.285370348544177, -18.88808506141196],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-127.8436064851085, -19.308622402272615],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [103.42567798893609, -65.125802918938291],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [77.052105557885454, -145.43584924050873],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [164.85598787755993, -15.418185916606328],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-8.138242106073001, -65.002586757260033],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-53.156918921739489, -96.013399618634139],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [45.196395431815361, -241.09813117848054],
                'useUserColor': True,
                'userColor': [255, 255, 127]},
   '__out__': {  'position': [63.733079684539483, 114.98448813412287],
                 'useUserColor': True,
                 'userColor': [255, 255, 127]}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_PolygonLeaflet = Factory(name='PolygonLeaflet',
                authors=' (rose authors)',
                description='computes a quick leaflet.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='PolygonLeaflet',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'PolygonLeaflet', 'desc': 'compute a 2 facets leaflets from 4 points.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RawFlower = Factory(name='RawFlower',
                authors=' (rose authors)',
                description='computes a quick flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RawFlower',
                inputs=[{'interface': IFunction, 'name': 'colorFunc', 'value': None, 'desc': 'a function to set the Turtle color'}],
                outputs=[{'interface': IFunction, 'name': 'RawFlower', 'desc': 'computes a conic red flower from 2 points and a diameter.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_NoOrgan = Factory(name='NoOrgan',
                authors=' (rose authors)',
                description='computes no leaflet in order to be able to look at the trunk.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='NoOrgan',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'PolygonLeaflet', 'desc': 'Makes nothing.'}],
                widgetmodule=None,
                widgetclass=None,
               )




GetWebFiles = CompositeNodeFactory(name='GetWebFiles',
                             description='Get MTGs from a webserver',
                             category='data i/o',
                             doc='',
                             inputs=[  {  'desc': 'the URL of the server, including http://',
      'interface': IStr,
      'name': 'ServerName',
      'value': None},
   {  'desc': 'the directory where to get the files from',
      'interface': IStr,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'A string to filter filenames with.',
      'interface': IStr,
      'name': 'FileNameFilter',
      'value': None}],
                             outputs=[  {  'desc': 'the dictionnary that associates MTG files to temp files.',
      'interface': IDict,
      'name': 'DictOfFiles'}],
                             elt_factory={  5: ('openalea.python method', 'print'),
   9: ('openalea.math', '+'),
   10: ('Rose.mockup', 'HttpDir2DictOfFiles')},
                             elt_connections={  6402872: ('__in__', 2, 10, 1),
   6402896: (10, 0, '__out__', 0),
   6402920: ('__in__', 0, 9, 0),
   6402944: (9, 0, 10, 0),
   6402968: ('__in__', 1, 9, 1),
   6403016: (10, 0, 5, 0)},
                             elt_data={  5: {  'block': False,
         'caption': 'print',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x1e24990> : "print"',
         'hide': True,
         'id': 5,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 22.112740619081741,
         'posy': 139.00725106939879,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 57.299535035246208,
         'posy': -10.862803670320648,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'httpDir2DictOfFiles',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x67322d0> : "HttpDir2DictOfFiles"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 18.029314677248792,
          'posy': 50.549019939773281,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 56.042165150349334,
                'posy': -68.461016869243181,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 118.70269723862339,
                 'posy': 143.36518211047655,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  5: [], 9: [(1, '0')], 10: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  2: {  'position': [3.2113821928186255, 60.330313302205496],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-24.793391075541848, -18.168406617407726],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-20.793391075541848, 15.886574346013159],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [22.112740619081741, 139.00725106939879],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-24.916817856452088, -140.31400327658361],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [42.575997663737176, -90.418396575988723],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [57.299535035246208, -10.862803670320648],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [18.029314677248792, 50.549019939773281],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [56.042165150349334, -68.461016869243181],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [118.70269723862339, 143.36518211047655],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_RevolutionBud = Factory(name='RevolutionBud',
                authors=' (rose authors)',
                description='draws up a bud from a revolution volume.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RevolutionBud',
                inputs=[{'interface': IData, 'name': 'revFig', 'value': None, 'desc': 'a revolution volume'}, {'interface': IInt, 'name': 'stride', 'value': 8, 'desc': 'the rotation stride of the revolution figure'}],
                outputs=[{'interface': IFunction, 'name': 'rev_bud', 'desc': 'A function that draws a bud from a 3D revolution volume.'}],
                widgetmodule=None,
                widgetclass=None,
               )




drawBuds = CompositeNodeFactory(name='drawBuds',
                             description='alist of functions to draw buds',
                             category='data processing',
                             doc='',
                             inputs=[  {  'desc': 'stride to draw axissymetric primitives',
      'interface': IInt,
      'name': 'stride',
      'value': 8}],
                             outputs=[  {  'desc': 'a list of functions that draw buds',
      'interface': ISequence,
      'name': 'drawbud'}],
                             elt_factory={  2: ('Rose.mockup', 'BuiltBud'),
   3: ('openalea.python method', 'getitem'),
   4: ('Rose.mockup', 'NoOrgan'),
   5: ('Rose.mockup', 'RevolutionBud'),
   6: ('Rose.mockup', 'budArray'),
   7: ('Rose.mockup', 'fineBudArray'),
   8: ('Rose.mockup', 'RevolutionFig'),
   9: ('Rose.mockup', 'RawBud'),
   10: ('Rose.mockup', 'Flower')},
                             elt_connections={  6402800: (10, 0, '__out__', 0),
   6402824: (3, 0, 8, 0),
   6402848: (7, 0, 3, 0),
   6402872: (5, 0, '__out__', 0),
   6402896: ('__in__', 0, 8, 1),
   6402920: ('__in__', 0, 2, 0),
   6402944: (4, 0, '__out__', 0),
   6402968: (6, 0, 3, 0),
   6402992: (8, 0, 5, 0),
   6403016: (2, 0, '__out__', 0),
   6403040: (9, 0, '__out__', 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'BuiltBud',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x552a810> : "BuiltBud"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 1.5127998508044769,
         'posy': -11.298195738342841,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'getitem',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x2f16b90> : "getitem"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 102.34698933445478,
         'posy': -95.651391901359602,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x552aa10> : "NoOrgan"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -146.93310712644185,
         'posy': -11.849634346023027,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'RevolutionBud',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x552a990> : "RevolutionBud"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 88.618655360555465,
         'posy': -13.087143196706499,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'budArray',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x552ab50> : "budArray"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 52.814112186278436,
         'posy': -140.86544681736933,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'fineBudArray',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x552ac90> : "fineBudArray"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 124.55287960949508,
         'posy': -142.16865012520782,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'RevolutionFig',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x552aad0> : "RevolutionFig"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 90.979672268518328,
         'posy': -48.227761233479264,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'RawBud',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x552a790> : "RawBud"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -69.95082836441226,
         'posy': -13.817447578155512,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'Flower',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5531090> : "Flower"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 216.94671082394149,
          'posy': -11.333037132593969,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 63.868351622890948,
                'posy': -292.88503128092441,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': 255},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 85.527921532109431,
                 'posy': 203.0536821230537,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': 255}},
                             elt_value={  2: [],
   3: [(1, '0')],
   4: [],
   5: [],
   6: [],
   7: [],
   8: [],
   9: [],
   10: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [1.5127998508044769, -11.298195738342841],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [102.34698933445478, -95.651391901359602],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-146.93310712644185, -11.849634346023027],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [88.618655360555465, -13.087143196706499],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [52.814112186278436, -140.86544681736933],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [124.55287960949508, -142.16865012520782],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [90.979672268518328, -48.227761233479264],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-69.95082836441226, -13.817447578155512],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [216.94671082394149, -11.333037132593969],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [63.868351622890948, -292.88503128092441],
                'useUserColor': True,
                'userColor': [255, 255, 127]},
   '__out__': {  'position': [85.527921532109431, 203.0536821230537],
                 'useUserColor': True,
                 'userColor': [255, 255, 127]}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_RevolutionFig = Factory(name='RevolutionFig',
                authors=' (rose authors)',
                description='returns a 3D revolution volume.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RevolutionFig',
                inputs=[{'interface': ISequence, 'name': 'pointArray', 'value': None, 'desc': 'a 2D points array'}, {'interface': IInt, 'name': 'stride', 'value': 8, 'desc': 'the 3D volume number of revolution slices.'}],
                outputs=[{'interface': IData, 'name': 'rev_fig', 'desc': 'A 3D revolution volume.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_GetOrigin = Factory(name='GetOrigin',
                authors=' (rose authors) ',
                description='Makes a dictionnary of pairs {plant num : plant position} in a 2D grid of int coordinates',
                category='data processing',
                nodemodule='rose',
                nodeclass='GetOrigin',
                inputs=[{'interface': IFileStr, 'name': 'OriginFilename', 'value': '', 'desc': 'A file which contains a header line (i.e "x","y","z" and a data line with a 3D origine coordinate.'}],
                outputs=[{'interface': ISequence, 'name': 'origin', 'desc': 'A vector of 3D coordinates.'}],
                widgetmodule=None,
                widgetclass=None,
               )




convertMtgToCanFiles = CompositeNodeFactory(name='convertMtgToCanFiles',
                             description='build Can files from Mtg files',
                             category='data processing',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.math', '+'),
   3: ('openalea.file', 'filename'),
   4: ('openalea.python method', 'getitem'),
   5: ('openalea.data structure', 'int'),
   6: ('openalea.data structure', 'int'),
   7: ('openalea.data structure.string', 'string'),
   8: ('Rose.mockup', 'readCsv'),
   9: ('openalea.data structure', 'int'),
   10: ('openalea.python method', 'getitem'),
   11: ('openalea.math', '+'),
   12: ('openalea.data structure', 'int'),
   13: ('openalea.python method', 'getitem'),
   14: ('openalea.data structure.string', 'string'),
   15: ('openalea.data structure.string', 'string'),
   16: ('openalea.data structure.string', 'string'),
   17: ('openalea.math', '+'),
   18: ('openalea.math', '+'),
   19: ('openalea.math', '+'),
   20: ('openalea.file', 'dirname'),
   21: ('openalea.file', 'glob'),
   22: ('openalea.math', '+'),
   23: ('openalea.data structure.string', 'string'),
   24: ('openalea.math', '+'),
   25: ('openalea.data structure.string', 'string'),
   26: ('openalea.mtg', 'MTG'),
   28: ('openalea.python method', 'getitem'),
   29: ('openalea.data structure', 'int'),
   30: ('Rose.mockup', 'rose_reconstruction'),
   32: ('openalea.data structure', 'int'),
   38: ('openalea.math', '+'),
   39: ('openalea.math', '*'),
   42: ('vplants.plantgl.visualization', 'plot3D'),
   43: ('Rose.mockup', 'scene2Can01'),
   44: ('openalea.data structure', 'int'),
   46: ('openalea.math', '+'),
   47: ('openalea.data structure', 'variable'),
   48: ('openalea.data structure', 'variable'),
   70: ('openalea.python method', 'print')},
                             elt_connections={  6402200: (18, 0, 24, 0),
   6402248: (9, 0, 11, 0),
   6402272: (44, 0, 38, 0),
   6402296: (17, 0, 18, 0),
   6402320: (25, 0, 24, 1),
   6402344: (47, 0, 2, 1),
   6402368: (46, 0, 70, 0),
   6402392: (8, 0, 4, 0),
   6402416: (18, 0, 19, 0),
   6402440: (20, 0, 22, 0),
   6402464: (38, 0, 11, 1),
   6402488: (19, 0, 14, 0),
   6402512: (48, 0, 39, 1),
   6402536: (21, 0, 28, 0),
   6402560: (30, 0, 42, 0),
   6402584: (20, 0, 21, 0),
   6402608: (29, 0, 28, 1),
   6402632: (5, 0, 2, 0),
   6402656: (15, 0, 17, 1),
   6402680: (30, 0, 43, 0),
   6402704: (7, 0, 8, 1),
   6402728: (38, 0, 13, 1),
   6402752: (26, 0, 30, 0),
   6402776: (24, 0, 46, 1),
   6402824: (3, 0, 8, 0),
   6402848: (13, 0, 17, 0),
   6402872: (14, 0, 21, 1),
   6402896: (32, 0, 48, 1),
   6402920: (2, 0, 4, 1),
   6402968: (2, 0, 47, 0),
   6402992: (28, 0, 26, 0),
   6403016: (22, 0, 46, 0),
   6403040: (6, 0, 47, 1),
   6403808: (16, 0, 19, 1),
   6403880: (23, 0, 22, 1),
   6403976: (4, 0, 10, 0),
   6404048: (4, 0, 13, 0),
   6404072: (12, 0, 39, 0),
   6404096: (10, 0, 18, 1),
   6404120: (11, 0, 10, 1),
   6404144: (39, 0, 38, 1),
   6404168: (46, 0, 43, 1)},
                             elt_data={  2: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -51.671585256931763,
         'posy': -369.3435801376275,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'filename',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x41f2ad0> : "filename"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -176.55418786422544,
         'posy': -369.16213539710299,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'getitem',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x3b41590> : "getitem"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -144.1635833065823,
         'posy': -266.43138600082239,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5af0810> : "int"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -53.667415222568536,
         'posy': -409.0990262805542,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5af0810> : "int"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 78.25907863466233,
         'posy': -405.89679533546746,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': ',',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -96.864782095031785,
         'posy': -368.50740041488774,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'readCsv',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x59481d0> : "readCsv"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -151.85805262966244,
         'posy': -313.64096894011692,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5af0810> : "int"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -35.900008863765159,
         'posy': -287.19562983104902,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3b41590> : "getitem"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -47.375416506348415,
          'posy': -166.47608672099932,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -14.952345395452086,
          'posy': -232.46741902656686,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': '2',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5af0810> : "int"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 41.530137866755631,
          'posy': -233.82286291009871,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3b41590> : "getitem"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -137.83428499078948,
          'posy': -168.3710543581995,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '90-3.mtg',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 301.2815583346038,
          'posy': -194.23250183278691,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': '-',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -73.265808033087126,
          'posy': -166.98020470639662,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': '.mtg',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -20.096322632026641,
          'posy': -62.625465623095323,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -112.54312804364531,
          'posy': -112.55608730243297,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -67.773784475830752,
          'posy': -62.557356798645543,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -30.742824602751341,
          'posy': -4.8493085917419876,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': '.../mtg',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x41f2090> : "dirname"',
          'hide': True,
          'id': 20,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 245.1098969258112,
          'posy': -193.92114290141387,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   21: {  'block': False,
          'caption': 'glob',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x41f2a10> : "glob"',
          'hide': True,
          'id': 21,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 290.52040333181139,
          'posy': -132.83212385683998,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 478.39046495053037,
          'posy': -139.20633718247868,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': '/../can/',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 448.36085939105408,
          'posy': -203.9210258526027,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   24: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 24,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 512.72199001360207,
          'posy': -141.98489322906184,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': '.can',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x57a3790> : "string"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 511.7230106331159,
          'posy': -205.32584667333109,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   26: {  'block': False,
          'caption': 'MTG',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4847710> : "MTG"',
          'hide': True,
          'id': 26,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 296.72563798776014,
          'posy': -15.116792020400794,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   28: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3b41590> : "getitem"',
          'hide': True,
          'id': 28,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 286.3560102021147,
          'posy': -80.026453067831255,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   29: {  'block': False,
          'caption': '0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5af0810> : "int"',
          'hide': True,
          'id': 29,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 344.4353732438891,
          'posy': -126.93581993952154,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   30: {  'block': False,
          'caption': 'rose_reconstruction',
          'delay': 0,
          'hide': True,
          'id': 30,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 264.39162497915015,
          'posy': 74.360144525386019,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   32: {  'block': False,
          'caption': '0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5af0810> : "int"',
          'hide': True,
          'id': 32,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 104.24035614437028,
          'posy': -314.62411976713025,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   38: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 38,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 73.293247555089479,
          'posy': -134.09966723516084,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   39: {  'block': False,
          'caption': '*',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509cdd0> : "*"',
          'hide': True,
          'id': 39,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 78.462216884384276,
          'posy': -211.77493975637282,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   42: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x46c52d0> : "plot3D"',
          'hide': True,
          'id': 42,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 399.63384627364746,
          'posy': 143.14546201059196,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   43: {  'block': False,
          'caption': 'scene2Can01',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5926c10> : "scene2Can01"',
          'hide': True,
          'id': 43,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 286.32987056936093,
          'posy': 141.10823186483506,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   44: {  'block': False,
          'caption': '1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5af0810> : "int"',
          'hide': True,
          'id': 44,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 67.43027055719935,
          'posy': -181.81384298553954,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   46: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x509ccd0> : "+"',
          'hide': True,
          'id': 46,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 487.74444268900641,
          'posy': -66.581521297689477,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   47: {  'block': False,
          'caption': '2',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5ae3d90> : "variable"',
          'hide': True,
          'id': 47,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 7.2409735975797673,
          'posy': -367.39986403649891,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   48: {  'block': False,
          'caption': 'config. index : 0..4',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5ae3d90> : "variable"',
          'hide': True,
          'id': 48,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 32.933661976750955,
          'posy': -269.25106054043823,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   70: {  'block': False,
          'caption': 'print',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3b417d0> : "print"',
          'hide': True,
          'id': 70,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 485.16438056439131,
          'posy': 104.14643308431582,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [  (  0,
            "'/home/hautret/manips/modeleChambre/documentation/emplacementEtOrientationPlantes.csv'")],
   4: [],
   5: [(0, '1')],
   6: [(0, '1')],
   7: [(0, "','")],
   8: [],
   9: [(0, '1')],
   10: [],
   11: [],
   12: [(0, '2')],
   13: [],
   14: [(0, "'90-3.mtg'")],
   15: [(0, "'-'")],
   16: [(0, "'.mtg'")],
   17: [(0, "'90'"), (1, "'-'")],
   18: [],
   19: [(0, "'90-3'"), (1, "'.mtg'")],
   20: [(0, "'/home/hautret/manips/modeleChambre/populationOrdre1/mtg'")],
   21: [],
   22: [],
   23: [(0, "'/../can/'")],
   24: [],
   25: [(0, "'.can'")],
   26: [],
   28: [],
   29: [(0, '0')],
   30: [],
   32: [(0, '0')],
   38: [],
   39: [],
   42: [],
   43: [],
   44: [(0, '1')],
   46: [],
   47: [],
   48: [(0, "'config. index : 0..4'")],
   70: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-51.671585256931763, -369.3435801376275],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-176.55418786422544, -369.16213539710299],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-144.1635833065823, -266.43138600082239],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-53.667415222568536, -409.0990262805542],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [78.25907863466233, -405.89679533546746],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-96.864782095031785, -368.50740041488774],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-151.85805262966244, -313.64096894011692],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-35.900008863765159, -287.19562983104902],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-47.375416506348415, -166.47608672099932],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-14.952345395452086, -232.46741902656686],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [41.530137866755631, -233.82286291009871],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-137.83428499078948, -168.3710543581995],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [301.2815583346038, -194.23250183278691],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [-73.265808033087126, -166.98020470639662],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-20.096322632026641, -62.625465623095323],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-112.54312804364531, -112.55608730243297],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-67.773784475830752, -62.557356798645543],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-30.742824602751341, -4.8493085917419876],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [245.1098969258112, -193.92114290141387],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [290.52040333181139, -132.83212385683998],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [478.39046495053037, -139.20633718247868],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [448.36085939105408, -203.9210258526027],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [512.72199001360207, -141.98489322906184],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [511.7230106331159, -205.32584667333109],
          'useUserColor': False,
          'userColor': None},
   26: {  'position': [296.72563798776014, -15.116792020400794],
          'useUserColor': False,
          'userColor': None},
   27: {  'color': None,
          'position': [266.63701044185342, -313.48764105923783],
          'rectP2': (-1, -1),
          'text': u"Can't",
          'textColor': None,
          'visualStyle': 0},
   28: {  'position': [286.3560102021147, -80.026453067831255],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [344.4353732438891, -126.93581993952154],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [264.39162497915015, 74.360144525386019],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [384.6504018161728, 4.9909643254978846],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [104.24035614437028, -314.62411976713025],
          'useUserColor': False,
          'userColor': None},
   33: {  'color': None,
          'position': [446.73480065308053, -311.01383756620714],
          'rectP2': (-1, -1),
          'text': u'these',
          'textColor': [0, 0, 0],
          'visualStyle': 1},
   34: {  'position': [404.2939854906881, 45.406574647025252],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [424.04005503102906, 156.29844699148686],
          'useUserColor': False,
          'userColor': None},
   36: {  'position': [505.38710210219313, 46.517621659751114],
          'useUserColor': False,
          'userColor': None},
   37: {  'position': [487.05846289978069, 3.1954639184772873],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [73.293247555089479, -134.09966723516084],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [78.462216884384276, -211.77493975637282],
          'useUserColor': False,
          'userColor': None},
   40: {  'color': None,
          'position': [313.78138384879679, -312.91914369985039],
          'rectP2': (78.0, 30.5),
          'text': u'remove',
          'textColor': None,
          'visualStyle': 1},
   41: {  'position': [543.98056304147588, 96.792984967140171],
          'useUserColor': False,
          'userColor': None},
   42: {  'position': [399.63384627364746, 143.14546201059196],
          'useUserColor': False,
          'userColor': None},
   43: {  'position': [286.32987056936093, 141.10823186483506],
          'useUserColor': False,
          'userColor': None},
   44: {  'position': [67.43027055719935, -181.81384298553954],
          'useUserColor': False,
          'userColor': None},
   45: {  'position': [493.55064650850443, -49.691656684606642],
          'useUserColor': False,
          'userColor': None},
   46: {  'position': [487.74444268900641, -66.581521297689477],
          'useUserColor': False,
          'userColor': None},
   47: {  'position': [7.2409735975797673, -367.39986403649891],
          'useUserColor': False,
          'userColor': None},
   48: {  'position': [32.933661976750955, -269.25106054043823],
          'useUserColor': False,
          'userColor': None},
   49: {  'position': [-365.85947755094332, 309.11364373968769],
          'useUserColor': False,
          'userColor': None},
   50: {  'position': [-346.11340801060237, 420.00551608414929],
          'useUserColor': False,
          'userColor': None},
   51: {  'position': [-264.7663609394383, 310.22469075241355],
          'useUserColor': False,
          'userColor': None},
   52: {  'position': [-283.09500014185073, 266.90253301113972],
          'useUserColor': False,
          'userColor': None},
   53: {  'position': [-226.17290000015555, 360.50005405980261],
          'useUserColor': False,
          'userColor': None},
   54: {  'position': [-287.44962954753623, 516.3159799942548],
          'useUserColor': False,
          'userColor': None},
   55: {  'position': [-310.31658857970297, 468.15912777541899],
          'useUserColor': False,
          'userColor': None},
   56: {  'position': [-276.602816533127, 214.01541240805579],
          'useUserColor': False,
          'userColor': None},
   57: {  'position': [-473.42782505387129, 248.59027707226164],
          'useUserColor': False,
          'userColor': None},
   58: {  'position': [-320.16873157610075, 361.24754627816827],
          'useUserColor': False,
          'userColor': None},
   59: {  'position': [-385.50306122545862, 268.69803341816032],
          'useUserColor': False,
          'userColor': None},
   60: {  'position': [-469.78262154480853, 62.393004423919891],
          'useUserColor': False,
          'userColor': None},
   61: {  'position': [-534.01071433413767, 132.12636230947737],
          'useUserColor': False,
          'userColor': None},
   62: {  'position': [-487.30894702594964, 188.00357144471258],
          'useUserColor': False,
          'userColor': None},
   63: {  'position': [-432.25629606366738, 131.11583211702094],
          'useUserColor': False,
          'userColor': None},
   64: {  'position': [-48.722827693101053, 215.52989692585371],
          'useUserColor': False,
          'userColor': None},
   65: {  'position': [-96.435125193745705, 263.24219442649843],
          'useUserColor': False,
          'userColor': None},
   66: {  'position': [-328.5482318515439, 74.029876652393085],
          'useUserColor': False,
          'userColor': None},
   67: {  'position': [-19.361413846550491, 164.14742269439029],
          'useUserColor': False,
          'userColor': None},
   68: {  'position': [55.052650962282243, 130.29127394406794],
          'useUserColor': False,
          'userColor': None},
   69: {  'position': [602.12139885660758, 153.91651300015531],
          'useUserColor': False,
          'userColor': None},
   70: {  'position': [485.16438056439131, 104.14643308431582],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




ChooseOnePlant = CompositeNodeFactory(name='ChooseOnePlant',
                             description='Do choose one plant amongst the population',
                             category='category test',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('openalea.data structure.list', 'list'),
   4: ('openalea.python method', 'getitem'),
   5: ('openalea.python method', 'getitem'),
   10: ('openalea.python method', 'print'),
   18: ('openalea.math', '+'),
   19: ('Rose.mockup', 'roseMtgDataDir'),
   21: ('Rose.mockup', 'Manip+Prel_to_listOfID'),
   23: ('openalea.file', 'joinpath'),
   25: ('vplants.plantgl.visualization', 'plot3D'),
   31: ('openalea.data structure.string', 'string'),
   32: ('Rose.mockup', 'rose_reconstruction'),
   36: ('openalea.python method', 'getitem'),
   38: ('openalea.mtg', 'MTG'),
   40: ('openalea.data structure.list', 'list')},
                             elt_connections={  6402584: (10, 0, 38, 0),
   6402632: (4, 0, 21, 1),
   6402656: (40, 0, 5, 0),
   6402680: (19, 0, 23, 0),
   6402704: (18, 0, 23, 0),
   6402728: (5, 0, 23, 0),
   6402752: (32, 0, 25, 0),
   6402776: (4, 0, 23, 0),
   6402800: (36, 0, 18, 0),
   6402824: (38, 0, 32, 0),
   6402848: (5, 0, 21, 0),
   6402896: (31, 0, 18, 1),
   6402992: (21, 0, 36, 0),
   6403016: (23, 0, 10, 0),
   6403040: (2, 0, 4, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'liste de prelts.',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x466b350> : "list"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -345.97873626203568,
         'posy': -41.972162374969102,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': 85},
   4: {  'block': False,
         'caption': 'choix prelevement',
         'delay': 0,
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -351.86313071801874,
         'posy': -5.942127518205174,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 170},
   5: {  'block': False,
         'caption': 'choix manip',
         'delay': 0,
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -471.65905212960001,
         'posy': -7.1163457563368109,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 170},
   10: {  'block': False,
          'caption': 'print',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x074FFDB0> : "print"',
          'hide': True,
          'id': 10,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -372.24881219194555,
          'posy': 297.13036678940301,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': '+',
          'delay': 0,
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -342.03066757771177,
          'posy': 185.62143324758412,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'roseMtgDataDir',
          'delay': 0,
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -569.82006640250802,
          'posy': 117.79014394762522,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   21: {  'block': False,
          'caption': 'Manip+Prel_to_listOfID',
          'delay': 0,
          'hide': True,
          'id': 21,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -413.74149871761767,
          'posy': 66.343389007198184,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'joinpath',
          'delay': 0,
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -383.95493325362719,
          'posy': 255.51827957393402,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x06CE1390> : "plot3D"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -375.70458219452672,
          'posy': 419.11463438425801,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   31: {  'block': False,
          'caption': '.mtg',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x071279B0> : "string"',
          'hide': True,
          'id': 31,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -288.8126012053595,
          'posy': 108.07150512023821,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   32: {  'block': False,
          'caption': 'rose_reconstruction',
          'delay': 0,
          'hide': True,
          'id': 32,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -418.35812132456493,
          'posy': 377.74061506296783,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   36: {  'block': False,
          'caption': 'choix plante',
          'delay': 0,
          'hide': True,
          'id': 36,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -397.90682034837334,
          'posy': 106.06319096285856,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 170},
   38: {  'block': False,
          'caption': 'MTG',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x06D5D4F0> : "MTG"',
          'hide': True,
          'id': 38,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -370.00619223487547,
          'posy': 338.44317871117033,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   40: {  'block': False,
          'caption': 'liste de manips',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x466b350> : "list"',
          'hide': True,
          'id': 40,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -488.75404134656503,
          'posy': -42.620200832513909,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': 85},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "['P1', 'P2', 'P3']")],
   4: [(1, '1')],
   5: [(1, '2')],
   10: [  (  0,
             "path(u'/home/hautret/outils/OA/rose/share/MTG/Manip2_C1_PARfort/P2/942.mtg')")],
   18: [],
   19: [],
   21: [],
   23: [  (  0,
             "[path(u'/home/hautret/outils/OA/rose/share/MTG'), 'Manip2_C1_PARfort', 'P2', '942.mtg']")],
   25: [],
   31: [(0, "u'.mtg'")],
   32: [],
   36: [(1, '4')],
   38: [],
   40: [  (  0,
             "['Manip1_C1_PARfort', 'Manip1_C2_PARfaible', 'Manip2_C1_PARfort', 'Manip2_C2_PARfaible', 'Manip3_PARfort', 'Manip3_PARfaible']")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-345.97873626203568, -41.972162374969102],
         'useUserColor': False,
         'userColor': [85, 170, 255]},
   3: {  'position': [-555.59778142200048, -125.92473037274804],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-351.86313071801874, -5.942127518205174],
         'useUserColor': True,
         'userColor': [170, 170, 0]},
   5: {  'position': [-471.65905212960001, -7.1163457563368109],
         'useUserColor': True,
         'userColor': [170, 170, 0]},
   7: {  'position': [-222.95331021432557, -36.903734249968238],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-182.08652471483478, -128.17610255156893],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-240.80823644800512, -1.7220191116574313],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-372.24881219194555, 297.13036678940301],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-69.38097792929176, -1.8624709182894463],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [-35.154272779050252, -40.959167916830964],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [-185.70755129095517, -3.2978299965877937],
          'useUserColor': False,
          'userColor': None},
   15: {  'position': [-424.67016823173799, -81.723331831693059],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-396.34539345174397, -123.11515296288245],
          'useUserColor': False,
          'userColor': None},
   18: {  'position': [-342.03066757771177, 185.62143324758412],
          'useUserColor': False,
          'userColor': None},
   19: {  'position': [-569.82006640250802, 117.79014394762522],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-575.69410625799583, 122.14021849545665],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-413.74149871761767, 66.343389007198184],
          'useUserColor': False,
          'userColor': None},
   22: {  'position': [-370.21956859354844, 390.16587825217664],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-383.95493325362719, 255.51827957393402],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-161.96408259818062, -35.928620569641438],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-375.70458219452672, 419.11463438425801],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   26: {  'position': [-284.3780768068749, -64.781780253917788],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [-5.1983213715422281, -202.9665207686183],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [-353.33967740015351, -51.348075439204521],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [-76.034670710119798, -166.19027685755566],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [-357.62748963394722, 31.254297569887044],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [-288.8126012053595, 108.07150512023821],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [-418.35812132456493, 377.74061506296783],
          'useUserColor': False,
          'userColor': None},
   33: {  'position': [-141.29601164902579, -131.72810073128323],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [-220.88176939231232, -97.999065924448786],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [-200.99849455396048, 49.269409450230484],
          'useUserColor': False,
          'userColor': None},
   36: {  'position': [-397.90682034837334, 106.06319096285856],
          'useUserColor': True,
          'userColor': [170, 170, 0]},
   37: {  'position': [-382.27054625741516, -11.047493421184868],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [-370.00619223487547, 338.44317871117033],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-249.95921936353551, 340.1963056007562],
          'useUserColor': False,
          'userColor': None},
   40: {  'position': [-488.75404134656503, -42.620200832513909],
          'useUserColor': False,
          'userColor': [85, 170, 255]},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_BudArray = Factory(name='budArray',
                authors=' (rose authors)',
                description='returns a points array.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BudArray',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'bud_array', 'desc': 'A Vector2 array.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_BezierPatchFlower = Factory(name='BezierPatchFlower',
                authors=' (rose authors)',
                description='computes a flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BezierPatchFlower',
                inputs=[{'interface': ISequence, 'name': 'controlPointMatrix', 'value': None, 'desc': 'control points matrix of Vector4'}, {'interface': IInt, 'name': 'uStride', 'value': 8, 'desc': '"U" stride'}, {'interface': IInt, 'name': 'vStride', 'value': 8, 'desc': '"V" stride'}],
                outputs=[{'interface': IFunction, 'name': 'BezierPatchFlower', 'desc': 'computes a red flower from 2 points and a diameter.'}],
                widgetmodule=None,
                widgetclass=None,
               )




Canopy2011Filenames = CompositeNodeFactory(name='Canopy2011Filenames',
                             description='drives data search for CanopyReconstruction2011 nodes',
                             category='data processing',
                             doc='',
                             inputs=[  {  'desc': 'root directory to search for pathes generated by other entries\n',
      'interface': ISequence,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'List of experimentation folders',
      'interface': ISequence,
      'name': 'PosFilesList',
      'value': None},
   {  'desc': 'List of prelevements for an experiment (P1 .. PN)',
      'interface': ISequence,
      'name': 'PrelevList',
      'value': None}],
                             outputs=[  {  'desc': 'Actual position File',
      'interface': IStr,
      'name': 'Out4GridToDict'},
   {  'desc': 'directory to get MTG files from',
      'interface': IStr,
      'name': 'Out4GetLocal'},
   {  'desc': '(part of) the remote directory to get MTG files from',
      'interface': IStr,
      'name': 'Out4GetWeb'},
   {  'desc': 'the path to the origin file',
      'interface': IStr,
      'name': 'Out4GetOrigin'}],
                             elt_factory={  2: ('openalea.data structure.string', 'string'),
   3: ('openalea.data structure', 'None'),
   4: ('openalea.math', '+'),
   5: ('openalea.math', '=='),
   6: ('openalea.data structure.string', 'string'),
   7: ('openalea.math', '+'),
   8: ('openalea.math', '+'),
   9: ('openalea.math', '+'),
   10: ('Rose.mockup', 'roseMtgDataDir'),
   11: ('openalea.python method', 'ifelse'),
   12: ('openalea.data structure.string', 'string'),
   13: ('openalea.math', '+'),
   14: ('openalea.math', '+')},
                             elt_connections={  6402560: (5, 0, 11, 0),
   6402584: (3, 0, 5, 0),
   6402608: ('__in__', 1, 13, 0),
   6402632: ('__in__', 0, 5, 1),
   6402656: (10, 0, 11, 1),
   6402680: (2, 0, 13, 1),
   6402704: (11, 0, 7, 0),
   6402728: ('__in__', 2, 8, 1),
   6402752: (7, 0, 4, 0),
   6402776: (12, 0, 4, 1),
   6402800: (2, 0, 14, 0),
   6402824: (14, 0, '__out__', 2),
   6402848: (7, 0, 9, 0),
   6402872: (14, 0, 7, 1),
   6402896: (8, 0, 14, 1),
   6402920: (13, 0, 8, 0),
   6402944: ('__in__', 0, 11, 2),
   6402968: (7, 0, '__out__', 1),
   6402992: (4, 0, '__out__', 0),
   6403016: (9, 0, '__out__', 3),
   6403040: (6, 0, 9, 1)},
                             elt_data={  2: {  'block': False,
         'caption': "'/'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x51ca890> : "string"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 108.8605631336096,
         'posy': -28.311315324366383,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'None',
         'delay': 0,
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -104.26251234295179,
         'posy': -88.816214218070087,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 127.30851176893896,
         'posy': 363.67610498610736,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '==',
         'delay': 0,
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -90.103405728476901,
         'posy': 27.031021718543073,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': "'/origin.txt'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x51ca890> : "string"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 269.24564043724502,
         'posy': 213.22316718690757,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 19.532487750348508,
         'posy': 156.99702869217231,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 142.16752312493918,
         'posy': 78.072061964389235,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 292.10699457249888,
         'posy': 338.82882217110182,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'roseMtgDataDir',
          'delay': 0,
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -32.179787760170427,
          'posy': -88.816214218070058,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'ifelse',
          'delay': 0,
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 4.9327897870854827,
          'posy': 99.94053756577317,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': "'/grid.txt'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51ca890> : "string"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 116.47827289858088,
          'posy': 217.61755405159033,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 92.879611979912596,
          'posy': 13.861574531220434,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 121.69718052273907,
          'posy': 134.56160266197122,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 95.265111585586482,
                'posy': -88.094869915546525,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 174.7249427675406,
                 'posy': 508.38719052061327,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "'/'")],
   3: [],
   4: [(0, '0')],
   5: [],
   6: [(0, "'/origin.txt'")],
   7: [],
   8: [],
   9: [],
   10: [],
   11: [],
   12: [(0, "'/grid.txt'")],
   13: [],
   14: [],
   '__in__': [],
   '__out__': [(2, "''")]},
                             elt_ad_hoc={  2: {  'position': [108.8605631336096, -28.311315324366383],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-104.26251234295179, -88.816214218070087],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [127.30851176893896, 363.67610498610736],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-90.103405728476901, 27.031021718543073],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [269.24564043724502, 213.22316718690757],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [19.532487750348508, 156.99702869217231],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [142.16752312493918, 78.072061964389235],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [292.10699457249888, 338.82882217110182],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-32.179787760170427, -88.816214218070058],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [4.9327897870854827, 99.94053756577317],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [116.47827289858088, 217.61755405159033],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [92.879611979912596, 13.861574531220434],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [121.69718052273907, 134.56160266197122],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [95.265111585586482, -88.094869915546525],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [174.7249427675406, 508.38719052061327],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




tempPickleFile_tempPickleFile = Factory(name='tempFile',
                authors=' (wralea authors)',
                description='returns a path to a file inside a temp dir according to the os ',
                category='data i/o',
                nodemodule='tempPickleFile',
                nodeclass='tempPickleFile',
                inputs=[{'interface': IStr, 'name': 'filename', 'value': None, 'desc': 'a name for a pickle file'}],
                outputs=[{'interface': IData, 'name': 'pickleFile', 'desc': 'returns a name for a pickle file'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_colors_ColorFuncs = Factory(name='colorFunc',
                authors=' (rose authors)',
                description='returns a list of colorFuncs.',
                category='data processing',
                nodemodule='rose_colors',
                nodeclass='ColorFuncs',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'colorFuncs', 'desc': 'A list of functions to color the turtle.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_FineBudArray = Factory(name='fineBudArray',
                authors=' (rose authors)',
                description='returns a points array.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='FineBudArray',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'bud_array', 'desc': 'A Vector2 array.'}],
                widgetmodule=None,
                widgetclass=None,
               )




readCsv = Factory(name='readCsv',
                  authors=' (rose authors)',
                  description='a function that reads a csv file.',
                  category='data processing',
                  nodemodule='rose_file',
                  nodeclass='readCsv',
                  inputs=[ {'interface': IStr, 'name': 'fileName', 'value': None, 'desc': 'a complete path to a CSV file'}, 
                           {'interface': IStr, 'name': 'delimiter', 'value': ',', 'desc': 'a character that delimits fields within the lines'},
        {'interface': IInt, 'name': 'ligne_debut', 'value': 0, 'desc': 'the line number to begin with (0 => all lines)'}, 
        ],
                outputs=[{'interface': ISequence, 'name': 'retList', 'desc': 'the columns within lines that could be read'}],
                widgetmodule=None,
                widgetclass=None,
               )

readXls = Factory(name='readXls',
                authors=' (rose authors)',
                description='a function that reads an Excel file.',
                category='data processing',
                nodemodule='rose_file',
                nodeclass='readXls',
                  inputs=[  {'interface': IStr, 'name': 'fileName', 'value': None, 'desc': 'a complete path to a CSV file'}, 
        {'interface': IInt, 'name': 'sheet_number', 'value':0, 'desc':'the number of the sheet to use'}, 
        {'interface': IInt, 'name': 'ligne_debut', 'value': 0, 'desc': 'the line number to begin with (0 => all lines)'} 
        ],
                outputs=[{'interface': ISequence, 'name': 'retList', 'desc': 'the columns within lines that could be read'}],
                widgetmodule=None,
                widgetclass=None,
               )



decode_liste= Factory(name='decode_liste',
                     authors=' (rose authors)',
                     description='changing the codes of the "pixel measuring team" to a list of path/plantID',
                     category='data processing',
                     nodemodule='rose_process',
                     nodeclass='Decode_liste',
                     inputs=[
        {'interface': ISequence, 'name': 'list_of_codes','value':[], 'desc':'a list of coding strings used by Arch-E\'s Pixel Measuring Team'},
        {'interface': ISequence, 'name': 'colonnes', 'value': [], 'desc': 'the column numbers we need to read ([] => all columns)'}
        ],
                      outputs=[{'interface': ISequence, 'name': 'list_of_plants', 'desc':'the list of plants described by the input list'}],
                widgetmodule=None,
                widgetclass=None,
               )
