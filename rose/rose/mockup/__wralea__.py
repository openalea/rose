
# This file has been generated at Mon Apr 23 17:20:16 2012

from openalea.core import *


__name__ = 'Rose.mockup'

__editable__ = True
__description__ = 'Stuff to display rosebush'
__license__ = ''
__url__ = ''
__alias__ = ['Rose']
__version__ = ''
__authors__ = ''
__institutes__ = ''
__icon__ = ''


__all__ = ['drawLeaflets', 'rose_geometry_VertexVisitor', 'rose_geometry_ReconstructWithTurtle', 'rose_geometry_computeLeaflet4pts', 'roseMtgDataDir', 'rose_CropGeneration_2011', 'rose_MTG_union', 'testMTGs', 'rose_HttpDir2DictOfFiles', 'rose_Files2MTGs', 'rose_GetGrid', 'rose_geometry_RawBud', 'GetLocalFiles', 'rose_LocalDir2DictOfFiles', 'rose_geometry_FloralOrgan', 'rose_geometry_RawFruit', 'rose_geometry_PetalMatrix', 'CanopyReconstruction2011', 'rose_geometry_BuiltBud', 'drawFlowers', 'rose_geometry_PolygonLeaflet', 'rose_geometry_RawFlower', 'rose_geometry_NoOrgan', 'GetWebFiles', 'rose_geometry_RevolutionBud', 'rose_geometry_RevolutionFig', 'rose_GetOrigin', 'rose_geometry_BudArray', 'rose_geometry_BezierPatchFlower', 'Canopy2011Filenames', 'tempPickleFile_tempPickleFile', 'rose_colors_ColorFuncs', 'rose_geometry_FineBudArray', 'drawBuds']



drawLeaflets = CompositeNodeFactory(name='drawLeaflets',
                             description='groups several procedures to draw leaflets',
                             category='data processing',
                             doc='',
                             inputs=[],
                             outputs=[  {  'desc': 'a list of funcs to display leaflets',
      'interface': ISequence,
      'name': 'leaflet_func'}],
                             elt_factory={  2: ('Rose.mockup', 'PolygonLeaflet'),
   3: ('Rose.mockup', 'NoOrgan'),
   4: ('Rose.mockup', 'ComputeLeaflet4pts'),
   5: ('openalea.data structure.list', 'list'),
   6: ('openalea.data structure.list', 'list')},
                             elt_connections={  6402944: (6, 0, 4, 1),
   6402968: (5, 0, 4, 0),
   6402992: (4, 0, '__out__', 0),
   6403016: (2, 0, '__out__', 0),
   6403040: (3, 0, '__out__', 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'PolygonLeaflet',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865b50> : "PolygonLeaflet"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -23.752878046893095,
         'posy': -23.380781012573081,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865d50> : "NoOrgan"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -89.575201045276302,
         'posy': -23.512162422928498,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'ComputeLeaflet4pts',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0xa865650> : "ComputeLeaflet4pts"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 78.125876851335107,
         'posy': -23.205705995446074,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 114.03891521291656,
         'posy': -73.189380675582001,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   6: {  'block': False,
         'caption': 'list',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x378f150> : "list"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 143.27889055901449,
         'posy': -73.540541583605872,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 16.0,
                 'posy': 27.0,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [],
   4: [],
   5: [(0, '[0.25, 0.5, 0.75, 1.0]')],
   6: [  (  0,
            '[0.81000000000000005, 0.97999999999999998, 0.93999999999999995, 0.0]')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-23.752878046893095, -23.380781012573081],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-89.575201045276302, -23.512162422928498],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [78.125876851335107, -23.205705995446074],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [114.03891521291656, -73.189380675582001],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   6: {  'position': [143.27889055901449, -73.540541583605872],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [16.0, 27.0],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_VertexVisitor = Factory(name='VertexVisitor',
                authors=' (wralea authors)',
                description='function to visit MTG nodes',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='VertexVisitor',
                inputs=[{'interface': IFunction, 'name': 'leaf_factory', 'value': None, 'desc': 'function to compute leaflet geometry'}, {'interface': IFunction, 'name': 'compute_bud', 'value': None, 'desc': 'function to compute bud geometry'}, {'interface': IFunction, 'name': 'compute_sepal', 'value': None, 'desc': 'function to compute sepal geometry'}, {'interface': IFunction, 'name': 'flower_factory', 'value': None, 'desc': 'function to compute flower geometry'}],
                outputs=[{'interface': IFunction, 'name': 'VertexVisitor', 'desc': 'function to visit the MTG nodes'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_ReconstructWithTurtle = Factory(name='ReconstructWithTurtle',
                authors=' (wralea authors)',
                description='builds a scene using the plantgl Turtle',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='ReconstructWithTurtle',
                inputs=[{'interface': IData, 'name': 'g', 'value': None, 'desc': 'a "Sagah2011" MTG'}, {'interface': IFunction, 'name': 'Visitor', 'value': None, 'desc': 'A function that builds the scene while walking throught the nodes of the MTG'}, {'interface': IFloat, 'name': 'powerParam', 'value': None, 'desc': 'the power parameter of the pipe model'}],
                outputs=[{'interface': IData, 'name': 'TheScene', 'desc': 'A 3D scene'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_computeLeaflet4pts = Factory(name='ComputeLeaflet4pts',
                authors=' (rose authors)',
                description='compute leaflet geometry from 4 points',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='computeLeaflet4pts',
                inputs=[{'interface': ISequence, 'name': 'x', 'value': [0.25, 0.5, 0.074999999999999997, 1.0], 'desc': ''}, {'interface': ISequence, 'name': 'y', 'value': [0.81000000000000005, 0.92000000000000004, 0.94999999999999996, 1.0], 'desc': 'sequence of positions along the y axis'}],
                outputs=[{'interface': IFunction, 'name': 'computeLeaflet4pts', 'desc': 'function that computes a leaflet from 4 digitization points'}],
                widgetmodule=None,
                widgetclass=None,
               )




roseMtgDataDir = CompositeNodeFactory(name='roseMtgDataDir',
                             description='gets the name of the MTG data dir of tthe rose package',
                             category='data i/o',
                             doc='',
                             inputs=[],
                             outputs=[  {  'desc': 'the path to the MTG data directory',
      'interface': IStr,
      'name': 'dataDir'}],
                             elt_factory={  2: ('openalea.file', 'joinpath'),
   3: ('openalea.file', 'parentdir'),
   4: ('openalea.file', 'packagedir'),
   6: ('openalea.data structure.string', 'string'),
   7: ('openalea.data structure.string', 'string'),
   10: ('openalea.file', 'parentdir'),
   11: ('openalea.data structure.string', 'string')},
                             elt_connections={  6402872: (11, 0, 4, 0),
   6402896: (10, 0, 2, 0),
   6402920: (2, 0, '__out__', 0),
   6402944: (7, 0, 2, 0),
   6402968: (6, 0, 2, 0),
   6402992: (3, 0, 10, 0),
   6403016: (4, 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'joinpath',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x327bc50> : "joinpath"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -42.675461482915154,
         'posy': 43.424153789632946,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'parentdir',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x327be90> : "parentdir"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -113.39360290953195,
         'posy': -54.580709985996918,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'packagedir',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x32852d0> : "packagedir"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -119.34431910764286,
         'posy': -93.026522482721674,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': "'share'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x47c5190> : "string"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -7.1822039844075292,
         'posy': -12.519373400225936,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': "'MTG'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x47c5190> : "string"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 60.221650594916284,
         'posy': -11.527343243779026,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'parentdir',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x327be90> : "parentdir"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -113.01173939941646,
          'posy': -13.808723754725762,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': "'rose.mockup'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x47c5190> : "string"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -128.54796492628523,
          'posy': -137.66717307216484,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': -28.435350950467239,
                 'posy': 81.749281295652906,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [(0, "'/home/hautret/developpement/rose/rose/mockup'")],
   4: [(0, "'rose.mockup'")],
   6: [(0, "'share'")],
   7: [(0, "'MTG'")],
   10: [],
   11: [(0, "'rose.mockup'")],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [-42.675461482915154, 43.424153789632946],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-113.39360290953195, -54.580709985996918],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-119.34431910764286, -93.026522482721674],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [-7.1822039844075292, -12.519373400225936],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [60.221650594916284, -11.527343243779026],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-113.01173939941646, -13.808723754725762],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [-128.54796492628523, -137.66717307216484],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [-28.435350950467239, 81.749281295652906],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_CropGeneration_2011 = Factory(name='CropGeneration_2011',
                authors=' (wralea authors)',
                description='creates a population of plants by associating plants numbers to positions in a grid',
                category='data processing',
                nodemodule='rose',
                nodeclass='CropGeneration_2011',
                inputs=[{'interface': IDict, 'name': 'plantlist', 'value': {}, 'desc': 'the dispatching of plants on the table'}, {'interface': IDict, 'name': 'existingmtglist', 'value': {}, 'desc': 'the dict of existing mtg:filename'}, {'interface': ISequence, 'name': 'excludelist', 'value': [], 'desc': 'list of plants not touse for filling'}, {'interface': ISequence, 'name': 'gridDef', 'value': [], 'desc': 'characteristice of the grid for this experiment : nX, nY, sizeX, sizeY'}, {'interface': ISequence, 'name': 'origin', 'value': [0, 0, 800], 'desc': 'the 3D coordinates of the 0,0 position'}, {'interface': IBool, 'name': 'DoFill', 'value': True, 'desc': 'If we fill missing data with existing data'}, {'interface': IBool, 'name': 'DoRotate', 'value': True, 'desc': 'wether we rotate the planst used for filling'}],
                outputs=[{'interface': IDict, 'name': 'dictofpositions', 'desc': 'dict of filenames associated with a list of coordinates and rotations'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_MTG_union = Factory(name='MTG_union',
                authors=' (rose authors)',
                description='garthers differents MTG objects in a single one.',
                category='data processing',
                nodemodule='rose',
                nodeclass='MTG_union',
                inputs=[{'interface': ISequence, 'name': 'mtgsin', 'value': {}, 'desc': 'a list of MTG objects to be glued together in a signle MTG object'}],
                outputs=[{'interface': IDict, 'name': 'mtgout', 'desc': 'An MTG object that holds the MTGs of the input list in a single one'}],
                widgetmodule=None,
                widgetclass=None,
               )




testMTGs = CompositeNodeFactory(name='testMTGs',
                             description='displays MTGs one by one',
                             category='category test',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  5: ('openalea.file', 'dirname'),
   6: ('Rose.mockup', 'colorFunc'),
   8: ('openalea.data structure', 'int'),
   9: ('openalea.python method', 'getitem'),
   10: ('openalea.python method', 'print'),
   11: ('openalea.python method', 'getitem'),
   13: ('openalea.python method', 'getitem'),
   14: ('openalea.math', '+'),
   15: ('openalea.file', 'glob'),
   16: ('openalea.data structure.string', 'string'),
   17: ('openalea.data structure', 'int'),
   18: ('openalea.python method', 'getitem'),
   20: ('openalea.python method', 'getitem'),
   21: ('openalea.data structure', 'int'),
   22: ('Rose.mockup', 'ReconstructWithTurtle'),
   23: ('openalea.python method', 'getitem'),
   24: ('openalea.file', 'dirname'),
   25: ('vplants.plantgl.visualization', 'plot3D'),
   26: ('Rose.mockup', 'drawLeaflets'),
   27: ('Rose.mockup', 'RawFruit'),
   28: ('alinea.grassland.luzerne', 'scene2can'),
   29: ('Rose.mockup', 'drawFlowers'),
   30: ('openalea.data structure.string', 'string'),
   31: ('openalea.file', 'dirname'),
   32: ('openalea.math', '+'),
   33: ('Rose.mockup', 'PolygonLeaflet'),
   34: ('Rose.mockup', 'drawBuds'),
   35: ('Rose.mockup', 'VertexVisitor'),
   38: ('openalea.mtg', 'MTG'),
   39: ('openalea.data structure', 'float')},
                             elt_connections={  6402368: (8, 0, 34, 0),
   6402416: (33, 0, 35, 2),
   6402440: (21, 0, 14, 1),
   6402464: (22, 0, 28, 0),
   6402488: (13, 0, 35, 1),
   6402512: (34, 0, 13, 0),
   6402536: (20, 0, 10, 0),
   6402560: (15, 0, 20, 0),
   6402584: (30, 0, 32, 1),
   6402608: (39, 0, 22, 2),
   6402632: (32, 0, 28, 1),
   6402656: (31, 0, 32, 0),
   6402680: (23, 0, 15, 0),
   6402704: (6, 0, 18, 0),
   6402728: (38, 0, 22, 0),
   6402752: (24, 0, 23, 0),
   6402776: (5, 0, 23, 0),
   6402800: (29, 0, 11, 0),
   6402824: (26, 0, 9, 0),
   6402848: (35, 0, 22, 1),
   6402872: (16, 0, 15, 1),
   6402896: (14, 0, 20, 1),
   6402920: (27, 0, 35, 4),
   6402944: (10, 0, 38, 0),
   6402968: (22, 0, 25, 0),
   6402992: (11, 0, 35, 3),
   6403016: (9, 0, 35, 0),
   6403040: (17, 0, 14, 0)},
                             elt_data={  5: {  'block': False,
         'caption': '.../P1',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x2c5a450> : "dirname"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -318.79644190582206,
         'posy': -215.24000355603386,
         'priority': 0,
         'use_user_color': True,
         'user_application': None,
         'user_color': 255},
   6: {  'block': False,
         'caption': 'colorFunc',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x518f4d0> : "colorFunc"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 191.82717891123838,
         'posy': -131.80763213532944,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '100',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x51f8410> : "int"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 51.373243899608738,
         'posy': -137.06224616332005,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'getitem',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x2a141d0> : "getitem"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -57.605046607358346,
         'posy': 31.71729391352936,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'print',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2a14410> : "print"',
          'hide': True,
          'id': 10,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -203.04586418894047,
          'posy': -13.540306590565713,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2a141d0> : "getitem"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 206.9447997721355,
          'posy': -21.675989057769797,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2a141d0> : "getitem"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 82.786927709785743,
          'posy': -30.942646836754491,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4980bd0> : "+"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -165.60012503165632,
          'posy': -109.27646934863529,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   15: {  'block': False,
          'caption': 'glob',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2c5ae10> : "glob"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -256.43363800090975,
          'posy': -115.1563348463699,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': "'*.mtg'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51fd510> : "string"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -235.16991830575699,
          'posy': -160.17026708218256,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': '1',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51f8410> : "int"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -178.04106126085702,
          'posy': -159.77415997546169,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   18: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2a141d0> : "getitem"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 202.72987015839809,
          'posy': -93.744457100032136,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   20: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2a141d0> : "getitem"',
          'hide': True,
          'id': 20,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -215.23302999313222,
          'posy': -49.758558108094448,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   21: {  'block': False,
          'caption': '0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51f8410> : "int"',
          'hide': True,
          'id': 21,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -115.68019311506849,
          'posy': -111.69490850772047,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   22: {  'block': False,
          'caption': 'ReconstructWithTurtle',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x517dd90> : "ReconstructWithTurtle"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -188.29661733618494,
          'posy': 95.325162526443634,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2a141d0> : "getitem"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -301.19824085039147,
          'posy': -157.22717797936428,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   24: {  'block': False,
          'caption': '.../P3',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2c5a450> : "dirname"',
          'hide': True,
          'id': 24,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -353.55093496487433,
          'posy': -190.75057590534414,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51eb750> : "plot3D"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -134.121781739146,
          'posy': 160.31914199773607,
          'priority': 0,
          'use_user_color': True,
          'user_application': None,
          'user_color': 255},
   26: {  'block': False,
          'caption': 'drawLeaflets',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x505a450> : "drawLeaflets"',
          'hide': True,
          'id': 26,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -82.379770084580912,
          'posy': -9.4148308668092433,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   27: {  'block': False,
          'caption': 'RawFruit',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x518f110> : "RawFruit"',
          'hide': True,
          'id': 27,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 280.09121828757515,
          'posy': 31.775054175481202,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   28: {  'block': False,
          'caption': 'scene2can',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4cd4d50> : "scene2can"',
          'hide': True,
          'id': 28,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -297.73978381515758,
          'posy': 161.77457757511488,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   29: {  'block': False,
          'caption': 'drawFlowers',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x518f210> : "drawFlowers"',
          'hide': True,
          'id': 29,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 183.58920190278036,
          'posy': -58.842692917557784,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   30: {  'block': False,
          'caption': "'/vine.can'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51fd510> : "string"',
          'hide': True,
          'id': 30,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -268.45717388899334,
          'posy': 62.017190034080642,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   31: {  'block': False,
          'caption': '.../tmp',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2c5a450> : "dirname"',
          'hide': True,
          'id': 31,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -324.02944392377458,
          'posy': 62.511944798312157,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   32: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x4980bd0> : "+"',
          'hide': True,
          'id': 32,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -288.97578219029901,
          'posy': 111.0920815657411,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   33: {  'block': False,
          'caption': 'PolygonLeaflet',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x518f050> : "PolygonLeaflet"',
          'hide': True,
          'id': 33,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 91.794600951390152,
          'posy': -168.29010174421529,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   34: {  'block': False,
          'caption': 'drawBuds',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x518f550> : "drawBuds"',
          'hide': True,
          'id': 34,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 69.434377642718204,
          'posy': -80.026062367878652,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   35: {  'block': False,
          'caption': 'VertexVisitor',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x505a490> : "VertexVisitor"',
          'hide': True,
          'id': 35,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 80.026062367878581,
          'posy': 48.251008192397364,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   38: {  'block': False,
          'caption': 'MTG',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x35555d0> : "MTG"',
          'hide': True,
          'id': 38,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -172.25129154813902,
          'posy': 43.652724570418798,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   39: {  'block': False,
          'caption': '2.00',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51f8290> : "float"',
          'hide': True,
          'id': 39,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -112.47637048259764,
          'posy': 28.183763733098601,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  5: [  (  0,
            "'/home/hautret/developpement/rose/share/MTG/Manip1_C1_PARfort/P1'")],
   6: [],
   8: [(0, '100')],
   9: [(1, '0')],
   10: [],
   11: [(1, '2')],
   13: [(1, '2')],
   14: [],
   15: [  (  0,
             "'/home/hautret/developpement/rose/share/MTG/Manip1_C1_PARfort/P1'")],
   16: [(0, "'*.mtg'")],
   17: [(0, '1')],
   18: [(1, '3')],
   20: [],
   21: [(0, '0')],
   22: [],
   23: [(1, '1')],
   24: [  (  0,
             "'/mnt/echange/samba/DigitsModeleStructure2011/MTGJessica/Manip1_C1_PARfort/P3'")],
   25: [],
   26: [],
   27: [(0, 'None')],
   28: [],
   29: [(0, 'None')],
   30: [(0, "'/vine.can'")],
   31: [(0, "'/home/hautret/tmp'")],
   32: [],
   33: [],
   34: [],
   35: [],
   38: [],
   39: [(0, '2.0')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  5: {  'position': [-318.79644190582206, -215.24000355603386],
         'useUserColor': True,
         'userColor': [255, 170, 0]},
   6: {  'position': [191.82717891123838, -131.80763213532944],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [51.373243899608738, -137.06224616332005],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-57.605046607358346, 31.71729391352936],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [-203.04586418894047, -13.540306590565713],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [206.9447997721355, -21.675989057769797],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [82.786927709785743, -30.942646836754491],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [-165.60012503165632, -109.27646934863529],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   15: {  'position': [-256.43363800090975, -115.1563348463699],
          'useUserColor': False,
          'userColor': None},
   16: {  'position': [-235.16991830575699, -160.17026708218256],
          'useUserColor': False,
          'userColor': None},
   17: {  'position': [-178.04106126085702, -159.77415997546169],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   18: {  'position': [202.72987015839809, -93.744457100032136],
          'useUserColor': False,
          'userColor': None},
   20: {  'position': [-215.23302999313222, -49.758558108094448],
          'useUserColor': False,
          'userColor': None},
   21: {  'position': [-115.68019311506849, -111.69490850772047],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   22: {  'position': [-188.29661733618494, 95.325162526443634],
          'useUserColor': False,
          'userColor': None},
   23: {  'position': [-301.19824085039147, -157.22717797936428],
          'useUserColor': False,
          'userColor': None},
   24: {  'position': [-353.55093496487433, -190.75057590534414],
          'useUserColor': False,
          'userColor': None},
   25: {  'position': [-134.121781739146, 160.31914199773607],
          'useUserColor': True,
          'userColor': [255, 170, 0]},
   26: {  'position': [-82.379770084580912, -9.4148308668092433],
          'useUserColor': False,
          'userColor': None},
   27: {  'position': [280.09121828757515, 31.775054175481202],
          'useUserColor': False,
          'userColor': None},
   28: {  'position': [-297.73978381515758, 161.77457757511488],
          'useUserColor': False,
          'userColor': None},
   29: {  'position': [183.58920190278036, -58.842692917557784],
          'useUserColor': False,
          'userColor': None},
   30: {  'position': [-268.45717388899334, 62.017190034080642],
          'useUserColor': False,
          'userColor': None},
   31: {  'position': [-324.02944392377458, 62.511944798312157],
          'useUserColor': False,
          'userColor': None},
   32: {  'position': [-288.97578219029901, 111.0920815657411],
          'useUserColor': False,
          'userColor': None},
   33: {  'position': [91.794600951390152, -168.29010174421529],
          'useUserColor': False,
          'userColor': None},
   34: {  'position': [69.434377642718204, -80.026062367878652],
          'useUserColor': False,
          'userColor': None},
   35: {  'position': [80.026062367878581, 48.251008192397364],
          'useUserColor': False,
          'userColor': None},
   38: {  'position': [-172.25129154813902, 43.652724570418798],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-112.47637048259764, 28.183763733098601],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None},
   '__out__': {  'position': [0, 0], 'useUserColor': True, 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_HttpDir2DictOfFiles = Factory(name='HttpDir2DictOfFiles',
                authors=' (rose authors) ',
                description='gets the files whose name matches "filter" on an URL and returns a dict which associates the names with a temp file on the local host.',
                category='Unclassified',
                nodemodule='rose',
                nodeclass='HttpDir2DictOfFiles',
                inputs=[{'interface': IStr, 'name': 'url', 'value': None, 'desc': 'An URL from which we download the files.'}, {'interface': IStr, 'name': 'filtre', 'value': None, 'desc': 'a string to filter filenames'}],
                outputs=[{'interface': IDict, 'name': 'dictoffiles', 'desc': 'a dict which associates PlantNum.mtg:realPathOfFile'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_Files2MTGs = Factory(name='Files2MTGs',
                authors=' (rose authors)',
                description='Makes MTG objects from MTG files',
                category='data processing',
                nodemodule='rose',
                nodeclass='Files2MTGs',
                inputs=[{'interface': IDict, 'name': 'cropdict', 'value': {}, 'desc': 'A dict which associates MTG filenames with lists of [positions, rotation] pairs.'}],
                outputs=[{'interface': ISequence, 'name': 'listOfMTGs', 'desc': 'A list of MTG objects, i.e MTG files shifted and rotated according to the input dict.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_GetGrid = Factory(name='getGrid',
                authors=' (rose authors) ',
                description='Makes a dictionnary of pairs {plant num : plant position} in a 2D grid of int coordinates',
                category='data processing',
                nodemodule='rose',
                nodeclass='GetGrid',
                inputs=[{'interface': IFileStr, 'name': 'GridFileName', 'value': '', 'desc': 'A file which contains a grid of plant numbers vs. positions in a 2D grid'}],
                outputs=[{'interface': IDict, 'name': 'dictOfPlantNums', 'desc': 'A dict which associates plant numbers with a position in a 2D grid.'}, {'interface': ISequence, 'name': 'gridSpecs', 'desc': 'the spec of hte grid: nStepsX, nStepY, srideX, strideY '}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RawBud = Factory(name='RawBud',
                authors=' (rose authors)',
                description='builds a raw bud with a sphere and a cone',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RawBud',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'compute_bud', 'desc': 'function to draw a bud'}],
                widgetmodule=None,
                widgetclass=None,
               )




GetLocalFiles = CompositeNodeFactory(name='GetLocalFiles',
                             description='Get mtg files from local directory',
                             category='data i/o',
                             doc='',
                             inputs=[  {  'desc': 'the name of the server',
      'interface': IStr,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'a string to filter file names',
      'interface': IStr,
      'name': 'filenamefilter',
      'value': None}],
                             outputs=[  {  'desc': 'the dictionnary that associates MTG files to temp files.',
      'interface': IDict,
      'name': 'DictOfFiles'}],
                             elt_factory={  6: ('openalea.file', 'glob'), 10: ('Rose.mockup', 'LocalDir2DictOfFiles')},
                             elt_connections={  6402944: ('__in__', 0, 6, 0),
   6402968: ('__in__', 1, 6, 1),
   6403016: (10, 0, '__out__', 0),
   6403040: (6, 0, 10, 0)},
                             elt_data={  6: {  'block': False,
         'caption': 'glob',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x37f19d0> : "glob"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 87.192309122039816,
         'posy': -30.976215082829924,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'LocalDir2DictOfFiles',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3c55a10> : "LocalDir2DictOfFiles"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 41.266968895291669,
          'posy': 7.8576145012888787,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 90.352793999429906,
                'posy': -72.413437159090364,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 89.387669892415744,
                 'posy': 49.968618598341379,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  6: [], 10: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  5: {  'position': [75.719636869139805, -74.572369643849825],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [87.192309122039816, -30.976215082829924],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [31.057076995096743, -167.06126932364518],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [46.01779933960718, -122.54187888410866],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-44.807248015563559, -30.86226323142488],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [41.266968895291669, 7.8576145012888787],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [90.352793999429906, -72.413437159090364],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [89.387669892415744, 49.968618598341379],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_LocalDir2DictOfFiles = Factory(name='LocalDir2DictOfFiles',
                authors=' (rose authors)',
                description='',
                category='data processing',
                nodemodule='rose',
                nodeclass='LocalDir2DictOfFiles',
                inputs=[{'interface': ISequence, 'name': 'listoffiles', 'value': None, 'desc': 'The list of files to make the dist from'}],
                outputs=[{'interface': IDict, 'name': 'dictoffiles', 'desc': 'a dict which associates PlantNum.mtg:realPathOfFile'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_FloralOrgan = Factory(name='FloralOrgan',
                authors=' (rose authors)',
                description='computes a flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='FloralOrgan',
                inputs=[{'interface': IFunction, 'name': 'colorFunc', 'value': None, 'desc': 'a function to color the flower'}],
                outputs=[{'interface': IFunction, 'name': 'drawFloralOrgan', 'desc': 'computes a red flower from 2 points and a either a diameter or a stage notations.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RawFruit = Factory(name='RawFruit',
                authors=' (rose authors)',
                description='computes a quick flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RawFruit',
                inputs=[{'interface': IFunction, 'name': 'colorFunc', 'value': None, 'desc': 'a function to set the Turtle color'}],
                outputs=[{'interface': IFunction, 'name': 'RawFruit', 'desc': 'computes a red fruit from 2 points.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_PetalMatrix = Factory(name='PetalMatrix',
                authors=' (wralea authors)',
                description='a control matrix points to control a bezier patch',
                category='data i/o',
                nodemodule='rose_geometry',
                nodeclass='PetalMatrix',
                inputs=[],
                outputs=[{'interface': IData, 'name': 'cmp', 'desc': 'a control points matrix to set up a bezier patch'}],
                widgetmodule=None,
                widgetclass=None,
               )




CanopyReconstruction2011 = CompositeNodeFactory(name='CanopyReconstruction2011',
                             description='make a canopy from digitized plants',
                             category='workflow',
                             doc='',
                             inputs=[],
                             outputs=[],
                             elt_factory={  2: ('Rose.mockup', 'VertexVisitor'),
   5: ('openalea.file', 'dirname'),
   6: ('Rose.mockup', 'GetLocalFiles'),
   7: ('Rose.mockup', 'Canopy2011Filenames'),
   8: ('Rose.mockup', 'RawFruit'),
   9: ('openalea.data structure', 'int'),
   10: ('openalea.file.pickle', 'pickle dump'),
   11: ('openalea.python method', 'getitem'),
   12: ('vplants.plantgl.visualization', 'plot3D'),
   13: ('Rose.mockup', 'MTG_union'),
   14: ('Rose.mockup', 'getGrid'),
   15: ('Rose.mockup', 'CropGeneration_2011'),
   16: ('Rose.mockup', 'ReconstructWithTurtle'),
   17: ('openalea.data structure.string', 'string'),
   18: ('Rose.mockup', 'Files2MTGs'),
   19: ('openalea.data structure', 'bool'),
   21: ('openalea.file.pickle', 'pickle load'),
   22: ('openalea.python method', 'getitem'),
   23: ('openalea.data structure', 'bool'),
   24: ('Rose.mockup', 'drawFlowers'),
   25: ('Rose.mockup', 'drawBuds'),
   26: ('Rose.mockup', 'GetOrigin'),
   27: ('openalea.python method', 'getitem'),
   28: ('openalea.python method', 'getitem'),
   29: ('openalea.data structure', 'float'),
   30: ('Rose.mockup', 'tempFile'),
   31: ('openalea.data structure.list', 'list'),
   32: ('Rose.mockup', 'drawLeaflets'),
   33: ('openalea.data structure', 'int'),
   34: ('Rose.mockup', 'roseMtgDataDir'),
   35: ('Rose.mockup', 'drawLeaflets'),
   36: ('openalea.data structure.list', 'list'),
   37: ('openalea.data structure', 'int')},
                             elt_connections={  6402224: (30, 0, 10, 1),
   6402248: (32, 0, 27, 0),
   6402272: (6, 0, 15, 1),
   6402296: (25, 0, 28, 0),
   6402320: (26, 0, 15, 4),
   6402344: (23, 0, 15, 6),
   6402368: (17, 0, 30, 0),
   6402392: (13, 0, 10, 0),
   6402416: (9, 0, 7, 3),
   6402440: (15, 0, 18, 0),
   6402464: (30, 0, 21, 0),
   6402488: (27, 0, 2, 0),
   6402512: (28, 0, 2, 1),
   6402536: (24, 0, 22, 0),
   6402560: (11, 0, 2, 2),
   6402584: (21, 0, 16, 0),
   6402608: (22, 0, 2, 3),
   6402632: (8, 0, 2, 4),
   6402656: (7, 1, 6, 0),
   6402680: (14, 0, 15, 0),
   6402704: (2, 0, 16, 1),
   6402728: (18, 0, 13, 0),
   6402776: (29, 0, 16, 2),
   6402800: (36, 0, 7, 2),
   6402824: (16, 0, 12, 0),
   6402848: (34, 0, 7, 4),
   6402872: (7, 0, 14, 0),
   6402896: (14, 1, 15, 3),
   6402920: (19, 0, 15, 5),
   6402944: (7, 3, 26, 0),
   6402968: (37, 0, 25, 0),
   6402992: (33, 0, 7, 1),
   6403016: (35, 0, 11, 0),
   6403040: (31, 0, 7, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'VertexVisitor',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5152510> : "VertexVisitor"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 174.18875569049845,
         'posy': 27.636038280071929,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': '.../MTGJessica',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x25089d0> : "dirname"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -19.407236524364247,
         'posy': -140.70246480164076,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'GetLocalFiles',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x5199490> : "GetLocalFiles"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -194.79330601737155,
         'posy': -37.50590301376478,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'Canopy2011Filenames',
         'delay': 0,
         'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x51998d0> : "Canopy2011Filenames"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -213.8087087449488,
         'posy': -112.68296812233788,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'RawFruit',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5199550> : "RawFruit"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 263.11848797223041,
         'posy': -18.464455296296872,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '0',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x51c66d0> : "int"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -113.45645646928656,
         'posy': -166.9320827075374,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'pickle dump',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x41b1190> : "pickle dump"',
          'hide': True,
          'id': 10,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': -27.650826342126521,
          'posy': 123.00747936130651,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2f2d750> : "getitem"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 190.95166190370927,
          'posy': -16.773460179630476,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': 'plot3D',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51bda10> : "plot3D"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 197.45712075334114,
          'posy': 131.25354733563196,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': 'MTG_union',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5199310> : "MTG_union"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -132.58068120076885,
          'posy': 99.22955558237075,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': 'GetGrid',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5199410> : "getGrid"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -256.59603813846218,
          'posy': -36.844002225497974,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   15: {  'block': False,
          'caption': 'CropGeneration_2011',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51991d0> : "CropGeneration_2011"',
          'hide': True,
          'id': 15,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -168.26402965432865,
          'posy': 31.102334803114985,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   16: {  'block': False,
          'caption': 'ReconstructWithTurtle',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5199210> : "ReconstructWithTurtle"',
          'hide': True,
          'id': 16,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 148.24407925599684,
          'posy': 86.394008086052921,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   17: {  'block': False,
          'caption': "'canopy.pf'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51cd7d0> : "string"',
          'hide': True,
          'id': 17,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 13.957922576273631,
          'posy': 33.052629586425709,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   18: {  'block': False,
          'caption': 'Files2MTGs',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51993d0> : "Files2MTGs"',
          'hide': True,
          'id': 18,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -132.40224056341603,
          'posy': 64.574878937799127,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   19: {  'block': False,
          'caption': 'True',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51c6490> : "bool"',
          'hide': True,
          'id': 19,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -27.378960329864874,
          'posy': -38.791709090465808,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   21: {  'block': False,
          'caption': 'pickle load',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x41a8ed0> : "pickle load"',
          'hide': True,
          'id': 21,
          'lazy': False,
          'port_hide_changed': set(),
          'posx': 62.443561002532476,
          'posy': 122.60557969714034,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   22: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2f2d750> : "getitem"',
          'hide': True,
          'id': 22,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 232.14407477050702,
          'posy': -85.550778286887891,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   23: {  'block': False,
          'caption': 'False',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51c6490> : "bool"',
          'hide': True,
          'id': 23,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 15.106901432465264,
          'posy': -40.417203298223924,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   24: {  'block': False,
          'caption': 'drawFlowers',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x5199650> : "drawFlowers"',
          'hide': True,
          'id': 24,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 211.85005949355309,
          'posy': -128.65749282626666,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   25: {  'block': False,
          'caption': 'drawBuds',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x51999d0> : "drawBuds"',
          'hide': True,
          'id': 25,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 126.98317010617595,
          'posy': -127.67820418923124,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   26: {  'block': False,
          'caption': 'GetOrigin',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5199810> : "GetOrigin"',
          'hide': True,
          'id': 26,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -100.85472077999472,
          'posy': -37.162089202511076,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   27: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2f2d750> : "getitem"',
          'hide': True,
          'id': 27,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 93.904984654798298,
          'posy': -17.373354869700549,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   28: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2f2d750> : "getitem"',
          'hide': True,
          'id': 28,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 139.28428772903985,
          'posy': -87.692030742592848,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   29: {  'block': False,
          'caption': '4.20',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51c6550> : "float"',
          'hide': True,
          'id': 29,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 268.1845872664436,
          'posy': 26.888546061706208,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   30: {  'block': False,
          'caption': 'tempFile',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x5199790> : "tempFile"',
          'hide': True,
          'id': 30,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 20.838755736201051,
          'posy': 68.270601468442194,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   31: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3be6190> : "list"',
          'hide': True,
          'id': 31,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -216.95481530601063,
          'posy': -166.50456632233985,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   32: {  'block': False,
          'caption': 'drawLeaflets',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x51524d0> : "drawLeaflets"',
          'hide': True,
          'id': 32,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 72.840555131929094,
          'posy': -54.187078679370373,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   33: {  'block': False,
          'caption': '0',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51c66d0> : "int"',
          'hide': True,
          'id': 33,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -179.50405061105522,
          'posy': -164.25226905230784,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   34: {  'block': False,
          'caption': 'roseMtgDataDir',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x5199290> : "roseMtgDataDir"',
          'hide': True,
          'id': 34,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -86.366762376039887,
          'posy': -169.33697970326719,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   35: {  'block': False,
          'caption': 'drawLeaflets',
          'delay': 0,
          'factory': '<openalea.core.compositenode.CompositeNodeFactory object at 0x51524d0> : "drawLeaflets"',
          'hide': True,
          'id': 35,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 170.7962114907462,
          'posy': -55.393365888890543,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   36: {  'block': False,
          'caption': 'list',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x3be6190> : "list"',
          'hide': True,
          'id': 36,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': -153.24803770264236,
          'posy': -165.19339271486038,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   37: {  'block': False,
          'caption': '10',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51c66d0> : "int"',
          'hide': True,
          'id': 37,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 148.44326709179697,
          'posy': -172.01674328151819,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 0,
                'posy': 0,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 0,
                 'posy': 0,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   5: [(0, "'/mnt/echange/samba/DigitsModeleStructure2011/MTGJessica'")],
   6: [(1, "'*.mtg'")],
   7: [(4, "path('/home/hautret/developpement/rose/share/MTG')")],
   8: [(0, 'None')],
   9: [(0, '0')],
   10: [(2, 'False')],
   11: [(1, '2')],
   12: [],
   13: [],
   14: [],
   15: [],
   16: [],
   17: [(0, "'canopy.pf'")],
   18: [],
   19: [(0, 'True')],
   21: [],
   22: [(1, '2')],
   23: [(0, 'False')],
   24: [(0, 'None')],
   25: [],
   26: [],
   27: [(1, '2')],
   28: [(1, '2')],
   29: [(0, '4.2000000000000002')],
   30: [],
   31: [  (  0,
             "['Manip1_C1_PARfort', 'Manip1_C2_PARfaible', 'Manip2_C1_PARfort', 'Manip2_C2_PARfaible', 'Manip3_PARfort', 'Manip3_PARfaible']")],
   32: [],
   33: [(0, '0')],
   34: [],
   35: [],
   36: [(0, "['P1', 'P2', 'P3']")],
   37: [(0, '10')],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {'position': [174.18875569049845, 27.636038280071929], 'userColor': None, 'useUserColor': False},
   3: {  'position': [-158.80362547620638, -174.68398802382703],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-230.46011170157007, -175.14528507985492],
         'useUserColor': False,
         'userColor': None},
   5: {'position': [-19.407236524364247, -140.70246480164076], 'userColor': None, 'useUserColor': False},
   6: {'position': [-194.79330601737155, -37.50590301376478], 'userColor': None, 'useUserColor': False},
   7: {'position': [-213.8087087449488, -112.68296812233788], 'userColor': None, 'useUserColor': False},
   8: {'position': [263.11848797223041, -18.464455296296872], 'userColor': None, 'useUserColor': False},
   9: {'position': [-113.45645646928656, -166.9320827075374], 'userColor': None, 'useUserColor': False},
   10: {'position': [-27.650826342126521, 123.00747936130651], 'userColor': None, 'useUserColor': False},
   11: {'position': [190.95166190370927, -16.773460179630476], 'userColor': None, 'useUserColor': False},
   12: {'position': [197.45712075334114, 131.25354733563196], 'userColor': None, 'useUserColor': False},
   13: {'position': [-132.58068120076885, 99.22955558237075], 'userColor': None, 'useUserColor': False},
   14: {'position': [-256.59603813846218, -36.844002225497974], 'userColor': None, 'useUserColor': False},
   15: {'position': [-168.26402965432865, 31.102334803114985], 'userColor': None, 'useUserColor': False},
   16: {'position': [148.24407925599684, 86.394008086052921], 'userColor': None, 'useUserColor': False},
   17: {'position': [13.957922576273631, 33.052629586425709], 'userColor': None, 'useUserColor': False},
   18: {'position': [-132.40224056341603, 64.574878937799127], 'userColor': None, 'useUserColor': False},
   19: {'position': [-27.378960329864874, -38.791709090465808], 'userColor': None, 'useUserColor': False},
   20: {  'position': [-140.83518631861594, -9.7981852050721443],
          'useUserColor': False,
          'userColor': None},
   21: {'position': [62.443561002532476, 122.60557969714034], 'userColor': None, 'useUserColor': False},
   22: {'position': [232.14407477050702, -85.550778286887891], 'userColor': None, 'useUserColor': False},
   23: {'position': [15.106901432465264, -40.417203298223924], 'userColor': None, 'useUserColor': False},
   24: {'position': [211.85005949355309, -128.65749282626666], 'userColor': None, 'useUserColor': False},
   25: {'position': [126.98317010617595, -127.67820418923124], 'userColor': None, 'useUserColor': False},
   26: {'position': [-100.85472077999472, -37.162089202511076], 'userColor': None, 'useUserColor': False},
   27: {'position': [93.904984654798298, -17.373354869700549], 'userColor': None, 'useUserColor': False},
   28: {'position': [139.28428772903985, -87.692030742592848], 'userColor': None, 'useUserColor': False},
   29: {'position': [268.1845872664436, 26.888546061706208], 'userColor': None, 'useUserColor': False},
   30: {'position': [20.838755736201051, 68.270601468442194], 'userColor': None, 'useUserColor': False},
   31: {'position': [-216.95481530601063, -166.50456632233985], 'userColor': None, 'useUserColor': False},
   32: {'position': [72.840555131929094, -54.187078679370373], 'userColor': None, 'useUserColor': False},
   33: {'position': [-179.50405061105522, -164.25226905230784], 'userColor': None, 'useUserColor': False},
   34: {'position': [-86.366762376039887, -169.33697970326719], 'userColor': None, 'useUserColor': False},
   35: {'position': [170.7962114907462, -55.393365888890543], 'userColor': None, 'useUserColor': False},
   36: {'position': [-153.24803770264236, -165.19339271486038], 'userColor': None, 'useUserColor': False},
   37: {'position': [148.44326709179697, -172.01674328151819], 'userColor': None, 'useUserColor': False},
   38: {  'position': [-206.50988739491825, -114.53730161112151],
          'useUserColor': False,
          'userColor': None},
   39: {  'position': [-403.25264928191103, -169.37285768988127],
          'useUserColor': False,
          'userColor': None},
   40: {  'position': [-507.2847787828747, -85.112166463315361],
          'useUserColor': False,
          'userColor': None},
   '__in__': {'position': [0, 0], 'userColor': None, 'useUserColor': True},
   '__out__': {'position': [0, 0], 'userColor': None, 'useUserColor': True}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_BuiltBud = Factory(name='BuiltBud',
                authors=' (rose authors)',
                description='a function builds a bud with 2 spheres and a paraboloid.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BuiltBud',
                inputs=[{'interface': IInt, 'name': 'stride', 'value': 10, 'desc': 'the number of splices of the graphic primitives.'}],
                outputs=[{'interface': IFunction, 'name': 'compute_bud', 'desc': 'function to draw a bud'}],
                widgetmodule=None,
                widgetclass=None,
               )




drawFlowers = CompositeNodeFactory(name='drawFlowers',
                             description='returns a list of functions that draw flowers',
                             category='composite',
                             doc='',
                             inputs=[  {  'desc': 'a function that colors the turtle.',
      'interface': ISequence,
      'name': 'colorFunc',
      'value': None}],
                             outputs=[  {  'desc': 'a list of functions that draw flowers',
      'interface': ISequence,
      'name': 'drawFlower'}],
                             elt_factory={  2: ('Rose.mockup', 'BezierPatchFlower'),
   3: ('Rose.mockup', 'RawFlower'),
   4: ('Rose.mockup', 'NoOrgan'),
   6: ('openalea.data structure', 'int'),
   7: ('Rose.mockup', 'FloralOrgan'),
   8: ('Rose.mockup', 'PetalMatrix')},
                             elt_connections={  6402824: ('__in__', 0, 7, 0),
   6402848: (7, 0, '__out__', 0),
   6402872: (2, 0, '__out__', 0),
   6402896: (8, 0, 2, 0),
   6402920: (6, 0, 2, 1),
   6402944: (4, 0, '__out__', 0),
   6402968: ('__in__', 0, 2, 3),
   6402992: (3, 0, '__out__', 0),
   6403016: (6, 0, 2, 2),
   6403040: ('__in__', 0, 3, 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'BezierPatchFlower',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5b05cd0> : "BezierPatchFlower"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 21.301224556255747,
         'posy': -17.836943972594959,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'RawFlower',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5b05b10> : "RawFlower"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -58.285370348544177,
         'posy': -18.88808506141196,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5b05b50> : "NoOrgan"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -127.8436064851085,
         'posy': -19.308622402272615,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': '8',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x51c4ad0> : "int"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 72.646135692279486,
         'posy': -65.534188292166093,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'FloralOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5b05d10> : "FloralOrgan"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 145.42320294951963,
         'posy': -17.152480347892059,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'PetalMatrix',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5b059d0> : "PetalMatrix"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -8.138242106073001,
         'posy': -65.002586757260033,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 9.3069414733946552,
                'posy': -151.03460506900038,
                'priority': 0,
                'use_user_color': True,
                'user_application': None,
                'user_color': 255},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 27.937139245711872,
                 'posy': 79.252600149380527,
                 'priority': 0,
                 'use_user_color': True,
                 'user_application': None,
                 'user_color': 255}},
                             elt_value={  2: [],
   3: [],
   4: [],
   6: [(0, '10')],
   7: [],
   8: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [21.301224556255747, -17.836943972594959],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-58.285370348544177, -18.88808506141196],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-127.8436064851085, -19.308622402272615],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [103.60166285446122, -121.20294333413273],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [72.646135692279486, -65.534188292166093],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [145.42320294951963, -17.152480347892059],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [-8.138242106073001, -65.002586757260033],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-53.156918921739489, -96.013399618634139],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [9.3069414733946552, -151.03460506900038],
                'useUserColor': True,
                'userColor': [255, 255, 127]},
   '__out__': {  'position': [27.937139245711872, 79.252600149380527],
                 'useUserColor': True,
                 'userColor': [255, 255, 127]}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_PolygonLeaflet = Factory(name='PolygonLeaflet',
                authors=' (rose authors)',
                description='computes a quick leaflet.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='PolygonLeaflet',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'PolygonLeaflet', 'desc': 'compute a 2 facets leaflets from 4 points.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RawFlower = Factory(name='RawFlower',
                authors=' (rose authors)',
                description='computes a quick flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RawFlower',
                inputs=[{'interface': IFunction, 'name': 'colorFunc', 'value': None, 'desc': 'a function to set the Turtle color'}],
                outputs=[{'interface': IFunction, 'name': 'RawFlower', 'desc': 'computes a conic red flower from 2 points and a diameter.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_NoOrgan = Factory(name='NoOrgan',
                authors=' (rose authors)',
                description='computes no leaflet in order to be able to look at the trunk.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='NoOrgan',
                inputs=[],
                outputs=[{'interface': IFunction, 'name': 'PolygonLeaflet', 'desc': 'Makes nothing.'}],
                widgetmodule=None,
                widgetclass=None,
               )




GetWebFiles = CompositeNodeFactory(name='GetWebFiles',
                             description='Get MTGs from a webserver',
                             category='data i/o',
                             doc='',
                             inputs=[  {  'desc': 'the URL of the server, including http://',
      'interface': IStr,
      'name': 'ServerName',
      'value': None},
   {  'desc': 'the directory where to get the files from',
      'interface': IStr,
      'name': 'DataDir',
      'value': None},
   {  'desc': 'A string to filter filenames with.',
      'interface': IStr,
      'name': 'FileNameFilter',
      'value': None}],
                             outputs=[  {  'desc': 'the dictionnary that associates MTG files to temp files.',
      'interface': IDict,
      'name': 'DictOfFiles'}],
                             elt_factory={  5: ('openalea.python method', 'print'),
   9: ('openalea.math', '+'),
   10: ('Rose.mockup', 'HttpDir2DictOfFiles')},
                             elt_connections={  6402872: ('__in__', 2, 10, 1),
   6402896: (10, 0, '__out__', 0),
   6402920: ('__in__', 0, 9, 0),
   6402944: (9, 0, 10, 0),
   6402968: ('__in__', 1, 9, 1),
   6403016: (10, 0, 5, 0)},
                             elt_data={  5: {  'block': False,
         'caption': 'print',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x1e24990> : "print"',
         'hide': True,
         'id': 5,
         'lazy': False,
         'port_hide_changed': set(),
         'posx': 22.112740619081741,
         'posy': 139.00725106939879,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x43d8dd0> : "+"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 57.299535035246208,
         'posy': -10.862803670320648,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'httpDir2DictOfFiles',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x67322d0> : "HttpDir2DictOfFiles"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 18.029314677248792,
          'posy': 50.549019939773281,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 56.042165150349334,
                'posy': -68.461016869243181,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 118.70269723862339,
                 'posy': 143.36518211047655,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  5: [], 9: [(1, '0')], 10: [], '__in__': [], '__out__': []},
                             elt_ad_hoc={  2: {  'position': [3.2113821928186255, 60.330313302205496],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-24.793391075541848, -18.168406617407726],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-20.793391075541848, 15.886574346013159],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [22.112740619081741, 139.00725106939879],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [-24.916817856452088, -140.31400327658361],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [42.575997663737176, -90.418396575988723],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [57.299535035246208, -10.862803670320648],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [18.029314677248792, 50.549019939773281],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [56.042165150349334, -68.461016869243181],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [118.70269723862339, 143.36518211047655],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




rose_geometry_RevolutionBud = Factory(name='RevolutionBud',
                authors=' (rose authors)',
                description='draws up a bud from a revolution volume.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RevolutionBud',
                inputs=[{'interface': IData, 'name': 'revFig', 'value': None, 'desc': 'a revolution volume'}, {'interface': IInt, 'name': 'stride', 'value': 8, 'desc': 'the rotation stride of the revolution figure'}],
                outputs=[{'interface': IFunction, 'name': 'rev_bud', 'desc': 'A function that draws a bud from a 3D revolution volume.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_RevolutionFig = Factory(name='RevolutionFig',
                authors=' (rose authors)',
                description='returns a 3D revolution volume.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='RevolutionFig',
                inputs=[{'interface': ISequence, 'name': 'pointArray', 'value': None, 'desc': 'a 2D points array'}, {'interface': IInt, 'name': 'stride', 'value': 8, 'desc': 'the 3D volume number of revolution slices.'}],
                outputs=[{'interface': IData, 'name': 'rev_fig', 'desc': 'A 3D revolution volume.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_GetOrigin = Factory(name='GetOrigin',
                authors=' (rose authors) ',
                description='Makes a dictionnary of pairs {plant num : plant position} in a 2D grid of int coordinates',
                category='data processing',
                nodemodule='rose',
                nodeclass='GetOrigin',
                inputs=[{'interface': IFileStr, 'name': 'OriginFilename', 'value': '', 'desc': 'A file which contains a header line (i.e "x","y","z" and a data line with a 3D origine coordinate.'}],
                outputs=[{'interface': ISequence, 'name': 'origin', 'desc': 'A vector of 3D coordinates.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_BudArray = Factory(name='budArray',
                authors=' (rose authors)',
                description='returns a points array.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BudArray',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'bud_array', 'desc': 'A Vector2 array.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_BezierPatchFlower = Factory(name='BezierPatchFlower',
                authors=' (rose authors)',
                description='computes a flower.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='BezierPatchFlower',
                inputs=[{'interface': ISequence, 'name': 'controlPointMatrix', 'value': None, 'desc': 'control points matrix of Vector4'}, {'interface': IInt, 'name': 'uStride', 'value': 8, 'desc': '"U" stride'}, {'interface': IInt, 'name': 'vStride', 'value': 8, 'desc': '"V" stride'}],
                outputs=[{'interface': IFunction, 'name': 'BezierPatchFlower', 'desc': 'computes a red flower from 2 points and a diameter.'}],
                widgetmodule=None,
                widgetclass=None,
               )




Canopy2011Filenames = CompositeNodeFactory(name='Canopy2011Filenames',
                             description='drives data search for CanopyReconstruction2011 nodes',
                             category='data processing',
                             doc='',
                             inputs=[  {  'desc': 'List of experimentation folders',
      'interface': ISequence,
      'name': 'PosFilesList',
      'value': None},
   {  'desc': 'Index to select the experiment',
      'interface': IInt,
      'name': 'ManipIndex',
      'value': 0},
   {  'desc': 'List of prelevements for an experiment (P1 .. PN)',
      'interface': ISequence,
      'name': 'PrelevList',
      'value': None},
   {  'desc': 'Index to select the prelevementof the experiment',
      'interface': IInt,
      'name': 'PrelevIndex',
      'value': 0},
   {  'desc': 'root directory to search for pathes generated by other entries',
      'interface': IStr,
      'name': 'DataDir',
      'value': None}],
                             outputs=[  {  'desc': 'Actual position File',
      'interface': IStr,
      'name': 'Out4GridToDict'},
   {  'desc': 'directory to get MTG files from',
      'interface': IStr,
      'name': 'Out4GetLocal'},
   {  'desc': '(part of) the remote directory to get MTG files from',
      'interface': IStr,
      'name': 'Out4GetWeb'},
   {  'desc': 'the path to the origin file',
      'interface': IStr,
      'name': 'Out4GetOrigin'}],
                             elt_factory={  2: ('openalea.data structure.string', 'string'),
   4: ('openalea.math', '+'),
   6: ('openalea.data structure.string', 'string'),
   7: ('openalea.math', '+'),
   8: ('openalea.math', '+'),
   9: ('openalea.math', '+'),
   10: ('openalea.python method', 'getitem'),
   11: ('openalea.python method', 'getitem'),
   12: ('openalea.data structure.string', 'string'),
   13: ('openalea.math', '+'),
   14: ('openalea.math', '+')},
                             elt_connections={  6402584: (10, 0, 13, 0),
   6402608: (8, 0, 14, 1),
   6402632: (7, 0, '__out__', 1),
   6402656: (12, 0, 4, 1),
   6402680: (6, 0, 9, 1),
   6402704: ('__in__', 4, 7, 0),
   6402728: ('__in__', 0, 10, 0),
   6402752: (11, 0, 8, 1),
   6402776: ('__in__', 3, 11, 1),
   6402800: (2, 0, 13, 1),
   6402824: (7, 0, 9, 0),
   6402848: (2, 0, 14, 0),
   6402872: (13, 0, 8, 0),
   6402896: (14, 0, '__out__', 2),
   6402920: ('__in__', 2, 11, 0),
   6402944: (14, 0, 7, 1),
   6402968: (4, 0, '__out__', 0),
   6402992: ('__in__', 1, 10, 1),
   6403016: (7, 0, 4, 0),
   6403040: (9, 0, '__out__', 3)},
                             elt_data={  2: {  'block': False,
         'caption': "'/'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x51ca890> : "string"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 96.829437224558447,
         'posy': -70.552169717533218,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 127.30851176893896,
         'posy': 363.67610498610736,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': "'/origin.txt'",
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x51ca890> : "string"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 269.24564043724502,
         'posy': 213.22316718690757,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 184.29300108242055,
         'posy': 142.83792207769739,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 100.97739479192117,
         'posy': 58.76418930828703,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': '+',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 292.10699457249888,
         'posy': 338.82882217110182,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   10: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2f2d790> : "getitem"',
          'hide': True,
          'id': 10,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 37.616563672692095,
          'posy': -43.518182536315592,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   11: {  'block': False,
          'caption': 'getitem',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x2f2d790> : "getitem"',
          'hide': True,
          'id': 11,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 115.44766501715497,
          'posy': -45.161636239104816,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   12: {  'block': False,
          'caption': "'/grid.txt'",
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x51ca890> : "string"',
          'hide': True,
          'id': 12,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 116.47827289858088,
          'posy': 217.61755405159033,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   13: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
          'hide': True,
          'id': 13,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 78.720505365437646,
          'posy': 10.0,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   14: {  'block': False,
          'caption': '+',
          'delay': 0,
          'factory': '<openalea.core.node.NodeFactory object at 0x497a510> : "+"',
          'hide': True,
          'id': 14,
          'lazy': True,
          'port_hide_changed': set(),
          'posx': 147.44101073087526,
          'posy': 101.09462339139411,
          'priority': 0,
          'use_user_color': False,
          'user_application': None,
          'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 227.99286178218253,
                'posy': -320.39691806190115,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 260.49286178218256,
                 'posy': 430.38719052061322,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [(0, "'/'")],
   4: [],
   6: [(0, "'/origin.txt'")],
   7: [],
   8: [],
   9: [],
   10: [],
   11: [],
   12: [(0, "'/grid.txt'")],
   13: [],
   14: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [96.829437224558447, -70.552169717533218],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [-93.181881214030895, -1.1221263839932023],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [127.30851176893896, 363.67610498610736],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [-8.1928777513867743, 101.87096399554076],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [269.24564043724502, 213.22316718690757],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [184.29300108242055, 142.83792207769739],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [100.97739479192117, 58.76418930828703],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [292.10699457249888, 338.82882217110182],
         'useUserColor': False,
         'userColor': None},
   10: {  'position': [37.616563672692095, -43.518182536315592],
          'useUserColor': False,
          'userColor': None},
   11: {  'position': [115.44766501715497, -45.161636239104816],
          'useUserColor': False,
          'userColor': None},
   12: {  'position': [116.47827289858088, 217.61755405159033],
          'useUserColor': False,
          'userColor': None},
   13: {  'position': [78.720505365437646, 10.0],
          'useUserColor': False,
          'userColor': None},
   14: {  'position': [147.44101073087526, 101.09462339139411],
          'useUserColor': False,
          'userColor': None},
   '__in__': {  'position': [227.99286178218253, -320.39691806190115],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [260.49286178218256, 430.38719052061322],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




tempPickleFile_tempPickleFile = Factory(name='tempFile',
                authors=' (wralea authors)',
                description='returns a path to a file inside a temp dir according to the os ',
                category='data i/o',
                nodemodule='tempPickleFile',
                nodeclass='tempPickleFile',
                inputs=[{'interface': IStr, 'name': 'filename', 'value': None, 'desc': 'a name for a pickle file'}],
                outputs=[{'interface': IData, 'name': 'pickleFile', 'desc': 'returns a name for a pickle file'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_colors_ColorFuncs = Factory(name='colorFunc',
                authors=' (rose authors)',
                description='returns a list of colorFuncs.',
                category='data processing',
                nodemodule='rose_colors',
                nodeclass='ColorFuncs',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'colorFuncs', 'desc': 'A list of functions to color the turtle.'}],
                widgetmodule=None,
                widgetclass=None,
               )




rose_geometry_FineBudArray = Factory(name='fineBudArray',
                authors=' (rose authors)',
                description='returns a points array.',
                category='data processing',
                nodemodule='rose_geometry',
                nodeclass='FineBudArray',
                inputs=[],
                outputs=[{'interface': ISequence, 'name': 'bud_array', 'desc': 'A Vector2 array.'}],
                widgetmodule=None,
                widgetclass=None,
               )




drawBuds = CompositeNodeFactory(name='drawBuds',
                             description='alist of functions to draw buds',
                             category='data processing',
                             doc='',
                             inputs=[  {  'desc': 'stride to draw axissymetric primitives',
      'interface': IInt,
      'name': 'stride',
      'value': 8}],
                             outputs=[  {  'desc': 'a list of functions that draw buds',
      'interface': ISequence,
      'name': 'drawbud'}],
                             elt_factory={  2: ('Rose.mockup', 'BuiltBud'),
   3: ('openalea.python method', 'getitem'),
   4: ('Rose.mockup', 'NoOrgan'),
   5: ('Rose.mockup', 'RevolutionBud'),
   6: ('Rose.mockup', 'budArray'),
   7: ('Rose.mockup', 'fineBudArray'),
   8: ('Rose.mockup', 'RevolutionFig'),
   9: ('Rose.mockup', 'RawBud')},
                             elt_connections={  6402824: (9, 0, '__out__', 0),
   6402848: (4, 0, '__out__', 0),
   6402872: (6, 0, 3, 0),
   6402896: (5, 0, '__out__', 0),
   6402920: (3, 0, 8, 0),
   6402944: (7, 0, 3, 0),
   6402968: (8, 0, 5, 0),
   6402992: ('__in__', 0, 8, 1),
   6403016: ('__in__', 0, 2, 0),
   6403040: (2, 0, '__out__', 0)},
                             elt_data={  2: {  'block': False,
         'caption': 'BuiltBud',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x7201910> : "BuiltBud"',
         'hide': True,
         'id': 2,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 1.5127998508044769,
         'posy': -11.298195738342841,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   3: {  'block': False,
         'caption': 'getitem',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x5dda290> : "getitem"',
         'hide': True,
         'id': 3,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 102.34698933445478,
         'posy': -95.651391901359602,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   4: {  'block': False,
         'caption': 'NoOrgan',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x7201b90> : "NoOrgan"',
         'hide': True,
         'id': 4,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -146.93310712644185,
         'posy': -11.849634346023027,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   5: {  'block': False,
         'caption': 'RevolutionBud',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x7201b10> : "RevolutionBud"',
         'hide': True,
         'id': 5,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 88.618655360555465,
         'posy': -13.087143196706499,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   6: {  'block': False,
         'caption': 'budArray',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x7201cd0> : "budArray"',
         'hide': True,
         'id': 6,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 52.814112186278436,
         'posy': -140.86544681736933,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   7: {  'block': False,
         'caption': 'fineBudArray',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x7201e10> : "fineBudArray"',
         'hide': True,
         'id': 7,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 124.55287960949508,
         'posy': -142.16865012520782,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   8: {  'block': False,
         'caption': 'RevolutionFig',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x7201c50> : "RevolutionFig"',
         'hide': True,
         'id': 8,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': 90.979672268518328,
         'posy': -48.227761233479264,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   9: {  'block': False,
         'caption': 'RawBud',
         'delay': 0,
         'factory': '<openalea.core.node.NodeFactory object at 0x7201890> : "RawBud"',
         'hide': True,
         'id': 9,
         'lazy': True,
         'port_hide_changed': set(),
         'posx': -69.95082836441226,
         'posy': -13.817447578155512,
         'priority': 0,
         'use_user_color': False,
         'user_application': None,
         'user_color': None},
   '__in__': {  'block': False,
                'caption': 'In',
                'delay': 0,
                'hide': True,
                'id': 0,
                'lazy': True,
                'port_hide_changed': set(),
                'posx': 30.868351622890948,
                'posy': -148.88503128092438,
                'priority': 0,
                'use_user_color': False,
                'user_application': None,
                'user_color': None},
   '__out__': {  'block': False,
                 'caption': 'Out',
                 'delay': 0,
                 'hide': True,
                 'id': 1,
                 'lazy': True,
                 'port_hide_changed': set(),
                 'posx': 57.14491089663882,
                 'posy': 122.05368212305373,
                 'priority': 0,
                 'use_user_color': False,
                 'user_application': None,
                 'user_color': None}},
                             elt_value={  2: [],
   3: [(1, '0')],
   4: [],
   5: [],
   6: [],
   7: [],
   8: [],
   9: [],
   '__in__': [],
   '__out__': []},
                             elt_ad_hoc={  2: {  'position': [1.5127998508044769, -11.298195738342841],
         'useUserColor': False,
         'userColor': None},
   3: {  'position': [102.34698933445478, -95.651391901359602],
         'useUserColor': False,
         'userColor': None},
   4: {  'position': [-146.93310712644185, -11.849634346023027],
         'useUserColor': False,
         'userColor': None},
   5: {  'position': [88.618655360555465, -13.087143196706499],
         'useUserColor': False,
         'userColor': None},
   6: {  'position': [52.814112186278436, -140.86544681736933],
         'useUserColor': False,
         'userColor': None},
   7: {  'position': [124.55287960949508, -142.16865012520782],
         'useUserColor': False,
         'userColor': None},
   8: {  'position': [90.979672268518328, -48.227761233479264],
         'useUserColor': False,
         'userColor': None},
   9: {  'position': [-69.95082836441226, -13.817447578155512],
         'useUserColor': False,
         'userColor': None},
   '__in__': {  'position': [30.868351622890948, -148.88503128092438],
                'useUserColor': False,
                'userColor': None},
   '__out__': {  'position': [57.14491089663882, 122.05368212305373],
                 'useUserColor': False,
                 'userColor': None}},
                             lazy=True,
                             eval_algo='LambdaEvaluation',
                             )




